find_nearest_non_na_id(annual_data, as.matrix(climatologies[1,3:2]))
extract_row_column <- function(list_object, coordinate) {
result <- character(nrow(coordinate))  # Use character vector to store "row,col"
for (i in seq_len(nrow(coordinate))) {
extracted_value <- terra::extract(list_object, coordinate[i, ], na.rm = FALSE)[1, 2]
extracted_id <- terra::extract(list_object, coordinate[i, ], na.rm = FALSE,cells=TRUE)[1,3]
result[i] <- ifelse(is.na(extracted_value), find_nearest_non_na_id(list_object,coordinate[i,]), extracted_id)
if (is.na(extracted_value)){
print("its na")
print(find_nearest_non_na_id(list_object,as.matrix(coordinate[i,])))}else{
print(extracted_id)
}
}
return(extracted_id)
}
extract_row_column(annual_data,climatologies[, 3:2])
extract_row_column <- function(list_object, coordinate) {
result <- character(nrow(coordinate))  # Use character vector to store "row,col"
for (i in seq_len(nrow(coordinate))) {
extracted_value <- terra::extract(list_object, coordinate[i, ], na.rm = FALSE)[1, 2]
extracted_id <- terra::extract(list_object, coordinate[i, ], na.rm = FALSE,cells=TRUE)[1,3]
result[i] <- ifelse(is.na(extracted_value), find_nearest_non_na_id(list_object,as.matrix(coordinate[i,])), extracted_id)
if (is.na(extracted_value)){
print("its na")
print(find_nearest_non_na_id(list_object,as.matrix(coordinate[i,])))}else{
print(extracted_id)
}
}
return(extracted_id)
}
extract_row_column(annual_data,climatologies[, 3:2])
climatologies <- datasets_info %>%
map_df(function(info) {
calculate_climatology(info$start_year, info$end_year, data_ground) %>%
mutate(source = info$dataset_name)}) %>%
left_join(acpStation[, c('site', 'latitude', 'longitude', 'Elevation')], by = c("site" = "site")) %>%
left_join(striStation[, c('alias', 'latitude', 'longitude')], by = c("site" = "alias")) %>%
mutate(latitude = ifelse(is.na(latitude.x), latitude.y, latitude.x),
longitude = ifelse(is.na(longitude.x), longitude.y, longitude.x),
longitude = -1 * abs(longitude)) %>%
dplyr::select(site, latitude, longitude, source, annual, jfma, Elevation)
extract_land(annual_data,climatologies[,3:2])
extract_row_column(annual_data,climatologies[,3:2])
extract_row_column <- function(list_object, coordinate) {
result <- character(nrow(coordinate))  # Use character vector to store "row,col"
for (i in seq_len(nrow(coordinate))) {
extracted_value <- terra::extract(list_object, coordinate[i, ], na.rm = FALSE)[1, 2]
extracted_id <- terra::extract(list_object, coordinate[i, ], na.rm = FALSE,cells=TRUE)[1,3]
result[i] <- ifelse(is.na(extracted_value), find_nearest_non_na_id(list_object,as.matrix(coordinate[i,])), extracted_id)
}
return(result)
}
extract_row_column(annual_data,climatologies[,3:2])
climatologies[[source$dataset_name]] <- extract_land(annual_data,climatologies[,3:2])
#| warning: false
#| output: false
climatologies <- datasets_info %>%
map_df(function(info) {
calculate_climatology(info$start_year, info$end_year, data_ground) %>%
mutate(source = info$dataset_name)}) %>%
left_join(acpStation[, c('site', 'latitude', 'longitude', 'Elevation')], by = c("site" = "site")) %>%
left_join(striStation[, c('alias', 'latitude', 'longitude')], by = c("site" = "alias")) %>%
mutate(latitude = ifelse(is.na(latitude.x), latitude.y, latitude.x),
longitude = ifelse(is.na(longitude.x), longitude.y, longitude.x),
longitude = -1 * abs(longitude)) %>%
dplyr::select(site, latitude, longitude, source, annual, jfma, Elevation)
#extract the values at the coordinates for climatologies
for (source in datasets_info) {
files <- list.files(source$path, pattern = "\\.tif$", full.names = TRUE)
annual_data <- annual_pan(files, extentMap)
climatologies[[source$dataset_name]] <- extract_land(annual_data,climatologies[,3:2])
climatologies["cell_num"]extract_row_column(annual_data,climatologies[,3:2])
#| warning: false
#| output: false
climatologies <- datasets_info %>%
map_df(function(info) {
calculate_climatology(info$start_year, info$end_year, data_ground) %>%
mutate(source = info$dataset_name)}) %>%
left_join(acpStation[, c('site', 'latitude', 'longitude', 'Elevation')], by = c("site" = "site")) %>%
left_join(striStation[, c('alias', 'latitude', 'longitude')], by = c("site" = "alias")) %>%
mutate(latitude = ifelse(is.na(latitude.x), latitude.y, latitude.x),
longitude = ifelse(is.na(longitude.x), longitude.y, longitude.x),
longitude = -1 * abs(longitude)) %>%
dplyr::select(site, latitude, longitude, source, annual, jfma, Elevation)
#extract the values at the coordinates for climatologies
for (source in datasets_info) {
files <- list.files(source$path, pattern = "\\.tif$", full.names = TRUE)
annual_data <- annual_pan(files, extentMap)
climatologies[[source$dataset_name]] <- extract_land(annual_data,climatologies[,3:2])
climatologies["cell_num"]<-extract_row_column(annual_data,climatologies[,3:2])
jfma_data = jfma_pan(files, extentMap)
column_name = paste(source$dataset_name, "_jfma", sep = "")
climatologies[[column_name]] = extract_land(jfma_data, climatologies[,3:2])
}
write.csv(climatologies,file="../tables/climatologies.csv")
View(climatologies)
sources_unique <- unique(climatologies$cell_num)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, data_column]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%                  # Group by the data column value
filter(n() > 1) %>%                            # Keep groups with more than 1 site
summarize(sites = paste(site, collapse = ", "))  # Concatenate sites with the same value
# Print the results
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique Values:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$cell_num)
sources_unique
sources_unique <- unique(climatologies$sources)
sources_unique
sources_unique <- unique(climatologies$source)
sources_unique
sources_unique <- unique(climatologies$source)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, "cell_num"]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%                  # Group by the data column value
filter(n() > 1) %>%                            # Keep groups with more than 1 site
summarize(sites = paste(site, collapse = ", "))  # Concatenate sites with the same value
# Print the results
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique Values:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$source)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, "cell_num"]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(cell_num)) %>%                  # Group by the data column value
filter(n() > 1) %>%                            # Keep groups with more than 1 site
summarize(sites = paste(site, collapse = ", "))  # Concatenate sites with the same value
# Print the results
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique Values:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$source)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, "cell_num"]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%                  # Group by the data column value
filter(n() > 1) %>%                            # Keep groups with more than 1 site
summarize(sites = paste(site, collapse = ", "))  # Concatenate sites with the same value
# Print the results
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique Values:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
unique_values
nrow(unique(climatologies[climatologies$source == source, "cell_num"]))
unique(climatologies[climatologies$source == source, "cell_num"])
climatologies[[source$dataset_name]]
climatologies
climatologies[[source$dataset_name]]
datasets_info <- list(
list(start_year = 1979, end_year = 2013, dataset_name = "CHELSA 1.2",column_name="CHELSA1.2", temporal = "1979-2013",path = "../data_reanalysis/CHELSA 1.2/"),
list(start_year = 1981, end_year = 2010, dataset_name = "CHELSA 2.1",column_name="CHELSA2.1", temporal = "1981-2010", path = "../data_reanalysis/CHELSA 2.1/"),
list(start_year = 2003, end_year = 2016, dataset_name = "CHELSA EarthEnv",column_name="CHELSA_EarthEnv", temporal = "2003-2016",path = "../data_reanalysis/CHELSA EarthEnv/climatology"),
list(start_year = 1980, end_year = 2009, dataset_name = "CHPclim",column_name="CHPclim", temporal = "1980-2009", path = "../data_reanalysis/CHPclim/"),
list(start_year = 1970, end_year = 2000, dataset_name = "WorldClim 2.1",column_name="WorldClim2.1", temporal = "1970-2000", path = "../data_reanalysis/WorldClim 2.1"),
list(start_year = 1981, end_year = 2016, dataset_name = "CHIRPS 2.0",column_name="CHIRPS2.0",temporal = "1981-2016", path = "../data_reanalysis/CHIRPS 2.0/climatology"),
list(start_year = 1979, end_year = 2016, dataset_name = "CHELSA-W5E5v1.0",column_name="CHELSAW5E5v1.0", temporal = "1979-2016",path = "../data_reanalysis/CHELSA-W5E5v1.0/climatology"),
list(start_year = 1981, end_year = 2010, dataset_name = "TerraClimate",column_name="TerraClimate", temporal = "1981-2010", path = "../data_reanalysis/TerraClimate"),
list(start_year = 1979, end_year = 2013, dataset_name = "PBCOR CHELSA 1.2",column_name="PBCOR_CHELSA1.2", temporal = "1979-2013", path = "../data_reanalysis/PBCOR/CHELSA 1.2 corrected"),
list(start_year = 1980, end_year = 2009, dataset_name = "PBCOR CHPclim",column_name="PBCOR_CHPclim", temporal = "1980-2009", path = "../data_reanalysis/PBCOR/CHPclim corrected"),
list(start_year = 1970, end_year = 2000, dataset_name = "PBCOR WorldClim 2.1",column_name="PBCOR_WorldClim2.1", temporal = "1970-2000", path = "../data_reanalysis/PBCOR/WorldClim corrected")
)
for (source in datasets_info) {
print(source)}
extract_land(annual_data,climatologies[,3:2])
climatologies[source$dataset_name]<-extract_row_column(annual_data,climatologies[,3:2])
extract_land(annual_data,climatologies[,3:2])
#| warning: false
#| output: false
climatologies <- datasets_info %>%
map_df(function(info) {
calculate_climatology(info$start_year, info$end_year, data_ground) %>%
mutate(source = info$dataset_name)}) %>%
left_join(acpStation[, c('site', 'latitude', 'longitude', 'Elevation')], by = c("site" = "site")) %>%
left_join(striStation[, c('alias', 'latitude', 'longitude')], by = c("site" = "alias")) %>%
mutate(latitude = ifelse(is.na(latitude.x), latitude.y, latitude.x),
longitude = ifelse(is.na(longitude.x), longitude.y, longitude.x),
longitude = -1 * abs(longitude)) %>%
dplyr::select(site, latitude, longitude, source, annual, jfma, Elevation)
#extract the values at the coordinates for climatologies
for (source in datasets_info) {
files <- list.files(source$path, pattern = "\\.tif$", full.names = TRUE)
annual_data <- annual_pan(files, extentMap)
climatologies[[source$dataset_name]] <- extract_land(annual_data,climatologies[,3:2])
climatologies[[paste0(source$dataset_name,"_cell")]]<-extract_row_column(annual_data,climatologies[,3:2])
jfma_data = jfma_pan(files, extentMap)
column_name = paste(source$dataset_name, "_jfma", sep = "")
climatologies[[column_name]] = extract_land(jfma_data, climatologies[,3:2])
}
write.csv(climatologies,file="../tables/climatologies.csv")
View(climatologies)
sources_unique <- unique(climatologies$source)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(climatologies$source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%                  # Group by the data column value
filter(n() > 1) %>%                            # Keep groups with more than 1 site
summarize(sites = paste(site, collapse = ", "))  # Concatenate sites with the same value
# Print the results
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique Values:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
paste0(climatologies$source,"_cell")
source
sources_unique <- unique(climatologies$source)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%                  # Group by the data column value
filter(n() > 1) %>%                            # Keep groups with more than 1 site
summarize(sites = paste(site, collapse = ", "))  # Concatenate sites with the same value
# Print the results
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique Values:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$source)
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
results <- data.frame(
Source = character(),
Correlation = numeric(),
RMSE = numeric(),
Bias = numeric(),
MAE = numeric(),
stringsAsFactors = FALSE
)
results_jfma <-results
for (i in 1:length(datasets_info)) {
source <- datasets_info[[i]]$dataset_name
predicted <- climatologies[climatologies$source == source,][[source]]
observed <- climatologies[climatologies$source == source,][["annual"]]
stats_result <- stats(predicted, observed)
results <- rbind(results, data.frame(
Source = source,
Correlation = stats_result[1],
RMSE = stats_result[2],
Bias = stats_result[3],
MAE = stats_result[4],
stringsAsFactors = FALSE
))
}
for (i in 1:length(datasets_info)) {
source <- datasets_info[[i]]$dataset_name
column=paste0(source,"_jfma")
predicted <- climatologies[climatologies$source == source,][[column]]
observed <- climatologies[climatologies$source == source,][["jfma"]]
stats_result <- stats(predicted, observed)
results_jfma <- rbind(results_jfma, data.frame(
Source = source,
Correlation = stats_result[1],
RMSE = stats_result[2],
Bias = stats_result[3],
MAE = stats_result[4],
stringsAsFactors = FALSE
))
}
#save both results as csv in tables folder
write.csv(results, file= "../tables/spatial_variation_annual.csv")
write.csv(results_jfma, file= "../tables/spatial_variation_jfma.csv")
df<- data.table()
df<- data.frame()
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
# Tabulate the output
source_table <- data.frame(
Source = source,
"Unique Raster Cell" = unique_values,
"Sites with Same Value" = sites_with_same_value$sites
)
kable(source_table) %>%
kable_styling()
}
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
# Tabulate the output
source_table <- data.frame(
Source = source,
"Unique Raster Cell" = unique_values,
"Sites with Same Value" = sites_with_same_value$sites
)
kable(source_table) %>%
kable_styling()
}
source_table
sources_unique <- unique(climatologies$source)
all_tables <- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
source_table <- data.frame(
Source = source,
`Unique Raster Cell` = unique_values,
`Sites with Same Value` = paste(sites_with_same_value$sites, collapse = "\n")
)
if (nrow(all_tables) == 0) {
all_tables <- source_table
} else {
all_tables <- rbind(all_tables, source_table)
}
}
all_tables
kable(all_tables) %>%
kable_styling()
sources_unique <- unique(climatologies$source)
all_tables <- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
# add groups column
groups <- data.frame(
`Groups` = paste("Group", 1:nrow(sites_with_same_value))
)
# bind groups column with sites_with_same_value
sites_with_same_value <- cbind(sites_with_same_value, groups)
source_table <- data.frame(
Source = source,
`Unique Raster Cell` = unique_values,
`Sites with Same Value` = paste(sites_with_same_value$sites, collapse = "\n"),
`Groups` = paste(sites_with_same_value$`Groups`, collapse = "\n")
)
if (nrow(all_tables) == 0) {
all_tables <- source_table
} else {
all_tables <- rbind(all_tables, source_table)
}
}
all_tables
kable(all_tables) %>%
kable_styling()
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites with same value:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites in the same cell:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(paste0(source,"_cell"))) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites in the same cell:", sites_with_same_value$sites, "\n"))
}
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites in the same cell:", sites_with_same_value$sites, "\n"))
}
source="PBCOR CHELSA 1.2"
data_column <- paste0(source)
data_column
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
unique_values
ites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(data_column)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
sites_with_same_value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(paste0(source,"_cell"))) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
paste0(source,"_cell"))
paste0(source,"_cell")
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(`paste0(source,"_cell")`)) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(get(paste0(source,"_cell"))) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
source="PBCOR CHELSA 1.2"
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(.data[[paste0(source, "_cell")]]) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites in the same cell:", sites_with_same_value$sites, "\n"))
}
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(.data[[paste0(source, "_cell")]]) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
sites_with_same_value
sources_unique <- unique(climatologies$source)
df<- data.frame()
for (source in sources_unique) {
data_column <- paste0(source)
unique_values <- nrow(unique(climatologies[climatologies$source == source, paste0(source,"_cell")]))
# Find sites with the same value
sites_with_same_value <- climatologies[climatologies$source == source, ] %>%
group_by(.data[[paste0(source, "_cell")]]) %>%
filter(n() > 1) %>%
summarize(sites = paste(site, collapse = ", "))
cat(paste("Source:", source, "\n"))
cat(paste("  - Unique raster cell:", unique_values, "\n"))
cat(paste("  - Sites in the same cell:", sites_with_same_value$sites, "\n"))
}
