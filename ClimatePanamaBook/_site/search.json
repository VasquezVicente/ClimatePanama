[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Preface",
    "section": "",
    "text": "Preface\nTropical forests vary widely in their precipitation regimes and seasonal water availability, but high-quality in situ (ground-based) meteorological data are rare, and few studies have evaluated the performance of global gridded climate products in the tropics. We compared the performance of eleven high-resolution gridded climate products against in situ datasets spanning high rainfall variation in central Panama. The gridded products almost all captured the broad trends of spatial and seasonal rainfall variation in central Panama, and all underestimated precipitation in the wettest sites, especially in the dry season, but differed widely in their performance. Seasonal and interannual variation were best captured by CHIRPSv2, while spatial variation was best captured by CHELSA 2.1, which has finer spatial resolution. Our ability to quantify performance was constrained by limited data availability, even in this region with relatively many high-quality long-term in situ datasets, highlighting the need for more investment in ground-based data collection."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "ground_data_wrangling.html",
    "href": "ground_data_wrangling.html",
    "title": "Ground data wrangling",
    "section": "",
    "text": "The script imports the monthly precipitation summaries from meteorological stations managed by the ACP (Autoridad del canal de Panama) and STRI (Smitsonian Tropical Research institute). It calculates the response variables used in the Climate Panama project: annual mean precipitation and january-april precipitation. Data visualization is used to determine the group of sites that meet the minimum criteria.We fit a linear mixed model with random effects for year and fixed effect for site across the complete set of years. The code filters the timeseries for a period between 1970-2016 and ensures that no site is repeated. We keep all the real values and gap fill with the predicted values from the models.\n\n\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lme4)\n\n\n\n\nThe github repository contains a folder with all the ground data.\n\nACP_DATA&lt;- \"../data_ground/met_data/ACP_data/cleanedVV/ACP_data.csv\"\nSTRI_DATA&lt;-\"../data_ground/met_data/STRI_data/STRI_monthlyPrecip.csv\"\n\nWe read in the data using base R function read.csv()\n\nacpDATA&lt;- read.csv(ACP_DATA)\nstriDATA&lt;- read.csv(STRI_DATA)\n\nFirst we bind the rows of both data sources and create year and month columns\n\nmonthlyPrecipData&lt;- acpDATA%&gt;%bind_rows(striDATA)\nmonthlyPrecipData$year&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%Y\"))\nmonthlyPrecipData$month&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%m\"))\n\nHow many stations there is in each of the years?\n\nnstations&lt;- monthlyPrecipData %&gt;% group_by(year)%&gt;% filter(!is.na(monthly_precip))%&gt;%summarize(nstations= n_distinct(site))\n\nggplot(nstations, aes(x=year,y=nstations))+\n  geom_point()+\n  theme_bw()+\n  labs(x=\"Year\", y=\"Number of stations\")\n\n\n\n\nCalculate the response variables: Annual precipitation and January through April precipitation. We only keep the years that have 12 months of data.\n\nprecipitation_data&lt;- monthlyPrecipData %&gt;% \n              filter(!is.na(monthly_precip))%&gt;%\n              group_by(site, year)%&gt;%filter(n() == 12)%&gt;%\n              summarize(annualPrecip = sum(monthly_precip, na.rm = TRUE),\n              jfmaPrecip = sum(monthly_precip[month %in% c(1,2,3,4)], na.rm = TRUE))\n\nCalculate long term averages per site\n\nlong_term_averages&lt;-precipitation_data%&gt;%group_by(site)%&gt;%\nsummarize(longterm_mean_annual= mean(annualPrecip),longterm_mean_jfma=mean(jfmaPrecip))\n\nHow many years of actual data does every site has?\n\nnyears= precipitation_data %&gt;% filter(year&gt;=1970 & year&lt;=2016)%&gt;%\n group_by(site) %&gt;% tally() %&gt;% \n rename(nyears= n)%&gt;% full_join(long_term_averages,by='site')\n\nggplot(nyears, aes(x = longterm_mean_annual, y = nyears)) +\n  geom_point() +\n  geom_text(aes(label = site), vjust = -0.5, size = 2) +\n  labs(x = \"Mean annual precipitation\", y = \"Number of Years\")\n\n\n\nggsave(\"plots/meanannual_v_nyears.jpg\", width = 10, height = 6, dpi = 300)\n\n\n\n\nThere is met stations located very close by to each other. We need to ensure that the set of data aren’t repeated.\nAn example is the Barro Colorado Island: which has 3 MET stations. Two of them are located within meters of each other. We will run some basic metrics to ensure this arent replicated stations.\n\nBCI_subset&lt;- precipitation_data%&gt;% \nfilter(site==\"BCI\"|site==\"BCICLEAR\"|site==\"BCIELECT\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\n\n#test the differences between the three sets of data\nmeans_BCI&lt;-BCI_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_result &lt;- aov(annualPrecip ~ site, data = BCI_subset)\ntukey_results &lt;- TukeyHSD(anova_result)\n\n#ANOVA results\nprint(means_BCI)\n\n# A tibble: 3 × 4\n  site     mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 BCI                   2538.             590.    47\n2 BCICLEAR              2649.             562.    45\n3 BCIELECT              2292.             538.    47\n\nsummary(anova_result)\n\n             Df   Sum Sq Mean Sq F value Pr(&gt;F)   \nsite          2  3077427 1538713   4.842 0.0093 **\nResiduals   136 43215268  317759                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nprint(tukey_results)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = BCI_subset)\n\n$site\n                       diff       lwr       upr     p adj\nBCICLEAR-BCI       110.2735 -168.3210 388.86788 0.6172843\nBCIELECT-BCI      -245.9634 -521.5129  29.58622 0.0905150\nBCIELECT-BCICLEAR -356.2368 -634.8312 -77.64239 0.0081833\n\nggplot(BCI_subset, aes(x=year, y=annualPrecip, color=site))+\ngeom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n\nThe metadata indicates that both BCICLEAR and BCIELECT are both different sensor. BCICLEAR is an standard rain gauge that is emptied manually by technicians. On the other hand, BCIELECT is a tipping bucket showing 356 mm less annual mean precipitation. Finally, the BCI station managed by the Panama canal authority is placed on the Gatun lake shore. We will keep the three sites\nThe GALETA station appears on the ACP monthly summary and it is also listed in the STRI datasets, here given the name of GALETASTRI. Are this different sensors? or repeated sets of data.\n\n#GALETA AND GALETASTRI\nGALETA_subset&lt;- precipitation_data%&gt;% filter(site==\"GALETA\"|site==\"GALETASTRI\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\nggplot(GALETA_subset, aes(x=year, y=annualPrecip, color=site))+geom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n#anova\nmeans_GALETA&lt;-GALETA_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_galeta&lt;- aov(annualPrecip ~ site, data = GALETA_subset)\ntukey_results_galeta &lt;- TukeyHSD(anova_galeta)\n\n#ANOVA results\nprint(means_GALETA)\n\n# A tibble: 2 × 4\n  site       mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                   &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 GALETA                  2933.             533.    42\n2 GALETASTRI              2930.             585.    43\n\nsummary(anova_galeta)\n\n            Df   Sum Sq Mean Sq F value Pr(&gt;F)\nsite         1      333     333   0.001  0.974\nResiduals   83 26062365  314004               \n\nprint(tukey_results_galeta)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = GALETA_subset)\n\n$site\n                       diff      lwr      upr     p adj\nGALETASTRI-GALETA -3.957544 -245.751 237.8359 0.9741082\n\n\nThe GALETA case shows very little to no difference in the yearly averages for most of the years. The metadata of GALETASTRI mentions the use of Limon Bay to fill in the gaps and the Horizontal version of the ACP monthly summaries lists GALETA as ‘GALETA(STRI)’. We conclude that the sets of data are repeated. We will keep GALETASTRI since this monthly summaries were calculated in this study\nRemove the GALETA station\n\nprecipitation_data_subset&lt;- precipitation_data %&gt;% filter(site!=\"GALETA\") \n\nFilter the stations with more than 30 years of data between 1970 and 2016\n\nprecipitation_data_30&lt;- merge(precipitation_data_subset, nyears, by.x= \"site\", by.y=\"site\")\nprecipitation_data_subset&lt;- precipitation_data_30%&gt;% filter(nyears&gt;=30)\nunique(precipitation_data_subset$site)\n\n [1] \"AGUACLARA\"   \"ALHAJUELA\"   \"BALBOAFAA\"   \"BALBOAHTS\"   \"BCI\"        \n [6] \"BCICLEAR\"    \"BCIELECT\"    \"CANDELARIA\"  \"CANO\"        \"CANONES\"    \n[11] \"CASCADAS\"    \"CHICO\"       \"CHORRO\"      \"CIENTO\"      \"CRISTOBAL\"  \n[16] \"DIABLO\"      \"EMPIREHILL\"  \"ESCANDALOSA\" \"GALETASTRI\"  \"GAMBOA\"     \n[21] \"GATUN\"       \"GUACHA\"      \"HODGESHILL\"  \"HUMEDAD\"     \"MONTELIRIO\" \n[26] \"PEDROMIGUEL\" \"PELUCA\"      \"RAICES\"      \"SALAMANCA\"   \"SANMIGUEL\"  \n[31] \"SANTAROSA\"   \"ZANGUENGA\"  \n\n\nUse the lme4 package to fit a linear mixed model with random effects for year and fixed effects for site for each of the response variable (annual precipitation and january through april precipitation). Note that we have created the model using all the avaliable years.\n\nmodel_annual&lt;- lmer(annualPrecip~ site +(1|year), data=precipitation_data_subset)\nmodel_jfma&lt;- lmer(jfmaPrecip~ site +(1|year), data=precipitation_data_subset)\n\nWe then filter the data to only the desired years.\n\nprecipitation_data_subset&lt;- precipitation_data_subset%&gt;%filter(year&gt;=1970,year&lt;=2016)\n\nCreate an empty data frame to predict the yearly and January through April precipitation.\n\nyear_sequence&lt;- seq(1970,2016)\nsites&lt;- unique(precipitation_data_subset$site)\nprecipitation_predicted&lt;- expand.grid(year_sequence,sites)%&gt;%rename(year=\"Var1\",site=\"Var2\")\n\nprecipitation_predicted $predicted_annual&lt;- predict(model_annual,newdata=precipitation_predicted)\nprecipitation_predicted$predicted_jfma&lt;- predict(model_jfma,newdata=precipitation_predicted)\n\nGap fill the missing years using the predicted values to get a gap free time series.\n\nprecipitation&lt;- precipitation_predicted %&gt;%\nfull_join(precipitation_data_subset, by=c(\"site\",\"year\"))%&gt;%\nmutate(gap_fill=if_else(is.na(annualPrecip),TRUE,FALSE),\n       annual=if_else(is.na(annualPrecip),predicted_annual,annualPrecip),\n       jfma=if_else(is.na(jfmaPrecip),predicted_jfma,jfmaPrecip))\n\nWe can visualize subsets of the final precipitation data frame. Note that some sites will have more instances of predicted response variables.\n\nggplot(precipitation %&gt;% filter(site %in% sites[1:8]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[9:16]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[17:24]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[25:32]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\n\nFinally, save the dataframe for its later use.\n\nwrite.csv(precipitation,\"../tables/precipitation.csv\", row.names = FALSE)"
  },
  {
    "objectID": "ground_data_wrangling.html#about",
    "href": "ground_data_wrangling.html#about",
    "title": "Ground data wrangling",
    "section": "",
    "text": "The script imports the monthly precipitation summaries from meteorological stations managed by the ACP (Autoridad del canal de Panama) and STRI (Smitsonian Tropical Research institute). It calculates the response variables used in the Climate Panama project: annual mean precipitation and january-april precipitation. Data visualization is used to determine the group of sites that meet the minimum criteria.We fit a linear mixed model with random effects for year and fixed effect for site across the complete set of years. The code filters the timeseries for a period between 1970-2016 and ensures that no site is repeated. We keep all the real values and gap fill with the predicted values from the models."
  },
  {
    "objectID": "ground_data_wrangling.html#libraries",
    "href": "ground_data_wrangling.html#libraries",
    "title": "Ground data wrangling",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggplot2)\nlibrary(lme4)"
  },
  {
    "objectID": "ground_data_wrangling.html#the-data",
    "href": "ground_data_wrangling.html#the-data",
    "title": "Ground data wrangling",
    "section": "",
    "text": "The github repository contains a folder with all the ground data.\n\nACP_DATA&lt;- \"../data_ground/met_data/ACP_data/cleanedVV/ACP_data.csv\"\nSTRI_DATA&lt;-\"../data_ground/met_data/STRI_data/STRI_monthlyPrecip.csv\"\n\nWe read in the data using base R function read.csv()\n\nacpDATA&lt;- read.csv(ACP_DATA)\nstriDATA&lt;- read.csv(STRI_DATA)\n\nFirst we bind the rows of both data sources and create year and month columns\n\nmonthlyPrecipData&lt;- acpDATA%&gt;%bind_rows(striDATA)\nmonthlyPrecipData$year&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%Y\"))\nmonthlyPrecipData$month&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%m\"))\n\nHow many stations there is in each of the years?\n\nnstations&lt;- monthlyPrecipData %&gt;% group_by(year)%&gt;% filter(!is.na(monthly_precip))%&gt;%summarize(nstations= n_distinct(site))\n\nggplot(nstations, aes(x=year,y=nstations))+\n  geom_point()+\n  theme_bw()+\n  labs(x=\"Year\", y=\"Number of stations\")\n\n\n\n\nCalculate the response variables: Annual precipitation and January through April precipitation. We only keep the years that have 12 months of data.\n\nprecipitation_data&lt;- monthlyPrecipData %&gt;% \n              filter(!is.na(monthly_precip))%&gt;%\n              group_by(site, year)%&gt;%filter(n() == 12)%&gt;%\n              summarize(annualPrecip = sum(monthly_precip, na.rm = TRUE),\n              jfmaPrecip = sum(monthly_precip[month %in% c(1,2,3,4)], na.rm = TRUE))\n\nCalculate long term averages per site\n\nlong_term_averages&lt;-precipitation_data%&gt;%group_by(site)%&gt;%\nsummarize(longterm_mean_annual= mean(annualPrecip),longterm_mean_jfma=mean(jfmaPrecip))\n\nHow many years of actual data does every site has?\n\nnyears= precipitation_data %&gt;% filter(year&gt;=1970 & year&lt;=2016)%&gt;%\n group_by(site) %&gt;% tally() %&gt;% \n rename(nyears= n)%&gt;% full_join(long_term_averages,by='site')\n\nggplot(nyears, aes(x = longterm_mean_annual, y = nyears)) +\n  geom_point() +\n  geom_text(aes(label = site), vjust = -0.5, size = 2) +\n  labs(x = \"Mean annual precipitation\", y = \"Number of Years\")\n\n\n\nggsave(\"plots/meanannual_v_nyears.jpg\", width = 10, height = 6, dpi = 300)"
  },
  {
    "objectID": "ground_data_wrangling.html#qaqc-for-sites",
    "href": "ground_data_wrangling.html#qaqc-for-sites",
    "title": "Ground data wrangling",
    "section": "",
    "text": "There is met stations located very close by to each other. We need to ensure that the set of data aren’t repeated.\nAn example is the Barro Colorado Island: which has 3 MET stations. Two of them are located within meters of each other. We will run some basic metrics to ensure this arent replicated stations.\n\nBCI_subset&lt;- precipitation_data%&gt;% \nfilter(site==\"BCI\"|site==\"BCICLEAR\"|site==\"BCIELECT\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\n\n#test the differences between the three sets of data\nmeans_BCI&lt;-BCI_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_result &lt;- aov(annualPrecip ~ site, data = BCI_subset)\ntukey_results &lt;- TukeyHSD(anova_result)\n\n#ANOVA results\nprint(means_BCI)\n\n# A tibble: 3 × 4\n  site     mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 BCI                   2538.             590.    47\n2 BCICLEAR              2649.             562.    45\n3 BCIELECT              2292.             538.    47\n\nsummary(anova_result)\n\n             Df   Sum Sq Mean Sq F value Pr(&gt;F)   \nsite          2  3077427 1538713   4.842 0.0093 **\nResiduals   136 43215268  317759                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nprint(tukey_results)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = BCI_subset)\n\n$site\n                       diff       lwr       upr     p adj\nBCICLEAR-BCI       110.2735 -168.3210 388.86788 0.6172843\nBCIELECT-BCI      -245.9634 -521.5129  29.58622 0.0905150\nBCIELECT-BCICLEAR -356.2368 -634.8312 -77.64239 0.0081833\n\nggplot(BCI_subset, aes(x=year, y=annualPrecip, color=site))+\ngeom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n\nThe metadata indicates that both BCICLEAR and BCIELECT are both different sensor. BCICLEAR is an standard rain gauge that is emptied manually by technicians. On the other hand, BCIELECT is a tipping bucket showing 356 mm less annual mean precipitation. Finally, the BCI station managed by the Panama canal authority is placed on the Gatun lake shore. We will keep the three sites\nThe GALETA station appears on the ACP monthly summary and it is also listed in the STRI datasets, here given the name of GALETASTRI. Are this different sensors? or repeated sets of data.\n\n#GALETA AND GALETASTRI\nGALETA_subset&lt;- precipitation_data%&gt;% filter(site==\"GALETA\"|site==\"GALETASTRI\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\nggplot(GALETA_subset, aes(x=year, y=annualPrecip, color=site))+geom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n#anova\nmeans_GALETA&lt;-GALETA_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_galeta&lt;- aov(annualPrecip ~ site, data = GALETA_subset)\ntukey_results_galeta &lt;- TukeyHSD(anova_galeta)\n\n#ANOVA results\nprint(means_GALETA)\n\n# A tibble: 2 × 4\n  site       mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                   &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 GALETA                  2933.             533.    42\n2 GALETASTRI              2930.             585.    43\n\nsummary(anova_galeta)\n\n            Df   Sum Sq Mean Sq F value Pr(&gt;F)\nsite         1      333     333   0.001  0.974\nResiduals   83 26062365  314004               \n\nprint(tukey_results_galeta)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = GALETA_subset)\n\n$site\n                       diff      lwr      upr     p adj\nGALETASTRI-GALETA -3.957544 -245.751 237.8359 0.9741082\n\n\nThe GALETA case shows very little to no difference in the yearly averages for most of the years. The metadata of GALETASTRI mentions the use of Limon Bay to fill in the gaps and the Horizontal version of the ACP monthly summaries lists GALETA as ‘GALETA(STRI)’. We conclude that the sets of data are repeated. We will keep GALETASTRI since this monthly summaries were calculated in this study\nRemove the GALETA station\n\nprecipitation_data_subset&lt;- precipitation_data %&gt;% filter(site!=\"GALETA\") \n\nFilter the stations with more than 30 years of data between 1970 and 2016\n\nprecipitation_data_30&lt;- merge(precipitation_data_subset, nyears, by.x= \"site\", by.y=\"site\")\nprecipitation_data_subset&lt;- precipitation_data_30%&gt;% filter(nyears&gt;=30)\nunique(precipitation_data_subset$site)\n\n [1] \"AGUACLARA\"   \"ALHAJUELA\"   \"BALBOAFAA\"   \"BALBOAHTS\"   \"BCI\"        \n [6] \"BCICLEAR\"    \"BCIELECT\"    \"CANDELARIA\"  \"CANO\"        \"CANONES\"    \n[11] \"CASCADAS\"    \"CHICO\"       \"CHORRO\"      \"CIENTO\"      \"CRISTOBAL\"  \n[16] \"DIABLO\"      \"EMPIREHILL\"  \"ESCANDALOSA\" \"GALETASTRI\"  \"GAMBOA\"     \n[21] \"GATUN\"       \"GUACHA\"      \"HODGESHILL\"  \"HUMEDAD\"     \"MONTELIRIO\" \n[26] \"PEDROMIGUEL\" \"PELUCA\"      \"RAICES\"      \"SALAMANCA\"   \"SANMIGUEL\"  \n[31] \"SANTAROSA\"   \"ZANGUENGA\"  \n\n\nUse the lme4 package to fit a linear mixed model with random effects for year and fixed effects for site for each of the response variable (annual precipitation and january through april precipitation). Note that we have created the model using all the avaliable years.\n\nmodel_annual&lt;- lmer(annualPrecip~ site +(1|year), data=precipitation_data_subset)\nmodel_jfma&lt;- lmer(jfmaPrecip~ site +(1|year), data=precipitation_data_subset)\n\nWe then filter the data to only the desired years.\n\nprecipitation_data_subset&lt;- precipitation_data_subset%&gt;%filter(year&gt;=1970,year&lt;=2016)\n\nCreate an empty data frame to predict the yearly and January through April precipitation.\n\nyear_sequence&lt;- seq(1970,2016)\nsites&lt;- unique(precipitation_data_subset$site)\nprecipitation_predicted&lt;- expand.grid(year_sequence,sites)%&gt;%rename(year=\"Var1\",site=\"Var2\")\n\nprecipitation_predicted $predicted_annual&lt;- predict(model_annual,newdata=precipitation_predicted)\nprecipitation_predicted$predicted_jfma&lt;- predict(model_jfma,newdata=precipitation_predicted)\n\nGap fill the missing years using the predicted values to get a gap free time series.\n\nprecipitation&lt;- precipitation_predicted %&gt;%\nfull_join(precipitation_data_subset, by=c(\"site\",\"year\"))%&gt;%\nmutate(gap_fill=if_else(is.na(annualPrecip),TRUE,FALSE),\n       annual=if_else(is.na(annualPrecip),predicted_annual,annualPrecip),\n       jfma=if_else(is.na(jfmaPrecip),predicted_jfma,jfmaPrecip))\n\nWe can visualize subsets of the final precipitation data frame. Note that some sites will have more instances of predicted response variables.\n\nggplot(precipitation %&gt;% filter(site %in% sites[1:8]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[9:16]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[17:24]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[25:32]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\n\nFinally, save the dataframe for its later use.\n\nwrite.csv(precipitation,\"../tables/precipitation.csv\", row.names = FALSE)"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\nThis books is meant to summarize all the code necessary to reproduce the study “Evaluation of global gridded climate products in reproducing spatial and temporal variation in precipitation in central Panama”"
  },
  {
    "objectID": "stri_compile.html",
    "href": "stri_compile.html",
    "title": "Gather STRI data",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(readxl)\n\n\n\n\nThe stri_met_stations.csv contains links and metadata for all sites listed in https://biogeodb.stri.si.edu/physical_monitoring/\n\nDIRTOMET&lt;-\"../tables/stri_met_stations.csv\"\nmet_stations&lt;- read.csv(DIRTOMET)\nall_stations&lt;-unique(met_stations$alias)\nprint(all_stations)\n\n [1] \"CELESTINO\"  \"AVA\"        \"BCICLEAR\"   \"BCIELECT\"   \"BOCAS\"     \n [6] \"PCULEBRA\"   \"FORTUNA\"    \"GALETASTRI\" \"PNM\"        \"SANBLAS\"   \n[11] \"SHERMAN\"   \n\n\n\n\n\nThe following function calculates monthly precipitation given the standard format of the STRI data, by default it only includes values label as “good”\n\nmonthly_precip&lt;- function(file, include=(\"good\"),site_name){\n    sheets&lt;-read.csv(file) %&gt;% filter(chk_note %in% include) \n    if (nrow(sheets)&lt;30){\n        stop(\"Error: not enough days with good measurments\")}\n    daily_precip&lt;-sheets%&gt;%group_by(date)%&gt;%summarize(daily_precip= sum(ra, na.rm = T))\n    monthly_precip &lt;- daily_precip %&gt;% mutate(month_year = as.Date(paste0(format(as.Date(date, \"%d/%m/%Y\"), \"%Y-%m\"), \"-01\")))%&gt;%\n    group_by(month_year) %&gt;% summarize(monthly_precip = sum(daily_precip, na.rm = T))\n    monthly_precip$site&lt;-site_name\n    return(monthly_precip)\n}\n\nThe download_met function download the file , unzips it and then erases the zip file\n\ndownload_met&lt;- function(site,csv){\n    link&lt;-csv[csv$alias==site,'link']\n    destfile&lt;-paste0(\"../data_ground/met_data/STRI_data/\",csv[csv$alias==site,'alias'],\".zip\")\n    download.file(link,destfile =destfile  , mode = \"wb\")\n    unzip(destfile, exdir = paste0(\"../data_ground/met_data/STRI_data/\",csv[csv$alias==site,'alias']))\n    file.remove(destfile)\n}\n\n\n\n\n\nsites &lt;- c(\"PCULEBRA\", \"FORTUNA\", \"PNM\", \"SHERMAN\", \"AVA\", \"BCICLEAR\", \"BCIELECT\", \"BOCAS\")\nfor (site in sites) {\n  download_met(site, met_stations)\n  files_in_site &lt;- list.files(paste0(\"../data_ground/met_data/STRI_data/\", met_stations[met_stations$alias == site, 'alias']),\n                              recursive = TRUE, pattern = \".csv\", full.names = TRUE)\n \n  This_site &lt;- tryCatch(monthly_precip(files_in_site[1], include = c(\"good\", \"adjusted\"), site_name = met_stations[met_stations$alias == site, 'alias']),\n                        error = function(e) NULL)\n  \n  if (!is.null(This_site)) {\n    write.csv(This_site, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n  }\n  rm(This_site)\n}\n\n\n\n\n\n\nGALETASTRI and GALETALAB share the same values in the first years, then in 2002 the values are different GALETALAB stops in 2007.\nWe accept the adjusted values for GALETASTRI which is the tower station, the metadata inform us that the ACP close-by station Limon bay was used for the gap filling.\n\nsite= \"GALETASTRI\"\n\ndownload_met(site, met_stations)\n\n[1] TRUE\n\nfiles_in_site&lt;-list.files(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias']),recursive = T, pattern = \".csv\", full.names = T)\n\nThis_site&lt;-monthly_precip(files_in_site[2],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nif (exists('This_site')) {\n    write.csv(This_site, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n}\nremove(This_site)\n\nGALETALAB has a second sensor in the laboratory. It has no notes, and does not follow the format of the other stations\n\nGALETALAB&lt;- read.csv(files_in_site[1])%&gt;%mutate(month_year = as.Date(paste0(format(as.Date(date.time..yyyy.mm.dd.hh.mm.ss., \"%Y-%m-%d\"), \"%Y-%m\"), \"-01\")))%&gt;%\ngroup_by(month_year)%&gt;% summarise(monthly_precip = sum(ra.mm., na.rm = T))%&gt;% mutate(site=\"GALETALAB\")\n\nif (exists('GALETALAB')) {\n    write.csv(GALETALAB, paste0('../data_ground/met_data/STRI_data/', \"GALETALAB\", '.csv'))\n}\n\nremove(GALETALAB)\n\n\n\n\nThe san blas station does not follow the standard format and only provides with the summaries.\n\nsite= \"SANBLAS\"\ndownload.file(met_stations[met_stations$alias==site,'link'],destfile =paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\")  , mode = \"wb\")\n\nfile&lt;- read_excel(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\"), sheet = 4)\nfile&lt;-file[2:9,1:13]\nSANBLAS&lt;- file%&gt;%rename('01'='...2','02'= '...3','03'= '...4','04'= '...5','05'= '...6','06'= '...7','07'= '...8','08'= '...9','09'= '...10','10'= '...11','11'= '...12','12'= '...13')%&gt;%\npivot_longer(cols = c('01','02','03','04','05','06','07','08','09','10','11','12'), names_to = 'month', values_to = 'monthly_precip')%&gt;%mutate(month_year = as.Date(paste0(format(as.Date(paste0('01/',month,'/2000'), \"%d/%m/%Y\"), \"%Y-%m\"), \"-01\")))%&gt;%\nselect(month_year, monthly_precip)%&gt;%mutate(site=\"SANBLAS\")\nif (exists('SANBLAS')) {\n    write.csv(SANBLAS, paste0('../data_ground/met_data/STRI_data/', \"SANBLAS\", '.csv'))\n}\nremove(SANBLAS)\nfile.remove(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\"))\n\n[1] TRUE\n\n\n\n\n\nThis site has 2 sensors within meters of each other\n\nsite= \"CELESTINO\"\n\ndownload_met(site, met_stations)\n\n[1] TRUE\n\nfiles_in_site&lt;-list.files(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias']),\n                                 recursive = T, pattern = \".csv\", full.names = T)\n\nThis_siteN=monthly_precip(files_in_site[1],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nThis_siteS=monthly_precip(files_in_site[2],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nplot(This_siteN$monthly_precip, This_siteS$monthly_precip)\n\n\n\n\nMerge both sensors and average them.\n\nCELESTINO= merge(This_siteN, This_siteS, by = \"month_year\", all = TRUE)%&gt;%mutate(monthly_precip = rowMeans(.[, c(\"monthly_precip.x\", \"monthly_precip.y\")], na.rm = TRUE))%&gt;%\nselect(month_year, monthly_precip)%&gt;%mutate(site=\"CELESTINO\")\nif (exists('CELESTINO')) {\n    write.csv(CELESTINO, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n}\nremove(CELESTINO)\n\n\n\n\n\n\nall &lt;- data.frame()\nfor (site in all_stations) {\n  thecsv &lt;- file.path('../data_ground/met_data/STRI_data', paste0(site, '.csv'))\n  if (file.exists(thecsv)) {\n    append_stations &lt;- read.csv(thecsv)\n    all &lt;- rbind(all, append_stations)\n  }\n}\nall&lt;- all%&gt;%select(month_year, monthly_precip, site)%&gt;%mutate(month_year = as.Date(month_year))\n\n\n\n\n\ndirectory_path &lt;- paste0('../data_ground/met_data/STRI_data/')\nunlink(directory_path, recursive = TRUE)\ndir.create(directory_path)"
  },
  {
    "objectID": "stri_compile.html#libraries",
    "href": "stri_compile.html#libraries",
    "title": "Gather STRI data",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(readxl)"
  },
  {
    "objectID": "stri_compile.html#data",
    "href": "stri_compile.html#data",
    "title": "Gather STRI data",
    "section": "",
    "text": "The stri_met_stations.csv contains links and metadata for all sites listed in https://biogeodb.stri.si.edu/physical_monitoring/\n\nDIRTOMET&lt;-\"../tables/stri_met_stations.csv\"\nmet_stations&lt;- read.csv(DIRTOMET)\nall_stations&lt;-unique(met_stations$alias)\nprint(all_stations)\n\n [1] \"CELESTINO\"  \"AVA\"        \"BCICLEAR\"   \"BCIELECT\"   \"BOCAS\"     \n [6] \"PCULEBRA\"   \"FORTUNA\"    \"GALETASTRI\" \"PNM\"        \"SANBLAS\"   \n[11] \"SHERMAN\""
  },
  {
    "objectID": "stri_compile.html#functions",
    "href": "stri_compile.html#functions",
    "title": "Gather STRI data",
    "section": "",
    "text": "The following function calculates monthly precipitation given the standard format of the STRI data, by default it only includes values label as “good”\n\nmonthly_precip&lt;- function(file, include=(\"good\"),site_name){\n    sheets&lt;-read.csv(file) %&gt;% filter(chk_note %in% include) \n    if (nrow(sheets)&lt;30){\n        stop(\"Error: not enough days with good measurments\")}\n    daily_precip&lt;-sheets%&gt;%group_by(date)%&gt;%summarize(daily_precip= sum(ra, na.rm = T))\n    monthly_precip &lt;- daily_precip %&gt;% mutate(month_year = as.Date(paste0(format(as.Date(date, \"%d/%m/%Y\"), \"%Y-%m\"), \"-01\")))%&gt;%\n    group_by(month_year) %&gt;% summarize(monthly_precip = sum(daily_precip, na.rm = T))\n    monthly_precip$site&lt;-site_name\n    return(monthly_precip)\n}\n\nThe download_met function download the file , unzips it and then erases the zip file\n\ndownload_met&lt;- function(site,csv){\n    link&lt;-csv[csv$alias==site,'link']\n    destfile&lt;-paste0(\"../data_ground/met_data/STRI_data/\",csv[csv$alias==site,'alias'],\".zip\")\n    download.file(link,destfile =destfile  , mode = \"wb\")\n    unzip(destfile, exdir = paste0(\"../data_ground/met_data/STRI_data/\",csv[csv$alias==site,'alias']))\n    file.remove(destfile)\n}"
  },
  {
    "objectID": "stri_compile.html#loop-over-sites-with-a-regular-format-or-only-having-a-single-csv-file.",
    "href": "stri_compile.html#loop-over-sites-with-a-regular-format-or-only-having-a-single-csv-file.",
    "title": "Gather STRI data",
    "section": "",
    "text": "sites &lt;- c(\"PCULEBRA\", \"FORTUNA\", \"PNM\", \"SHERMAN\", \"AVA\", \"BCICLEAR\", \"BCIELECT\", \"BOCAS\")\nfor (site in sites) {\n  download_met(site, met_stations)\n  files_in_site &lt;- list.files(paste0(\"../data_ground/met_data/STRI_data/\", met_stations[met_stations$alias == site, 'alias']),\n                              recursive = TRUE, pattern = \".csv\", full.names = TRUE)\n \n  This_site &lt;- tryCatch(monthly_precip(files_in_site[1], include = c(\"good\", \"adjusted\"), site_name = met_stations[met_stations$alias == site, 'alias']),\n                        error = function(e) NULL)\n  \n  if (!is.null(This_site)) {\n    write.csv(This_site, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n  }\n  rm(This_site)\n}"
  },
  {
    "objectID": "stri_compile.html#the-following-stations-do-not-have-a-regular-format",
    "href": "stri_compile.html#the-following-stations-do-not-have-a-regular-format",
    "title": "Gather STRI data",
    "section": "",
    "text": "GALETASTRI and GALETALAB share the same values in the first years, then in 2002 the values are different GALETALAB stops in 2007.\nWe accept the adjusted values for GALETASTRI which is the tower station, the metadata inform us that the ACP close-by station Limon bay was used for the gap filling.\n\nsite= \"GALETASTRI\"\n\ndownload_met(site, met_stations)\n\n[1] TRUE\n\nfiles_in_site&lt;-list.files(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias']),recursive = T, pattern = \".csv\", full.names = T)\n\nThis_site&lt;-monthly_precip(files_in_site[2],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nif (exists('This_site')) {\n    write.csv(This_site, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n}\nremove(This_site)\n\nGALETALAB has a second sensor in the laboratory. It has no notes, and does not follow the format of the other stations\n\nGALETALAB&lt;- read.csv(files_in_site[1])%&gt;%mutate(month_year = as.Date(paste0(format(as.Date(date.time..yyyy.mm.dd.hh.mm.ss., \"%Y-%m-%d\"), \"%Y-%m\"), \"-01\")))%&gt;%\ngroup_by(month_year)%&gt;% summarise(monthly_precip = sum(ra.mm., na.rm = T))%&gt;% mutate(site=\"GALETALAB\")\n\nif (exists('GALETALAB')) {\n    write.csv(GALETALAB, paste0('../data_ground/met_data/STRI_data/', \"GALETALAB\", '.csv'))\n}\n\nremove(GALETALAB)\n\n\n\n\nThe san blas station does not follow the standard format and only provides with the summaries.\n\nsite= \"SANBLAS\"\ndownload.file(met_stations[met_stations$alias==site,'link'],destfile =paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\")  , mode = \"wb\")\n\nfile&lt;- read_excel(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\"), sheet = 4)\nfile&lt;-file[2:9,1:13]\nSANBLAS&lt;- file%&gt;%rename('01'='...2','02'= '...3','03'= '...4','04'= '...5','05'= '...6','06'= '...7','07'= '...8','08'= '...9','09'= '...10','10'= '...11','11'= '...12','12'= '...13')%&gt;%\npivot_longer(cols = c('01','02','03','04','05','06','07','08','09','10','11','12'), names_to = 'month', values_to = 'monthly_precip')%&gt;%mutate(month_year = as.Date(paste0(format(as.Date(paste0('01/',month,'/2000'), \"%d/%m/%Y\"), \"%Y-%m\"), \"-01\")))%&gt;%\nselect(month_year, monthly_precip)%&gt;%mutate(site=\"SANBLAS\")\nif (exists('SANBLAS')) {\n    write.csv(SANBLAS, paste0('../data_ground/met_data/STRI_data/', \"SANBLAS\", '.csv'))\n}\nremove(SANBLAS)\nfile.remove(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\"))\n\n[1] TRUE\n\n\n\n\n\nThis site has 2 sensors within meters of each other\n\nsite= \"CELESTINO\"\n\ndownload_met(site, met_stations)\n\n[1] TRUE\n\nfiles_in_site&lt;-list.files(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias']),\n                                 recursive = T, pattern = \".csv\", full.names = T)\n\nThis_siteN=monthly_precip(files_in_site[1],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nThis_siteS=monthly_precip(files_in_site[2],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nplot(This_siteN$monthly_precip, This_siteS$monthly_precip)\n\n\n\n\nMerge both sensors and average them.\n\nCELESTINO= merge(This_siteN, This_siteS, by = \"month_year\", all = TRUE)%&gt;%mutate(monthly_precip = rowMeans(.[, c(\"monthly_precip.x\", \"monthly_precip.y\")], na.rm = TRUE))%&gt;%\nselect(month_year, monthly_precip)%&gt;%mutate(site=\"CELESTINO\")\nif (exists('CELESTINO')) {\n    write.csv(CELESTINO, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n}\nremove(CELESTINO)"
  },
  {
    "objectID": "stri_compile.html#combine-all-the-downloaded-sites",
    "href": "stri_compile.html#combine-all-the-downloaded-sites",
    "title": "Gather STRI data",
    "section": "",
    "text": "all &lt;- data.frame()\nfor (site in all_stations) {\n  thecsv &lt;- file.path('../data_ground/met_data/STRI_data', paste0(site, '.csv'))\n  if (file.exists(thecsv)) {\n    append_stations &lt;- read.csv(thecsv)\n    all &lt;- rbind(all, append_stations)\n  }\n}\nall&lt;- all%&gt;%select(month_year, monthly_precip, site)%&gt;%mutate(month_year = as.Date(month_year))"
  },
  {
    "objectID": "stri_compile.html#remove-all-content-from-the-folder",
    "href": "stri_compile.html#remove-all-content-from-the-folder",
    "title": "Gather STRI data",
    "section": "",
    "text": "directory_path &lt;- paste0('../data_ground/met_data/STRI_data/')\nunlink(directory_path, recursive = TRUE)\ndir.create(directory_path)"
  }
]