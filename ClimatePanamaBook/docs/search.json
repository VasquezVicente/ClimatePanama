[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ClimatePanamaBook",
    "section": "",
    "text": "Preface\nTropical forests vary widely in their precipitation regimes and seasonal water availability, but high-quality in situ (ground-based) meteorological data are rare, and few studies have evaluated the performance of global gridded climate products in the tropics. We compared the performance of eleven high-resolution gridded climate products against in situ datasets spanning high rainfall variation in central Panama. The gridded products almost all captured the broad trends of spatial and seasonal rainfall variation in central Panama, and all underestimated precipitation in the wettest sites, especially in the dry season, but differed widely in their performance. Seasonal and interannual variation were best captured by CHIRPSv2, while spatial variation was best captured by CHELSA 2.1, which has finer spatial resolution. Our ability to quantify performance was constrained by limited data availability, even in this region with relatively many high-quality long-term in situ datasets, highlighting the need for more investment in ground-based data collection."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "6  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "stri_compile.html",
    "href": "stri_compile.html",
    "title": "1  Gather STRI data",
    "section": "",
    "text": "2 Write the STRI_monthltPrecip file\nwrite.csv(all, paste0('../data_ground/met_data/STRI_data/', \"STRI_monthlyPrecip\", '.csv'))"
  },
  {
    "objectID": "stri_compile.html#libraries",
    "href": "stri_compile.html#libraries",
    "title": "1  Gather STRI data",
    "section": "1.1 Libraries",
    "text": "1.1 Libraries\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readxl)"
  },
  {
    "objectID": "stri_compile.html#data",
    "href": "stri_compile.html#data",
    "title": "1  Gather STRI data",
    "section": "1.2 Data",
    "text": "1.2 Data\nThe stri_met_stations.csv contains links and metadata for all sites listed in https://biogeodb.stri.si.edu/physical_monitoring/\n\nDIRTOMET&lt;-\"../tables/stri_met_stations.csv\"\nmet_stations&lt;- read.csv(DIRTOMET)\nall_stations&lt;-unique(met_stations$alias)\nprint(all_stations)\n\n [1] \"CELESTINO\"  \"AVA\"        \"BCICLEAR\"   \"BCIELECT\"   \"BOCAS\"     \n [6] \"PCULEBRA\"   \"FORTUNA\"    \"GALETASTRI\" \"PNM\"        \"SANBLAS\"   \n[11] \"SHERMAN\""
  },
  {
    "objectID": "stri_compile.html#functions",
    "href": "stri_compile.html#functions",
    "title": "1  Gather STRI data",
    "section": "1.3 Functions",
    "text": "1.3 Functions\nThe following function calculates monthly precipitation given the standard format of the STRI data, by default it only includes values label as “good”\n\nmonthly_precip&lt;- function(file, include=(\"good\"),site_name){\n    sheets&lt;-read.csv(file) %&gt;% filter(chk_note %in% include) \n    if (nrow(sheets)&lt;30){\n        stop(\"Error: not enough days with good measurments\")}\n    daily_precip&lt;-sheets%&gt;%group_by(date)%&gt;%summarize(daily_precip= sum(ra, na.rm = T))\n    monthly_precip &lt;- daily_precip %&gt;% mutate(month_year = as.Date(paste0(format(as.Date(date, \"%d/%m/%Y\"), \"%Y-%m\"), \"-01\")))%&gt;%\n    group_by(month_year) %&gt;% summarize(monthly_precip = sum(daily_precip, na.rm = T))\n    monthly_precip$site&lt;-site_name\n    return(monthly_precip)\n}\n\nThe download_met function download the file , unzips it and then erases the zip file\n\ndownload_met&lt;- function(site,csv){\n    link&lt;-csv[csv$alias==site,'link']\n    destfile&lt;-paste0(\"../data_ground/met_data/STRI_data/\",csv[csv$alias==site,'alias'],\".zip\")\n    download.file(link,destfile =destfile  , mode = \"wb\")\n    unzip(destfile, exdir = paste0(\"../data_ground/met_data/STRI_data/\",csv[csv$alias==site,'alias']))\n    file.remove(destfile)\n}"
  },
  {
    "objectID": "stri_compile.html#loop-over-sites-with-a-regular-format-or-only-having-a-single-csv-file.",
    "href": "stri_compile.html#loop-over-sites-with-a-regular-format-or-only-having-a-single-csv-file.",
    "title": "1  Gather STRI data",
    "section": "1.4 Loop over sites with a regular format or only having a single csv file.",
    "text": "1.4 Loop over sites with a regular format or only having a single csv file.\n\nsites &lt;- c(\"PCULEBRA\", \"FORTUNA\", \"PNM\", \"SHERMAN\", \"AVA\", \"BCICLEAR\", \"BCIELECT\", \"BOCAS\")\nfor (site in sites) {\n  download_met(site, met_stations)\n  files_in_site &lt;- list.files(paste0(\"../data_ground/met_data/STRI_data/\", met_stations[met_stations$alias == site, 'alias']),\n                              recursive = TRUE, pattern = \".csv\", full.names = TRUE)\n \n  This_site &lt;- tryCatch(monthly_precip(files_in_site[1], include = c(\"good\", \"adjusted\"), site_name = met_stations[met_stations$alias == site, 'alias']),\n                        error = function(e) NULL)\n  \n  if (!is.null(This_site)) {\n    write.csv(This_site, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n  }\n  rm(This_site)\n}"
  },
  {
    "objectID": "stri_compile.html#the-following-stations-do-not-have-a-regular-format",
    "href": "stri_compile.html#the-following-stations-do-not-have-a-regular-format",
    "title": "1  Gather STRI data",
    "section": "1.5 The following stations do not have a regular format",
    "text": "1.5 The following stations do not have a regular format\n\n1.5.1 Galeta\nGALETASTRI and GALETALAB share the same values in the first years, then in 2002 the values are different GALETALAB stops in 2007.\nWe accept the adjusted values for GALETASTRI which is the tower station, the metadata inform us that the ACP close-by station Limon bay was used for the gap filling.\n\nsite= \"GALETASTRI\"\n\ndownload_met(site, met_stations)\n\n[1] TRUE\n\nfiles_in_site&lt;-list.files(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias']),recursive = T, pattern = \".csv\", full.names = T)\n\nThis_site&lt;-monthly_precip(files_in_site[2],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nif (exists('This_site')) {\n    write.csv(This_site, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n}\nremove(This_site)\n\nGALETALAB has a second sensor in the laboratory. It has no notes, and does not follow the format of the other stations\n\nGALETALAB&lt;- read.csv(files_in_site[1])%&gt;%mutate(month_year = as.Date(paste0(format(as.Date(date.time..yyyy.mm.dd.hh.mm.ss., \"%Y-%m-%d\"), \"%Y-%m\"), \"-01\")))%&gt;%\ngroup_by(month_year)%&gt;% summarise(monthly_precip = sum(ra.mm., na.rm = T))%&gt;% mutate(site=\"GALETALAB\")\n\nif (exists('GALETALAB')) {\n    write.csv(GALETALAB, paste0('../data_ground/met_data/STRI_data/', \"GALETALAB\", '.csv'))\n}\n\nremove(GALETALAB)\n\n\n\n1.5.2 San blas\nThe san blas station does not follow the standard format and only provides with the summaries.\n\nsite= \"SANBLAS\"\ndownload.file(met_stations[met_stations$alias==site,'link'],destfile =paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\")  , mode = \"wb\")\n\nfile&lt;- read_excel(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\"), sheet = 4)\nfile&lt;-file[2:9,1:13]\nSANBLAS&lt;- file%&gt;%rename('01'='...2','02'= '...3','03'= '...4','04'= '...5','05'= '...6','06'= '...7','07'= '...8','08'= '...9','09'= '...10','10'= '...11','11'= '...12','12'= '...13')%&gt;%\npivot_longer(cols = c('01','02','03','04','05','06','07','08','09','10','11','12'), names_to = 'month', values_to = 'monthly_precip')%&gt;%mutate(month_year = as.Date(paste0(format(as.Date(paste0('01/',month,'/2000'), \"%d/%m/%Y\"), \"%Y-%m\"), \"-01\")))%&gt;%\nselect(month_year, monthly_precip)%&gt;%mutate(site=\"SANBLAS\")\nif (exists('SANBLAS')) {\n    write.csv(SANBLAS, paste0('../data_ground/met_data/STRI_data/', \"SANBLAS\", '.csv'))\n}\nremove(SANBLAS)\nfile.remove(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias'],\".xlsx\"))\n\n[1] TRUE\n\n\n\n\n1.5.3 Agua saluda Celestino tower\nThis site has 2 sensors within meters of each other\n\nsite= \"CELESTINO\"\n\ndownload_met(site, met_stations)\n\n[1] TRUE\n\nfiles_in_site&lt;-list.files(paste0(\"../data_ground/met_data/STRI_data/\",met_stations[met_stations$alias==site,'alias']),\n                                 recursive = T, pattern = \".csv\", full.names = T)\n\nThis_siteN=monthly_precip(files_in_site[1],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nThis_siteS=monthly_precip(files_in_site[2],include=c(\"good\",\"adjusted\"), site_name = met_stations[met_stations$alias==site,'alias'])\n\nplot(This_siteN$monthly_precip, This_siteS$monthly_precip)\n\n\n\n\nMerge both sensors and average them.\n\nCELESTINO= merge(This_siteN, This_siteS, by = \"month_year\", all = TRUE)%&gt;%mutate(monthly_precip = rowMeans(.[, c(\"monthly_precip.x\", \"monthly_precip.y\")], na.rm = TRUE))%&gt;%\nselect(month_year, monthly_precip)%&gt;%mutate(site=\"CELESTINO\")\nif (exists('CELESTINO')) {\n    write.csv(CELESTINO, paste0('../data_ground/met_data/STRI_data/', met_stations[met_stations$alias == site, 'alias'], '.csv'))\n}\nremove(CELESTINO)"
  },
  {
    "objectID": "stri_compile.html#combine-all-the-downloaded-sites",
    "href": "stri_compile.html#combine-all-the-downloaded-sites",
    "title": "1  Gather STRI data",
    "section": "1.6 Combine all the downloaded sites",
    "text": "1.6 Combine all the downloaded sites\n\nall &lt;- data.frame()\nfor (site in all_stations) {\n  thecsv &lt;- file.path('../data_ground/met_data/STRI_data', paste0(site, '.csv'))\n  if (file.exists(thecsv)) {\n    append_stations &lt;- read.csv(thecsv)\n    all &lt;- rbind(all, append_stations)\n  }\n}\nall&lt;- all%&gt;%select(month_year, monthly_precip, site)%&gt;%mutate(month_year = as.Date(month_year))"
  },
  {
    "objectID": "stri_compile.html#remove-all-content-from-the-folder",
    "href": "stri_compile.html#remove-all-content-from-the-folder",
    "title": "1  Gather STRI data",
    "section": "1.7 remove all content from the folder",
    "text": "1.7 remove all content from the folder\n\ndirectory_path &lt;- paste0('../data_ground/met_data/STRI_data/')\nunlink(directory_path, recursive = TRUE)\ndir.create(directory_path)"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This books is meant to summarize all the code necessary to reproduce the study:\n“Evaluation of global gridded climate products in reproducing spatial and temporal variation in precipitation in central Panama”\nThe study compares annual mean precipitation and january through april precipitation from precipitation gridded products and ground level data from STRI and ACP meteorological stations."
  },
  {
    "objectID": "ground_data_wrangling.html",
    "href": "ground_data_wrangling.html",
    "title": "3  Ground data wrangling and cleaning",
    "section": "",
    "text": "3.0.1 About\nThe script imports the monthly precipitation summaries from meteorological stations managed by the ACP (Autoridad del canal de Panama) and STRI (Smitsonian Tropical Research institute). It calculates the response variables used in the Climate Panama project: annual mean precipitation and january-april precipitation. Data visualization is used to determine the group of sites that meet the minimum criteria.We fit a linear mixed model with random effects for year and fixed effect for site across the complete set of years. The code filters the timeseries for a period between 1970-2016 and ensures that no site is repeated. We keep all the real values and gap fill with the predicted values from the models.\n\n\n3.0.2 Libraries\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lme4)\n\n\n\n3.0.3 The data\nThe github repository contains a folder with all the ground data.\n\nACP_DATA&lt;- \"../data_ground/met_data/ACP_data/cleanedVV/ACP_data.csv\"\nSTRI_DATA&lt;-\"../data_ground/met_data/STRI_data/STRI_monthlyPrecip.csv\"\n\nWe read in the data using base R function read.csv()\n\nacpDATA&lt;- read.csv(ACP_DATA)\nstriDATA&lt;- read.csv(STRI_DATA)\n\nFirst we bind the rows of both data sources and create year and month columns\n\nmonthlyPrecipData&lt;- acpDATA%&gt;%bind_rows(striDATA)\nmonthlyPrecipData$year&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%Y\"))\nmonthlyPrecipData$month&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%m\"))\n\nHow many stations there is in each of the years?\n\nnstations&lt;- monthlyPrecipData %&gt;% group_by(year)%&gt;% filter(!is.na(monthly_precip))%&gt;%summarize(nstations= n_distinct(site))\n\nggplot(nstations, aes(x=year,y=nstations))+\n  geom_point()+\n  theme_bw()+\n  labs(x=\"Year\", y=\"Number of stations\")\n\n\n\n\nCalculate the response variables: Annual precipitation and January through April precipitation. We only keep the years that have 12 months of data.\n\nprecipitation_data&lt;- monthlyPrecipData %&gt;% \n              filter(!is.na(monthly_precip))%&gt;%\n              group_by(site, year)%&gt;%filter(n() == 12)%&gt;%\n              summarize(annualPrecip = sum(monthly_precip, na.rm = TRUE),\n              jfmaPrecip = sum(monthly_precip[month %in% c(1,2,3,4)], na.rm = TRUE))\n\nCalculate long term averages per site\n\nlong_term_averages&lt;-precipitation_data%&gt;%group_by(site)%&gt;%\nsummarize(longterm_mean_annual= mean(annualPrecip),longterm_mean_jfma=mean(jfmaPrecip))\n\nHow many years of actual data does every site has?\n\nnyears= precipitation_data %&gt;% filter(year&gt;=1970 & year&lt;=2016)%&gt;%\n group_by(site) %&gt;% tally() %&gt;% \n rename(nyears= n)%&gt;% full_join(long_term_averages,by='site')\n\nggplot(nyears, aes(x = longterm_mean_annual, y = nyears)) +\n  geom_point() +\n  geom_text(aes(label = site), vjust = -0.5, size = 2) +\n  labs(x = \"Mean annual precipitation\", y = \"Number of Years\")\n\n\n\nggsave(\"plots/meanannual_v_nyears.jpg\", width = 10, height = 6, dpi = 300)\n\n\n\n3.0.4 QAQC for sites\nThere is met stations located very close by to each other. We need to ensure that the set of data aren’t repeated.\nAn example is the Barro Colorado Island: which has 3 MET stations. Two of them are located within meters of each other. We will run some basic metrics to ensure this arent replicated stations.\n\nBCI_subset&lt;- precipitation_data%&gt;% \nfilter(site==\"BCI\"|site==\"BCICLEAR\"|site==\"BCIELECT\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\n\n#test the differences between the three sets of data\nmeans_BCI&lt;-BCI_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_result &lt;- aov(annualPrecip ~ site, data = BCI_subset)\ntukey_results &lt;- TukeyHSD(anova_result)\n\n#ANOVA results\nprint(means_BCI)\n\n# A tibble: 3 × 4\n  site     mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 BCI                   2538.             590.    47\n2 BCICLEAR              2649.             562.    45\n3 BCIELECT              2292.             538.    47\n\nsummary(anova_result)\n\n             Df   Sum Sq Mean Sq F value Pr(&gt;F)   \nsite          2  3077427 1538713   4.842 0.0093 **\nResiduals   136 43215268  317759                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nprint(tukey_results)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = BCI_subset)\n\n$site\n                       diff       lwr       upr     p adj\nBCICLEAR-BCI       110.2735 -168.3210 388.86788 0.6172843\nBCIELECT-BCI      -245.9634 -521.5129  29.58622 0.0905150\nBCIELECT-BCICLEAR -356.2368 -634.8312 -77.64239 0.0081833\n\nggplot(BCI_subset, aes(x=year, y=annualPrecip, color=site))+\ngeom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n\nThe metadata indicates that both BCICLEAR and BCIELECT are both different sensor. BCICLEAR is an standard rain gauge that is emptied manually by technicians. On the other hand, BCIELECT is a tipping bucket showing 356 mm less annual mean precipitation. Finally, the BCI station managed by the Panama canal authority is placed on the Gatun lake shore. We will keep the three sites\nThe GALETA station appears on the ACP monthly summary and it is also listed in the STRI datasets, here given the name of GALETASTRI. Are this different sensors? or repeated sets of data.\n\n#GALETA AND GALETASTRI\nGALETA_subset&lt;- precipitation_data%&gt;% filter(site==\"GALETA\"|site==\"GALETASTRI\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\nggplot(GALETA_subset, aes(x=year, y=annualPrecip, color=site))+geom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n#anova\nmeans_GALETA&lt;-GALETA_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_galeta&lt;- aov(annualPrecip ~ site, data = GALETA_subset)\ntukey_results_galeta &lt;- TukeyHSD(anova_galeta)\n\n#ANOVA results\nprint(means_GALETA)\n\n# A tibble: 2 × 4\n  site       mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                   &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 GALETA                  2933.             533.    42\n2 GALETASTRI              2930.             585.    43\n\nsummary(anova_galeta)\n\n            Df   Sum Sq Mean Sq F value Pr(&gt;F)\nsite         1      333     333   0.001  0.974\nResiduals   83 26062365  314004               \n\nprint(tukey_results_galeta)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = GALETA_subset)\n\n$site\n                       diff      lwr      upr     p adj\nGALETASTRI-GALETA -3.957544 -245.751 237.8359 0.9741082\n\n\nThe GALETA case shows very little to no difference in the yearly averages for most of the years. The metadata of GALETASTRI mentions the use of Limon Bay to fill in the gaps and the Horizontal version of the ACP monthly summaries lists GALETA as ‘GALETA(STRI)’. We conclude that the sets of data are repeated. We will keep GALETASTRI since this monthly summaries were calculated in this study\nRemove the GALETA station\n\nprecipitation_data_subset&lt;- precipitation_data %&gt;% filter(site!=\"GALETA\") \n\nFilter the stations with more than 30 years of data between 1970 and 2016\n\nprecipitation_data_30&lt;- merge(precipitation_data_subset, nyears, by.x= \"site\", by.y=\"site\")\nprecipitation_data_subset&lt;- precipitation_data_30%&gt;% filter(nyears&gt;=30)\nunique(precipitation_data_subset$site)\n\n [1] \"AGUACLARA\"   \"ALHAJUELA\"   \"BALBOAFAA\"   \"BALBOAHTS\"   \"BCI\"        \n [6] \"BCICLEAR\"    \"BCIELECT\"    \"CANDELARIA\"  \"CANO\"        \"CANONES\"    \n[11] \"CASCADAS\"    \"CHICO\"       \"CHORRO\"      \"CIENTO\"      \"CRISTOBAL\"  \n[16] \"DIABLO\"      \"EMPIREHILL\"  \"ESCANDALOSA\" \"GALETASTRI\"  \"GAMBOA\"     \n[21] \"GATUN\"       \"GUACHA\"      \"HODGESHILL\"  \"HUMEDAD\"     \"MONTELIRIO\" \n[26] \"PEDROMIGUEL\" \"PELUCA\"      \"RAICES\"      \"SALAMANCA\"   \"SANMIGUEL\"  \n[31] \"SANTAROSA\"   \"ZANGUENGA\"  \n\n\nUse the lme4 package to fit a linear mixed model with random effects for year and fixed effects for site for each of the response variable (annual precipitation and january through april precipitation). Note that we have created the model using all the avaliable years.\n\nmodel_annual&lt;- lmer(annualPrecip~ site +(1|year), data=precipitation_data_subset)\nmodel_jfma&lt;- lmer(jfmaPrecip~ site +(1|year), data=precipitation_data_subset)\n\nWe then filter the data to only the desired years.\n\nprecipitation_data_subset&lt;- precipitation_data_subset%&gt;%filter(year&gt;=1970,year&lt;=2016)\n\nCreate an empty data frame to predict the yearly and January through April precipitation.\n\nyear_sequence&lt;- seq(1970,2016)\nsites&lt;- unique(precipitation_data_subset$site)\nprecipitation_predicted&lt;- expand.grid(year_sequence,sites)%&gt;%rename(year=\"Var1\",site=\"Var2\")\n\nprecipitation_predicted $predicted_annual&lt;- predict(model_annual,newdata=precipitation_predicted)\nprecipitation_predicted$predicted_jfma&lt;- predict(model_jfma,newdata=precipitation_predicted)\n\nGap fill the missing years using the predicted values to get a gap free time series.\n\nprecipitation&lt;- precipitation_predicted %&gt;%\nfull_join(precipitation_data_subset, by=c(\"site\",\"year\"))%&gt;%\nmutate(gap_fill=if_else(is.na(annualPrecip),TRUE,FALSE),\n       annual=if_else(is.na(annualPrecip),predicted_annual,annualPrecip),\n       jfma=if_else(is.na(jfmaPrecip),predicted_jfma,jfmaPrecip))\n\nWe can visualize subsets of the final precipitation data frame. Note that some sites will have more instances of predicted response variables.\n\nggplot(precipitation %&gt;% filter(site %in% sites[1:8]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[9:16]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[17:24]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[25:32]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\n\nFinally, save the dataframe for its later use.\n\nwrite.csv(precipitation,\"../tables/precipitation.csv\", row.names = FALSE)"
  },
  {
    "objectID": "ground_data_wrangling.html#about",
    "href": "ground_data_wrangling.html#about",
    "title": "3  Ground data wrangling and cleaning",
    "section": "3.1 About",
    "text": "3.1 About\nThe script imports the monthly precipitation summaries from meteorological stations managed by the ACP (Autoridad del canal de Panama) and STRI (Smitsonian Tropical Research institute). It calculates the response variables used in the Climate Panama project: annual mean precipitation and january-april precipitation. Data visualization is used to determine the group of sites that meet the minimum criteria.We fit a linear mixed model with random effects for year and fixed effect for site across the complete set of years. The code filters the timeseries for a period between 1970-2016 and ensures that no site is repeated. We keep all the real values and gap fill with the predicted values from the models."
  },
  {
    "objectID": "ground_data_wrangling.html#libraries",
    "href": "ground_data_wrangling.html#libraries",
    "title": "3  Ground data wrangling and cleaning",
    "section": "3.2 Libraries",
    "text": "3.2 Libraries\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lme4)"
  },
  {
    "objectID": "ground_data_wrangling.html#the-data",
    "href": "ground_data_wrangling.html#the-data",
    "title": "3  Ground data wrangling and cleaning",
    "section": "3.3 The data",
    "text": "3.3 The data\nThe github repository contains a folder with all the ground data.\n\nACP_DATA&lt;- \"../data_ground/met_data/ACP_data/cleanedVV/ACP_data.csv\"\nSTRI_DATA&lt;-\"../data_ground/met_data/STRI_data/STRI_monthlyPrecip.csv\"\n\nWe read in the data using base R function read.csv()\n\nacpDATA&lt;- read.csv(ACP_DATA)\nstriDATA&lt;- read.csv(STRI_DATA)\n\nFirst we bind the rows of both data sources and create year and month columns\n\nmonthlyPrecipData&lt;- acpDATA%&gt;%bind_rows(striDATA)\nmonthlyPrecipData$year&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%Y\"))\nmonthlyPrecipData$month&lt;- as.numeric(format(as.Date(monthlyPrecipData$month_year, format=\"%Y-%m-%d\"),\"%m\"))\n\nHow many stations there is in each of the years?\n\nnstations&lt;- monthlyPrecipData %&gt;% group_by(year)%&gt;% filter(!is.na(monthly_precip))%&gt;%summarize(nstations= n_distinct(site))\n\nggplot(nstations, aes(x=year,y=nstations))+\n  geom_point()+\n  theme_bw()+\n  labs(x=\"Year\", y=\"Number of stations\")\n\n\n\n\nCalculate the response variables: Annual precipitation and January through April precipitation. We only keep the years that have 12 months of data.\n\nprecipitation_data&lt;- monthlyPrecipData %&gt;% \n              filter(!is.na(monthly_precip))%&gt;%\n              group_by(site, year)%&gt;%filter(n() == 12)%&gt;%\n              summarize(annualPrecip = sum(monthly_precip, na.rm = TRUE),\n              jfmaPrecip = sum(monthly_precip[month %in% c(1,2,3,4)], na.rm = TRUE))\n\nCalculate long term averages per site\n\nlong_term_averages&lt;-precipitation_data%&gt;%group_by(site)%&gt;%\nsummarize(longterm_mean_annual= mean(annualPrecip),longterm_mean_jfma=mean(jfmaPrecip))\n\nHow many years of actual data does every site has?\n\nnyears= precipitation_data %&gt;% filter(year&gt;=1970 & year&lt;=2016)%&gt;%\n group_by(site) %&gt;% tally() %&gt;% \n rename(nyears= n)%&gt;% full_join(long_term_averages,by='site')\n\nggplot(nyears, aes(x = longterm_mean_annual, y = nyears)) +\n  geom_point() +\n  geom_text(aes(label = site), vjust = -0.5, size = 2) +\n  labs(x = \"Mean annual precipitation\", y = \"Number of Years\")\n\n\n\nggsave(\"plots/meanannual_v_nyears.jpg\", width = 10, height = 6, dpi = 300)"
  },
  {
    "objectID": "ground_data_wrangling.html#qaqc-for-sites",
    "href": "ground_data_wrangling.html#qaqc-for-sites",
    "title": "3  Ground data wrangling and cleaning",
    "section": "3.4 QAQC for sites",
    "text": "3.4 QAQC for sites\nThere is met stations located very close by to each other. We need to ensure that the set of data aren’t repeated.\nAn example is the Barro Colorado Island: which has 3 MET stations. Two of them are located within meters of each other. We will run some basic metrics to ensure this arent replicated stations.\n\nBCI_subset&lt;- precipitation_data%&gt;% \nfilter(site==\"BCI\"|site==\"BCICLEAR\"|site==\"BCIELECT\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\n\n#test the differences between the three sets of data\nmeans_BCI&lt;-BCI_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_result &lt;- aov(annualPrecip ~ site, data = BCI_subset)\ntukey_results &lt;- TukeyHSD(anova_result)\n\n#ANOVA results\nprint(means_BCI)\n\n# A tibble: 3 × 4\n  site     mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 BCI                   2538.             590.    47\n2 BCICLEAR              2649.             562.    45\n3 BCIELECT              2292.             538.    47\n\nsummary(anova_result)\n\n             Df   Sum Sq Mean Sq F value Pr(&gt;F)   \nsite          2  3077427 1538713   4.842 0.0093 **\nResiduals   136 43215268  317759                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nprint(tukey_results)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = BCI_subset)\n\n$site\n                       diff       lwr       upr     p adj\nBCICLEAR-BCI       110.2735 -168.3210 388.86788 0.6172843\nBCIELECT-BCI      -245.9634 -521.5129  29.58622 0.0905150\nBCIELECT-BCICLEAR -356.2368 -634.8312 -77.64239 0.0081833\n\nggplot(BCI_subset, aes(x=year, y=annualPrecip, color=site))+\ngeom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n\nThe metadata indicates that both BCICLEAR and BCIELECT are both different sensor. BCICLEAR is an standard rain gauge that is emptied manually by technicians. On the other hand, BCIELECT is a tipping bucket showing 356 mm less annual mean precipitation. Finally, the BCI station managed by the Panama canal authority is placed on the Gatun lake shore. We will keep the three sites\nThe GALETA station appears on the ACP monthly summary and it is also listed in the STRI datasets, here given the name of GALETASTRI. Are this different sensors? or repeated sets of data.\n\n#GALETA AND GALETASTRI\nGALETA_subset&lt;- precipitation_data%&gt;% filter(site==\"GALETA\"|site==\"GALETASTRI\")%&gt;%\nfilter(year&gt;=1970 & year&lt;=2016)\nggplot(GALETA_subset, aes(x=year, y=annualPrecip, color=site))+geom_line()+theme_bw()+labs(x=\"Year\", y=\"Annual Precipitation (mm)\")\n\n\n\n#anova\nmeans_GALETA&lt;-GALETA_subset%&gt;%group_by(site)%&gt;%summarize(mean_annual_precip=mean(annualPrecip),sd_annual_precip=sd(annualPrecip),n=n())\nanova_galeta&lt;- aov(annualPrecip ~ site, data = GALETA_subset)\ntukey_results_galeta &lt;- TukeyHSD(anova_galeta)\n\n#ANOVA results\nprint(means_GALETA)\n\n# A tibble: 2 × 4\n  site       mean_annual_precip sd_annual_precip     n\n  &lt;chr&gt;                   &lt;dbl&gt;            &lt;dbl&gt; &lt;int&gt;\n1 GALETA                  2933.             533.    42\n2 GALETASTRI              2930.             585.    43\n\nsummary(anova_galeta)\n\n            Df   Sum Sq Mean Sq F value Pr(&gt;F)\nsite         1      333     333   0.001  0.974\nResiduals   83 26062365  314004               \n\nprint(tukey_results_galeta)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = annualPrecip ~ site, data = GALETA_subset)\n\n$site\n                       diff      lwr      upr     p adj\nGALETASTRI-GALETA -3.957544 -245.751 237.8359 0.9741082\n\n\nThe GALETA case shows very little to no difference in the yearly averages for most of the years. The metadata of GALETASTRI mentions the use of Limon Bay to fill in the gaps and the Horizontal version of the ACP monthly summaries lists GALETA as ‘GALETA(STRI)’. We conclude that the sets of data are repeated. We will keep GALETASTRI since this monthly summaries were calculated in this study\nRemove the GALETA station\n\nprecipitation_data_subset&lt;- precipitation_data %&gt;% filter(site!=\"GALETA\") \n\nFilter the stations with more than 30 years of data between 1970 and 2016\n\nprecipitation_data_30&lt;- merge(precipitation_data_subset, nyears, by.x= \"site\", by.y=\"site\")\nprecipitation_data_subset&lt;- precipitation_data_30%&gt;% filter(nyears&gt;=30)\nunique(precipitation_data_subset$site)\n\n [1] \"AGUACLARA\"   \"ALHAJUELA\"   \"BALBOAFAA\"   \"BALBOAHTS\"   \"BCI\"        \n [6] \"BCICLEAR\"    \"BCIELECT\"    \"CANDELARIA\"  \"CANO\"        \"CANONES\"    \n[11] \"CASCADAS\"    \"CHICO\"       \"CHORRO\"      \"CIENTO\"      \"CRISTOBAL\"  \n[16] \"DIABLO\"      \"EMPIREHILL\"  \"ESCANDALOSA\" \"GALETASTRI\"  \"GAMBOA\"     \n[21] \"GATUN\"       \"GUACHA\"      \"HODGESHILL\"  \"HUMEDAD\"     \"MONTELIRIO\" \n[26] \"PEDROMIGUEL\" \"PELUCA\"      \"RAICES\"      \"SALAMANCA\"   \"SANMIGUEL\"  \n[31] \"SANTAROSA\"   \"ZANGUENGA\"  \n\n\nUse the lme4 package to fit a linear mixed model with random effects for year and fixed effects for site for each of the response variable (annual precipitation and january through april precipitation). Note that we have created the model using all the avaliable years.\n\nmodel_annual&lt;- lmer(annualPrecip~ site +(1|year), data=precipitation_data_subset)\nmodel_jfma&lt;- lmer(jfmaPrecip~ site +(1|year), data=precipitation_data_subset)\n\nWe then filter the data to only the desired years.\n\nprecipitation_data_subset&lt;- precipitation_data_subset%&gt;%filter(year&gt;=1970,year&lt;=2016)\n\nCreate an empty data frame to predict the yearly and January through April precipitation.\n\nyear_sequence&lt;- seq(1970,2016)\nsites&lt;- unique(precipitation_data_subset$site)\nprecipitation_predicted&lt;- expand.grid(year_sequence,sites)%&gt;%rename(year=\"Var1\",site=\"Var2\")\n\nprecipitation_predicted $predicted_annual&lt;- predict(model_annual,newdata=precipitation_predicted)\nprecipitation_predicted$predicted_jfma&lt;- predict(model_jfma,newdata=precipitation_predicted)\n\nGap fill the missing years using the predicted values to get a gap free time series.\n\nprecipitation&lt;- precipitation_predicted %&gt;%\nfull_join(precipitation_data_subset, by=c(\"site\",\"year\"))%&gt;%\nmutate(gap_fill=if_else(is.na(annualPrecip),TRUE,FALSE),\n       annual=if_else(is.na(annualPrecip),predicted_annual,annualPrecip),\n       jfma=if_else(is.na(jfmaPrecip),predicted_jfma,jfmaPrecip))\n\nWhats the percentage of the data that is gap filled\n\ngap_fill_true &lt;- sum(precipitation$gap_fill == TRUE)\ngap_fill_false &lt;- sum(precipitation$gap_fill == FALSE)\npercentage_gap_fill &lt;- (gap_fill_true / (gap_fill_true + gap_fill_false)) * 100\npercentage_gap_fill\n\n[1] 9.175532\n\n\nWe can visualize subsets of the final precipitation data frame. Note that some sites will have more instances of predicted response variables.\n\nggplot(precipitation %&gt;% filter(site %in% sites[1:8]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[9:16]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[17:24]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\nggplot(precipitation %&gt;% filter(site %in% sites[25:32]), \n       aes(x = year, y = annual, group = site,color=site,shape=gap_fill)) + geom_line() + geom_point(size=3) +\n  labs(x = \"Year\", y = \"Annual Precipitation (mm)\", color = \"Site\")\n\n\n\n\nFinally, save the dataframe for its later use.\n\nwrite.csv(precipitation,\"../tables/precipitation.csv\", row.names = FALSE)"
  },
  {
    "objectID": "acp_compile.html#libraries",
    "href": "acp_compile.html#libraries",
    "title": "3  Gather ACP data",
    "section": "3.1 Libraries",
    "text": "3.1 Libraries\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readxl)\n\n\n3.1.1 Function to transform from degrees to decimal\n\nconvert_dms_to_dd &lt;- function(dms) {\n  degrees &lt;- as.numeric(gsub(\".*?(\\\\d+)°.*\", \"\\\\1\", dms))\n  minutes &lt;- as.numeric(gsub(\".*?(\\\\d+\\\\.?\\\\d*)'.*\", \"\\\\1\", dms))\n  seconds &lt;- ifelse(grepl(\"\\\"\", dms), as.numeric(gsub(\".*?(\\\\d+\\\\.?\\\\d*)\\\".*\", \"\\\\1\", dms)), 0)\n  dd &lt;- degrees + minutes/60 + seconds/3600\n  return(dd)\n}"
  },
  {
    "objectID": "acp_compile.html#directories-and-links",
    "href": "acp_compile.html#directories-and-links",
    "title": "3  Gather ACP data",
    "section": "3.2 Directories and links",
    "text": "3.2 Directories and links\n\nDIRTOACP&lt;- \"../data_ground/met_data/ACP_data/cleanedVV\"\nlink&lt;- 'https://smithsonian.figshare.com/ndownloader/files/41529324'\n\nDownload the file\n\ndownload.file(link,destfile =\"../data_ground/met_data/ACP_data/cleanedVV/Monthly_Rain_ACP_Vertical.xlsx\", mode = \"wb\")"
  },
  {
    "objectID": "acp_compile.html#read-the-data",
    "href": "acp_compile.html#read-the-data",
    "title": "3  Gather ACP data",
    "section": "3.3 Read the data",
    "text": "3.3 Read the data\n\nACP_data&lt;-read_excel(\"../data_ground/met_data/ACP_data/cleanedVV/Monthly_Rain_ACP_Vertical.xlsx\",sheet = 4)\nACP_met_stations&lt;-read_excel(\"../data_ground/met_data/ACP_data/cleanedVV/Monthly_Rain_ACP_Vertical.xlsx\",sheet = 2,skip = 1)\n\nNew names:\n* `LAT (N)` -&gt; `LAT (N)...6`\n* `LONG (W)` -&gt; `LONG (W)...7`\n* `LAT (N)` -&gt; `LAT (N)...8`\n* `LONG (W)` -&gt; `LONG (W)...9`\n* `` -&gt; `...12`"
  },
  {
    "objectID": "acp_compile.html#clean-the-data",
    "href": "acp_compile.html#clean-the-data",
    "title": "3  Gather ACP data",
    "section": "3.4 Clean the data",
    "text": "3.4 Clean the data\nThe following steps were performed in ../data_ground/met_data/ACP_data/cleanedHM. Here is the steps neccesary to output the same results.\n\nACP_data &lt;- ACP_data %&gt;% \n  rename('PEDROMIGUEL' = 'PEDROMIGEL', 'SANPEDRO' = 'SAN PEDRO') %&gt;% \n  select(-GATUNCENTRAL)%&gt;% \n  pivot_longer(cols = 4:ncol(.), values_to = 'monthly_precip', names_to = 'site') %&gt;% \n  mutate(monthly_precip = if_else(monthly_precip == '-9', NA, monthly_precip)) %&gt;% \n  mutate(monthly_precip = as.numeric(monthly_precip)) %&gt;% \n  mutate(month_year = as.Date(paste0(\"1\",\"/\",Month,\"/\", Year), format = \"%d/%m/%Y\")) %&gt;%\n  select(month_year, monthly_precip, site)"
  },
  {
    "objectID": "acp_compile.html#clean-met-stations-data-frame",
    "href": "acp_compile.html#clean-met-stations-data-frame",
    "title": "3  Gather ACP data",
    "section": "3.5 Clean MET stations data frame",
    "text": "3.5 Clean MET stations data frame\nThere is a series of mutate steps that consolidates the site names between the data sheet and the metadata sheets.\n\nACP_met_stations &lt;- ACP_met_stations %&gt;% \n  select('ACP Name', 'STRI Name', 'ELE (m)', 'LAT (N)...6','LONG (W)...7','LAT (N)...8', 'LONG (W)...9') %&gt;% \n  mutate('LAT (N)...8' = ifelse(is.na(`LAT (N)...8`),convert_dms_to_dd(`LAT (N)...6`), `LAT (N)...8`), \n        'LONG (W)...9' = ifelse(is.na(`LONG (W)...9`),convert_dms_to_dd(`LONG (W)...7`), `LONG (W)...9`)) %&gt;%\n  select('ACP Name', 'STRI Name', 'ELE (m)', 'LAT (N)...8', 'LONG (W)...9')%&gt;%\n  rename('ACP_name' = 'ACP Name', 'site' = 'STRI Name', 'Elevation' = 'ELE (m)', 'latitude' = 'LAT (N)...8', 'longitude' = 'LONG (W)...9') %&gt;% \n  select(ACP_name,site, latitude, longitude, Elevation) %&gt;%\n  mutate(site = if_else(is.na(site) | site == \"NA\", ACP_name, site)) %&gt;% \n  mutate(site = if_else(ACP_name == \"Pedro Miguel\", \"PEDROMIGUEL\", site)) %&gt;% \n  mutate(site = if_else(ACP_name == \"Pedro Miguel(LAKE)\", \"PEDROMIGUELLAKE\", site)) %&gt;%\n  mutate(site = if_else(site == \"SAN PEDRO\", \"SANPEDRO\", site)) %&gt;% \n  mutate(site = toupper(gsub(\" \", \"\", site)))%&gt;%\n  mutate(site = if_else(site == \"COCOLI\", \"CERROCOCOLI\", site)) %&gt;%\n  mutate(site = if_else(site == \"CHRISTOBAL\", \"CRISTOBAL\", site)) %&gt;%\n  mutate(site=if_else(site==\"VALLEGATUN\",\"VALLECENTRALGATUN\",site))\n\nFurthemore, we must add a missing station metadata. Also, remove rows to follow the tidy principles.\n\nnew_row &lt;- data.frame(ACP_name = 'Palmarazo',\n                      site = 'PALMARAZO',\n                      latitude = 8.7336,\n                      longitude = -80.6544,\n                      Elevation = NA)\nACP_met_stations &lt;- bind_rows(ACP_met_stations, new_row)\n\nACP_met_stations&lt;- ACP_met_stations%&gt;%filter(site!=\"DEACTIVATEDSTATIONS\")%&gt;%filter(ACP_name!=\"Pedro Miguel (LAKE)\")"
  },
  {
    "objectID": "acp_compile.html#test-that-we-have-not-missed-any-stations",
    "href": "acp_compile.html#test-that-we-have-not-missed-any-stations",
    "title": "3  Gather ACP data",
    "section": "3.6 Test that we have not missed any stations",
    "text": "3.6 Test that we have not missed any stations\n\nif (length(setdiff(unique(ACP_data$site), unique(ACP_met_stations$site)))&gt;0){\n    print(\"There are sites in the data that are not in the met stations\")\n} else {\n    print(\"There are no sites in the data that are not in the met stations\")\n}\n\n[1] \"There are no sites in the data that are not in the met stations\""
  },
  {
    "objectID": "acp_compile.html#save-the-data-for-later-use",
    "href": "acp_compile.html#save-the-data-for-later-use",
    "title": "3  Gather ACP data",
    "section": "3.7 Save the data for later use",
    "text": "3.7 Save the data for later use\n\nwrite.csv(ACP_data,'../data_ground/met_data/ACP_data/cleanedVV/ACP_data.csv')\nwrite.csv(ACP_met_stations,'../data_ground/met_data/ACP_data/cleanedVV/ACP_met_stations.csv')"
  },
  {
    "objectID": "Download_gridded_precipitation.html",
    "href": "Download_gridded_precipitation.html",
    "title": "5  Download precipitation gridded products",
    "section": "",
    "text": "6 About\nThe following code downloads, crops and calculates climatologies, monthly and yearly timeseries of 11 precipitation products. Careful consideration must be taken given that the downloads can take hours. The final dataset only weights 250 mb and it can be requested to the author to avoid the extensive download. If you only need one of the products, you should skip to that section."
  },
  {
    "objectID": "Download_gridded_precipitation.html#libraries",
    "href": "Download_gridded_precipitation.html#libraries",
    "title": "4  Download precipitation gridded products",
    "section": "4.2 Libraries",
    "text": "4.2 Libraries\n\nlibrary(raster)\nlibrary(ncdf4)\nlibrary(tidyverse)"
  },
  {
    "objectID": "Download_gridded_precipitation.html#requirements",
    "href": "Download_gridded_precipitation.html#requirements",
    "title": "4  Download precipitation gridded products",
    "section": "4.3 Requirements",
    "text": "4.3 Requirements\n\ndir.create(\"../data_reanalysis\", showWarnings = FALSE)\nextentMap  &lt;- raster::extent(c(-80.2,-79.4, 8.8, 9.5))\noptions(download.file.method = \"curl\")\noptions(timeout = 1080000)\n\n# This table contains all the permalinks neccesary for download\nlinks&lt;-read.csv(\"../tables/reanalysis_links.csv\", header = TRUE, sep = \",\")"
  },
  {
    "objectID": "Download_gridded_precipitation.html#functions",
    "href": "Download_gridded_precipitation.html#functions",
    "title": "4  Download precipitation gridded products",
    "section": "4.4 Functions",
    "text": "4.4 Functions\nSome of the datasets follow the same file organization and format, thus created functions for each of the cases.\n\ncheckdir&lt;-function(dataset1) {\n  if (dir.exists(paste0(\"../data_reanalysis/\",dataset1)) == FALSE) {\n        dir.create(paste0(\"../data_reanalysis/\", dataset1), showWarnings = FALSE)\n        print(paste0(\"created directory\", \"./data_reanalysis/\",dataset1))\n      }else{print(paste0(\"directory\", \"./data_reanalysis/\",dataset1, \" already exists\"))}\n}\ndownload_chelsa&lt;-function(dataset){\n  for (i in 1:nrow(dataset)) {\n  destfile &lt;- paste0(\"../data_reanalysis/\", dataset$source[i], \"/\", dataset$filename[i])\n  if (file.exists(destfile) == FALSE) {\n    print(paste0(\"downloading \", dataset$filename[i]))\n    download.file(dataset$link[i], destfile = destfile, method = \"curl\")\n    ras &lt;- raster::raster(destfile)\n    ras &lt;- raster::crop(ras, extentMap)\n    writeRaster(ras, filename = destfile, format = \"GTiff\", overwrite = TRUE)\n  }else{\n    print(paste0(\"file \", dataset$filename[i], \" already exists\"))\n    }\n  }\n}\ndownload_chelsa2&lt;-function(dataset){\n  for (i in 1:nrow(dataset)) {\n  destfile &lt;- paste0(\"../data_reanalysis/\", dataset$source[i], \"/\", dataset$filename[i])\n  if (file.exists(destfile) == FALSE) {\n    print(paste0(\"downloading \", dataset$filename[i]))\n    download.file(dataset$link[i], destfile = destfile, method = \"curl\")\n    ras &lt;- raster::raster(destfile)\n    ras &lt;- raster::crop(ras, extentMap)\n    ras &lt;- raster::calc(ras, fun = function(x) { x * 0.1 })\n    writeRaster(ras, filename = destfile, format = \"GTiff\", overwrite = TRUE)\n  }else{\n    print(paste0(\"file \", dataset$filename[i], \" already exists\"))\n    }\n  }\n}\ndownload_chp&lt;-function(dataset){\n  for (i in 1:nrow(dataset)) {\n    destfile &lt;- paste0(\"../data_reanalysis/\", dataset$source[i], \"/\", dataset$filename[i])\n    destfile2&lt;- gsub(\".gz\",\"\",destfile)\n    if (file.exists(destfile2) == FALSE) {\n      download.file(dataset$link[i], destfile = destfile, method = \"curl\")\n      R.utils::gunzip(destfile, remove = TRUE)\n      destfile=gsub(\".gz\",\"\",destfile)\n      ras &lt;- raster::raster(destfile)\n      ras &lt;- raster::crop(ras, extentMap)\n      writeRaster(ras, filename = destfile, format = \"GTiff\", overwrite = TRUE)\n    }else {\n      print(paste0(destfile2, \" already exists\"))\n    }\n  }\n}\ndownload_terra&lt;-function(dataset){\n  for (i in 1:nrow(dataset)) {\n    destfile &lt;- paste0(\"../data_reanalysis/\", dataset$source[i], \"/\", dataset$filename[i])\n    if (file.exists(paste0(destfile,\"_1.tif\")) == FALSE) {\n      download.file(dataset$link[i], destfile = destfile, method = \"curl\")\n      ras &lt;- raster::stack(destfile)\n      ras &lt;- raster::crop(ras, extentMap)\n      Sys.sleep(1)\n      for (t in 1:nlayers(ras)) {\n        writeRaster(ras[[t]], filename = paste0(destfile,\"_\",t, \".tif\"), format = \"GTiff\", overwrite = TRUE)\n      }\n      unlink(destfile)\n    }else {\n      print(paste0(destfile, \" already exists\"))\n    }\n  }\n}\ndownload_pbcor&lt;-function(dataset){\n  for (i in 1:nrow(dataset)) {\n    destfile &lt;- paste0(\"../data_reanalysis/\", dataset$source[i], \"/\", dataset$filename[i])\n    if (file.exists(destfile) == FALSE) {\n      download.file(dataset$link[i], destfile = destfile, method = \"libcurl\")\n      unzip(destfile, exdir = dirname(destfile))\n      data&lt;-list.files(dirname(destfile),pattern = \".nc\")\n      raschelsa&lt;- raster::stack(paste0(dirname(destfile),\"/\",data[1]))\n      raschelsa&lt;- raster::crop(raschelsa, extentMap)\n      for (t in 1:nlayers(raschelsa)) {\n        print(\"writting\")\n        writeRaster(raschelsa[[t]], filename = paste0(\"../data_reanalysis/\",\"_\",t, \".tif\"), format = \"GTiff\", overwrite = TRUE)\n      }\n      raschp&lt;- raster::stack(paste0(dirname(destfile),\"/\",data[2]))\n      raschp&lt;- raster::crop(raschp, extentMap)\n      for (t in 1:nlayers(raschp)) {\n        print(\"writting\")\n        writeRaster(raschp[[t]], filename = paste0(destfile,\"_\",t, \".tif\"), format = \"GTiff\", overwrite = TRUE)\n      }\n      rasworl&lt;- raster::stack(paste0(dirname(destfile),\"/\",data[3]))\n      rasworl&lt;- raster::crop(rasworl, extentMap)\n      for (t in 1:nlayers(rasworl)) {\n        print(\"writting\")\n        writeRaster(rasworl[[t]], filename = paste0(destfile,\"_\",t, \".tif\"), format = \"GTiff\", overwrite = TRUE)\n      }\n      unlink(paste0(dirname(destfile),\"/\",data[1]))\n      unlink(paste0(dirname(destfile),\"/\",data[2]))\n      unlink(paste0(dirname(destfile),\"/\",data[3]))\n      unlink(paste0(dirname(destfile),\"/\",\"readme.txt\"))\n      unlink(destfile)\n    }else {\n      print(paste0(destfile, \" already exists\"))\n    }\n  }\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#download-regular-climatologies",
    "href": "Download_gridded_precipitation.html#download-regular-climatologies",
    "title": "4  Download precipitation gridded products",
    "section": "4.5 Download regular climatologies",
    "text": "4.5 Download regular climatologies\n\n#CHELSA 1.2 climatology\ndataset_chelsa1 &lt;- links %&gt;% filter(source == \"CHELSA 1.2\" & type == \"climatology\") \ncheckdir(dataset_chelsa1$source[1])\ndownload_chelsa(dataset_chelsa1)\n\n#CHELSA 2.1 climatology\ndataset_chelsa2 &lt;- links %&gt;% filter(source == \"CHELSA 2.1\" & type == \"climatology\")\ncheckdir(dataset_chelsa2$source[1])\ndownload_chelsa2(dataset_chelsa2)\n\n#CHIRPS 2.0 timeseries\ndataset_chirps &lt;- links %&gt;% filter(source == \"CHIRPS 2.0\" & type == \"timeseries\")\ncheckdir(dataset_chirps$source[1])\ndownload_chp(dataset_chirps)\n\n#CHPclim climatology\ndataset_chpclim &lt;- links %&gt;% filter(source == \"CHPclim\" & type == \"climatology\")\ncheckdir(dataset_chpclim$source[1])\ndownload_chp(dataset_chpclim)\n\n#TerraClimate climatology\ndataset_terra &lt;- links %&gt;% filter(source == \"TerraClimate\" & type == \"climatology\") \ncheckdir(dataset_terra$source[1])\ndownload_terra(dataset_terra)\n\n\n4.5.1 Calculate CHIRPS V2 Climatology\n\nchirps&lt;- list.files(\"../data_reanalysis/CHIRPS 2.0\", pattern=\".tif\", full.names = TRUE)\nmonth &lt;- numeric(length(chirps))\nyear &lt;- numeric(length(chirps))\nfor (i in 1:length(chirps)) {\n    file_parts &lt;- unlist(strsplit(basename(chirps[i]), \"\\\\.\"))\n    month[i] &lt;- as.numeric(file_parts[4])\n    year[i] &lt;- as.numeric(file_parts[3])\n  }\nchirps &lt;- data.frame(chirps, month, year)\nif (file.exists(\"../data_reanalysis/CHIRPS 2.0/climatology\")==FALSE){\n  dir.create(\"../data_reanalysis/CHIRPS 2.0/climatology\", showWarnings = FALSE)\n  for (m in unique(chirps$month)){\n    print(paste0(\"Processing \", m))\n    ras &lt;- raster::stack(chirps[chirps$month == m, ]$chirps)\n    print(paste0(\"Stacked \", m))\n    ras &lt;- raster::calc(ras, mean)\n    print(paste0(\"Calculated \", m))\n    output_file &lt;- paste0(\"../data_reanalysis/CHIRPS 2.0/climatology/CHIRPS_2.0_\", m, \".tif\")\n    raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n  }\n}else{\n  print(\"climatology already proccessed\")\n}\n\n\n\n4.5.2 Calculate CHIRPS V2 yearly timeseries\n\nif (file.exists(\"../data_reanalysis/CHIRPS 2.0/yearly\")==FALSE){\n  dir.create(\"../data_reanalysis/CHIRPS 2.0/yearly\")\n  for (y in unique(chirps$year)){\n  print(paste0(\"Processing \", y))\n  ras &lt;- raster::stack(chirps[chirps$year == y, ]$chirps)\n  print(paste0(\"Stacked \", y))\n  ras &lt;- raster::calc(ras, sum)\n  print(paste0(\"Calculated \", y))\n  output_file &lt;- paste0(\"../data_reanalysis/CHIRPS 2.0/yearly/CHIRPS_2.0_\", y, \".tif\")\n  raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n}\n}else{\n  print(\"yearly timseries already proccessed\")\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#worldclim-v2-download",
    "href": "Download_gridded_precipitation.html#worldclim-v2-download",
    "title": "4  Download precipitation gridded products",
    "section": "4.6 Worldclim v2 download",
    "text": "4.6 Worldclim v2 download\nWorldclim comes as a zip file and requires a different download method “libcurl”. It also include some metadata files.\n\ndataset_worlclim &lt;- links %&gt;% filter(source == \"WorldClim 2.1\" & type == \"climatology\")\ncheckdir(dataset_worlclim$source[1])\ndestfile&lt;- gsub(\".zip\",\"_01.tif\",paste0(\"../data_reanalysis/\", dataset_worlclim$source[1], \"/\", dataset_worlclim$filename[1]))\nif (file.exists(destfile)==FALSE){\n  download.file(dataset_worlclim$link[1], destfile = paste0(\"../data_reanalysis/\", dataset_worlclim$source[1], \"/\",  dataset_worlclim$filename[1]), method = \"libcurl\")\n  \n  unzip(paste0(\"data_reanalysis/\", dataset_worlclim$source[1], \"/\", dataset_worlclim$filename[1]), exdir = paste0(\"data_reanalysis/\",      dataset_worlclim$source[1]))\n  data&lt;-list.files(paste0(\"data_reanalysis/\", dataset_worlclim$source[1], \"/\"),pattern = \".tif\",full.names = TRUE)\n  for (t in 1:length(data)) {\n    ras&lt;- raster::raster(data[t])\n    ras&lt;- raster::crop(ras, extentMap)\n    writeRaster(ras, filename = data[t], format = \"GTiff\", overwrite = TRUE)\n  }\n  unlink(paste0(\"data_reanalysis/\", dataset_worlclim$source[1], \"/\", dataset_worlclim$filename[1]))\n  unlink(paste0(\"data_reanalysis/\", dataset_worlclim$source[1], \"/readme.txt\"))\n}else{\n  print(\"Files already exist\")\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#pbcor-correction-factors",
    "href": "Download_gridded_precipitation.html#pbcor-correction-factors",
    "title": "4  Download precipitation gridded products",
    "section": "4.7 PBCOR correction factors",
    "text": "4.7 PBCOR correction factors\nThis correction factors are applied to the already downloaded products CHELSA 1.2, CHP and Worldlclim. We resample the higuest resolution products to match the PBCOR resolution.\n\ndataset_pbcor &lt;- links %&gt;% filter(source == \"PBCOR\" & type == \"correction factors\")\ncheckdir(dataset_pbcor$source[1])\nprocess_data&lt;- function(source,nc_file, orig_raster,outputfolder) {\n  stacked&lt;- raster::stack(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\",nc_file))\n  cropped&lt;- raster::crop(stacked, extentMap)\n  orig&lt;- list.files(paste0(\"../data_reanalysis/\",orig_raster),pattern = \".tif\",full.names = TRUE)\n  rasorig&lt;- lapply(orig,raster)\n  dir.create(paste0(\"../data_reanalysis/\",source,\"/\",outputfolder), showWarnings = FALSE)\n    for (t in 1:nlayers(cropped)) {\n      print(\"writting\")\n      chelsa_resampled&lt;- raster::projectRaster(rasorig[[t]],cropped[[t]],method = \"ngb\")\n      correctedfactor&lt;- cropped[[t]]*chelsa_resampled\n      writeRaster(correctedfactor, filename = paste0(\"../data_reanalysis/\",source,\"/\",outputfolder,\"/\",sub(\"//.nc$\",\"\",nc_file),\"_\",t, \".tif\"), format = \"GTiff\", overwrite = TRUE)\n    }\n}\nif (dir.exists(\"../data_reanalysis/PBCOR/CHELSA 1.2 corrected\") == FALSE) {\n  download.file(dataset_pbcor$link[1], destfile = paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\", dataset_pbcor$filename[1]), method = \"libcurl\")\n  unzip(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\", dataset_pbcor$filename[1]), exdir = paste0(\"../data_reanalysis/\", dataset_pbcor$source[1]))\ndata&lt;-list.files(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\"),pattern = \".nc\")  \nprocess_data(\"PBCOR\",data[1],\"CHELSA 1.2\",\"CHELSA 1.2 corrected\")\nprocess_data(\"PBCOR\",data[2],\"CHPclim\",\"CHPclim corrected\")\nprocess_data(\"PBCOR\",data[3],\"WorldClim 2.1\",\"WorldClim corrected\")\nunlink(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\", dataset_pbcor$filename[1]))\nunlink(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\", data[1]))\nunlink(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\", data[2]))\nunlink(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/\", data[3]))\nunlink(paste0(\"../data_reanalysis/\", dataset_pbcor$source[1], \"/readme.txt\"))  \n}else{\n  print(\"File already exists\")\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#download-chelsa-earthenv-daily-timeseries",
    "href": "Download_gridded_precipitation.html#download-chelsa-earthenv-daily-timeseries",
    "title": "4  Download precipitation gridded products",
    "section": "4.8 Download CHELSA EarthEnv daily timeseries",
    "text": "4.8 Download CHELSA EarthEnv daily timeseries\nBe aware that this loop can take hours\n\ndataset_earthenv &lt;- links %&gt;% filter(source == \"CHELSA EarthEnv\" & type == \"timeseries\")\ncheckdir(dataset_earthenv$source[1])\n\nfor (i in 1:nrow(dataset_earthenv)) {\n    if (file.exists(paste0(\"../data_reanalysis/\", dataset_earthenv$source[1],\"/\",sub(\"//.zip$\", \"\", dataset_earthenv$filename[i]))) == FALSE) {\n    download.file(dataset_earthenv$link[i], destfile = paste0(\"data_reanalysis/\", dataset_earthenv$source[1], \"/\", dataset_earthenv$filename[i]), method = \"curl\")\n    unzip(paste0(\"../data_reanalysis/\", dataset_earthenv$source[1], \"/\", dataset_earthenv$filename[i]), exdir = paste0(\"../data_reanalysis/\", dataset_earthenv$source[1]))\n    file.rename(paste0(\"../data_reanalysis/\", dataset_earthenv$source[1],\"/source\"),\n                paste0(\"../data_reanalysis/\", dataset_earthenv$source[1],\"/\",gsub(\"//.zip$\", \"\", dataset_earthenv$filename[i])))\n    unlink(paste0(\"../data_reanalysis/\", dataset_earthenv$source[1], \"/\", dataset_earthenv$filename[1]))\n    data&lt;-list.files(paste0(\"../data_reanalysis/\", dataset_earthenv$source[1],\"/\",gsub(\"//.zip$\", \"\", dataset_earthenv$filename[i])),pattern = \".tif\",full.names = TRUE)\n    for (t in 1:length(data)) {\n      ras&lt;- raster::raster(data[t])\n      ras&lt;- raster::crop(ras, extentMap)\n      ras&lt;-raster::calc(ras, fun=function(x){x/100})\n      writeRaster(ras, filename = data[t], format = \"GTiff\", overwrite = TRUE)\n    }\n  }else {\n     print(\"already exists\")\n  }\n}\n\n\n4.8.1 CHELSA EarthEnv from daily to monthly\n\nenvearth&lt;- list.files(\"../data_reanalysis/CHELSA EarthEnv\",full.names = TRUE, pattern='.zip')\nif (dir.exists(\"../data_reanalysis/CHELSA EarthEnv/monthly\")==FALSE){\ndir.create(\"../data_reanalysis/CHELSA EarthEnv/monthly\", showWarnings = FALSE)\nfor (subdir in 2:length(envearth)){\n  print(paste0(\"processing \",envearth[subdir]))\n  data&lt;-list.files(envearth[subdir],pattern = \".tif\",full.names = TRUE)\n  ras&lt;- raster::stack(data)\n  ras&lt;- raster::calc(ras,sum)\n  writeRaster(ras, filename = paste0(\"../data_reanalysis/CHELSA EarthEnv/monthly/\",gsub(\".zip\", \"\", strsplit(envearth[[subdir]], \"/\")[[1]][4]),\".tif\"), format = \"GTiff\", overwrite = TRUE)\n}}else{\n  print(\"already proccessed into monthly timeseries\")\n}\n\n\n\n4.8.2 CHELSA EarthEnv from monthly to yearly\nFebruary of 2016 is not usable, thus we exclude year 2016.\n\nplot(raster::raster(\"../data_reanalysis/CHELSA EarthEnv/monthly/CHELSA_preccor_land_02_2016.tif\"))\n\n\n\nfiles &lt;- list.files(\"../data_reanalysis/CHELSA EarthEnv/monthly\", pattern = \".tif\", full.names = TRUE)\ndata &lt;- data.frame(files)\nyears &lt;- vector(\"character\", length(files))\nmonth &lt;- vector(\"character\", length(files))\nfor (i in seq_along(files)) {\n  years[i] &lt;- gsub(\".tif\", \"\", strsplit(files[i], \"_\")[[1]][6])\n  month[i] &lt;-strsplit(files[i], \"_\")[[1]][5]\n}\ndata$year &lt;- years\ndata$month &lt;- month\nyears&lt;- 2003:2015\nif (dir.exists(\"../data_reanalysis/CHELSA EarthEnv/yearly\")==FALSE){\n  dir.create(\"../data_reanalysis/CHELSA EarthEnv/yearly\", showWarnings = FALSE)\n  for (year in years){\n    print(paste0(\"processing \",year))\n    ras&lt;- raster::stack(data[data$year==year,]$files)\n    ras&lt;- raster::calc(ras,sum)\n    writeRaster(ras, filename = paste0(\"/..data_reanalysis/CHELSA EarthEnv/yearly/\",\"CHELSA_EarthEnv_\",year,\".tif\"), format = \"GTiff\", overwrite = TRUE)\n  }\n}else{\n  print(\"Yearly data already processed\")\n}\n\n[1] \"Yearly data already processed\"\n\n\n\n\n4.8.3 Calculate climatology for CHELSA EarthEnv fromn 2003 to 2015\n\nif (dir.exists(\"../data_reanalysis/CHELSA EarthEnv/climatology\")==FALSE){\n  dir.create(\"../data_reanalysis/CHELSA EarthEnv/climatology\", showWarnings = FALSE)\n  for (i in 1:length(unique(data$month))){\n    print(paste0(\"processing \",unique(data$month)[i]))\n    ras&lt;- raster::stack(data[data$month==unique(data$month)[i],]$files)\n    ras &lt;- raster::calc(ras, function(x) { mean(x, na.rm = TRUE) })\n    writeRaster(ras, filename = paste0(\"../data_reanalysis/CHELSA EarthEnv/climatology/\",\"CHELSA_EarthEnv_\",unique(data$month)[i],\".tif\"), format = \"GTiff\", overwrite = TRUE)\n  }\n}else{\n  print(\"Climatologies are already calculated\")\n}\n\n[1] \"Climatologies are already calculated\""
  },
  {
    "objectID": "Download_gridded_precipitation.html#download-chelsa-w5e5-daily-timeseries",
    "href": "Download_gridded_precipitation.html#download-chelsa-w5e5-daily-timeseries",
    "title": "4  Download precipitation gridded products",
    "section": "4.9 Download CHELSA W5E5 daily timeseries",
    "text": "4.9 Download CHELSA W5E5 daily timeseries\nBe aware that this download can take hours.\n\ndataset_chelsa_e5e5 &lt;- links %&gt;% filter(source == \"CHELSA-W5E5v1.0\" & type == \"timeseries\")\ncheckdir(dataset_chelsa_e5e5$source[1])\nfor (i in 1:nrow(dataset_chelsa_e5e5)) {\n  if (file.exists(paste0(\"../data_reanalysis/\", dataset_chelsa_e5e5$source[1],\"/\",sub(\"//.nc$\", \"\", dataset_chelsa_e5e5$filename[i]),\"_\",1,\".tif\")) == FALSE) {\n    download.file(dataset_chelsa_e5e5$link[i], destfile = paste0(\"../data_reanalysis/\", dataset_chelsa_e5e5$source[1], \"/\", dataset_chelsa_e5e5$filename[i]), method = \"curl\")\n    ras&lt;-raster::stack(paste0(\"../data_reanalysis/\", dataset_chelsa_e5e5$source[1], \"/\", dataset_chelsa_e5e5$filename[i]))\n    ras&lt;- raster::crop(ras, extentMap)\n    ras&lt;-raster::calc(ras, fun=function(x){x*86400})\n    for (t in 1:nlayers(ras)) {\n      writeRaster(ras[[t]], filename = paste0(\"../data_reanalysis/\", dataset_chelsa_e5e5$source[1],\"/\",sub(\"//.nc$\", \"\", dataset_chelsa_e5e5$filename[i]),\"_\",t,\".tif\"), format = \"GTiff\", overwrite = TRUE)\n    }\n    unlink(paste0(\"../data_reanalysis/\", dataset_chelsa_e5e5$source[1], \"/\", dataset_chelsa_e5e5$filename[i]))\n  }else {\n    print(\"already exists\")\n  }\n}\n\n\n4.9.1 CHELSA W5E5 to monthly timeseries\n\nchelsae5 &lt;- list.files(\"../data_reanalysis/CHELSA-W5E5v1.0\", pattern=\".tif\", full.names = TRUE)\nday &lt;- numeric(length(chelsae5))\nmonth &lt;- numeric(length(chelsae5))\nyear &lt;- numeric(length(chelsae5))\nfor (i in 1:length(chelsae5)) {\n  file_parts &lt;- unlist(strsplit(basename(chelsae5[i]), \"_\"))\n  day[i] &lt;- as.numeric(gsub(\".tif\", \"\", file_parts[8]))\n  month[i] &lt;- as.numeric(substring(file_parts[7], 5, 6))\n  year[i] &lt;- as.numeric(substring(file_parts[7], 1, 4))\n}\nchelsae5 &lt;- data.frame(chelsae5, day, month, year)\n\nif (file.exists(\"../data_reanalysis/CHELSA-W5E5v1.0/monthly\")==FALSE){\ndir.create(\"../data_reanalysis/CHELSA-W5E5v1.0/monthly\", showWarnings = FALSE)\nfor (y in unique(chelsae5$year)) {\n  for (m in unique(chelsae5$month)) {\n    print(paste0(\"Processing \", y, \"_\", m))\n    chelsae5[chelsae5$year == y & chelsae5$month == m, ]$chelsae5\n    ras &lt;- raster::stack(chelsae5[chelsae5$year == y & chelsae5$month == m, ]$chelsae5)\n    print(paste0(\"Stacked \", y, \"_\", m) )\n    ras &lt;- raster::calc(ras, sum)\n    print(paste0(\"Calculated \", y, \"_\", m))\n    output_file &lt;- paste0(\"../data_reanalysis/CHELSA-W5E5v1.0/monthly/CHELSA-W5E5v1.0_\", y, \"_\", m, \".tif\")\n    \n    raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n  }\n}\n}else{\n  print(\"Monthly timeseries already processed\")\n}\n\n\n\n4.9.2 CHELSA W5E5 from monthly to yearly timeseries\n\nif (file.exists(\"../data_reanalysis/CHELSA-W5E5v1.0/yearly\")==FALSE){\n  dir.create(\"../data_reanalysis/CHELSA-W5E5v1.0/yearly\", showWarnings = FALSE)\n  for (y in unique(chelsae5$year)){\n    print(paste0(\"Processing \", y))\n    ras &lt;- raster::stack(chelsae5[chelsae5$year == y, ]$chelsae5)\n    print(paste0(\"Stacked \", y))\n    ras &lt;- raster::calc(ras, sum)\n    print(paste0(\"Calculated \", y))\n    output_file &lt;- paste0(\"../data_reanalysis/CHELSA-W5E5v1.0/yearly/CHELSA-W5E5v1.0_\", y, \".tif\")\n    raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n  }\n}else{\n  print(\"yearly timeseries have been processed\")\n}\n\n\n\n4.9.3 CHELSA W5E5 climatology calculated\n\nmonthly_files&lt;- list.files(\"../data_reanalysis/CHELSA-W5E5v1.0/monthly\", pattern=\".tif\", full.names = TRUE)\nmonth &lt;- numeric(length(monthly_files))\nyear &lt;- numeric(length(monthly_files))\nfor (i in 1:length(monthly_files)) {\n    file_parts &lt;- unlist(strsplit(basename(monthly_files[i]), \"_\"))\n    month[i] &lt;- as.numeric(substring(file_parts[3], 1, 2))\n    year[i] &lt;- as.numeric(file_parts[2])\n  }\nmonthly_files &lt;- data.frame(monthly_files, month, year)\nif (file.exists(\"../data_reanalysis/CHELSA-W5E5v1.0/climatology\")==FALSE){\n  dir.create(\"../data_reanalysis/CHELSA-W5E5v1.0/climatology\", showWarnings = FALSE)\n  for (m in unique(monthly_files$month)){\n    print(paste0(\"Processing \", m))\n    ras &lt;- raster::stack(monthly_files[monthly_files$month == m, ]$monthly_files)\n    print(paste0(\"Stacked \", m))\n    ras &lt;- raster::calc(ras, mean)\n    print(paste0(\"Calculated \", m))\n    output_file &lt;- paste0(\"../data_reanalysis/CHELSA-W5E5v1.0/climatology/CHELSA-W5E5v1.0_\", m, \".tif\")\n    raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n  }\n}else{\n  print(\"climatology already calculated\")\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#download-chelsa-1.2-monthly-timeseries",
    "href": "Download_gridded_precipitation.html#download-chelsa-1.2-monthly-timeseries",
    "title": "4  Download precipitation gridded products",
    "section": "4.10 Download CHELSA 1.2 monthly timeseries",
    "text": "4.10 Download CHELSA 1.2 monthly timeseries\n\ndataset_chelsa12 &lt;- links %&gt;% filter(source == \"CHELSA 1.2\" & type == \"timeseries\")\ncheckdir(dataset_chelsa12$source[1])\ndir.create(paste0(\"../data_reanalysis/\", dataset_chelsa12$source[1],\"/monthly\"), showWarnings = FALSE)\nfor (i in 1:nrow(dataset_chelsa12)){\n  if (file.exists(paste0(\"../data_reanalysis/\", dataset_chelsa12$source[1],\"/monthly/\",dataset_chelsa12$filename[i])) == FALSE) {\n    download.file(dataset_chelsa12$link[i], destfile = paste0(\"../data_reanalysis/\", dataset_chelsa12$source[1], \"/monthly/\", dataset_chelsa12$filename[i]), method = \"curl\")\n    ras&lt;-raster::raster(paste0(\"../data_reanalysis/\", dataset_chelsa12$source[1], \"/monthly/\", dataset_chelsa12$filename[i]))\n    ras&lt;- raster::crop(ras, extentMap)\n    writeRaster(ras, filename = paste0(\"../data_reanalysis/\", dataset_chelsa12$source[1], \"/monthly/\", dataset_chelsa12$filename[i]), format = \"GTiff\", overwrite = TRUE)\n    }\n  else {\n    print(\"already exists\")\n  }\n}\n\n\n4.10.1 Calculate CHELSA 1.2 yearly timeseries\n\nfiles&lt;- list.files(\"../data_reanalysis/CHELSA 1.2/monthly\",full.names = TRUE)\nmonth&lt;- numeric(length(files))\nyear&lt;- numeric(length(files))\nfor (i in 1:length(files)) {\n  file_parts &lt;- unlist(strsplit(basename(files[i]), \"_\"))\n  month[i] &lt;- as.numeric(file_parts[4])\n  year[i] &lt;- as.numeric(file_parts[3])\n}\nchelsa12&lt;-data.frame(files,month,year)\nif (file.exists(\"../data_reanalysis/CHELSA 1.2/yearly\")==FALSE){\ndir.create(\"../data_reanalysis/CHELSA 1.2/yearly\", showWarnings = FALSE)\nfor (y in unique(chelsa12$year)){\n  print(paste0(\"Processing \", y))\n  ras &lt;- raster::stack(chelsa12[chelsa12$year == y, ]$files)\n  print(paste0(\"Stacked \", y))\n  ras &lt;- raster::calc(ras, sum)\n  print(paste0(\"Calculated \", y))\n  output_file &lt;- paste0(\"../data_reanalysis/CHELSA 1.2/yearly/CHELSA_1.2_\", y, \".tif\")\n  raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n}\n}else {\n   print(\"yearly timeseries already processed\")\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#download-chelsa-2.1-monthly-timeseries",
    "href": "Download_gridded_precipitation.html#download-chelsa-2.1-monthly-timeseries",
    "title": "4  Download precipitation gridded products",
    "section": "4.11 Download CHELSA 2.1 monthly timeseries",
    "text": "4.11 Download CHELSA 2.1 monthly timeseries\n\ndataset_chelsa21 &lt;- links %&gt;% filter(source == \"CHELSA 2.1\" & type == \"timeseries\")\ncheckdir(dataset_chelsa21$source[1])\ndir.create(paste0(\"../data_reanalysis/\", dataset_chelsa21$source[1],\"/monthly\"), showWarnings = FALSE)\nfor (i in 1:nrow(dataset_chelsa21)){\n  if (file.exists(paste0(\"../data_reanalysis/\", dataset_chelsa21$source[1],\"/monthly/\",dataset_chelsa21$filename[i])) == FALSE) {\n    download.file(dataset_chelsa21$link[i], destfile = paste0(\"../data_reanalysis/\", dataset_chelsa21$source[1], \"/monthly/\", dataset_chelsa21$filename[i]), method = \"curl\")\n    ras&lt;-raster::raster(paste0(\"../data_reanalysis/\", dataset_chelsa21$source[1], \"/monthly/\", dataset_chelsa21$filename[i]))\n    ras&lt;- raster::crop(ras, extentMap)\n    writeRaster(ras, filename = paste0(\"../data_reanalysis/\", dataset_chelsa21$source[1], \"/monthly/\", dataset_chelsa21$filename[i]), format = \"GTiff\", overwrite = TRUE)\n    }\n  else {\n    print(\"already exists\")\n  }\n}\n\n\n4.11.1 Calculate CHELSA 2.1 yearly timeseries\n\nfiles&lt;- list.files(\"../data_reanalysis/CHELSA 2.1/monthly\",full.names = TRUE)\nmonth&lt;- numeric(length(files))\nyear&lt;- numeric(length(files))\nfor (i in 1:length(files)) {\n  file_parts &lt;- unlist(strsplit(basename(files[i]), \"_\"))\n  month[i] &lt;- as.numeric(file_parts[3])\n  year[i] &lt;- as.numeric(file_parts[4])\n}\nchelsa21&lt;-data.frame(files,month,year)\nif (file.exists(\"../data_reanalysis/CHELSA 2.1/yearly\")==FALSE){\ndir.create(\"../data_reanalysis/CHELSA 2.1/yearly\", showWarnings = FALSE)\nfor (y in unique(chelsa21$year)){\n  print(paste0(\"Processing \", y))\n  ras &lt;- raster::stack(chelsa21[chelsa21$year == y, ]$files)\n  print(paste0(\"Stacked \", y))\n  ras &lt;- raster::calc(ras, sum)\n  print(paste0(\"Calculated \", y))\n  output_file &lt;- paste0(\"../data_reanalysis/CHELSA 2.1/yearly/CHELSA_2.1_\", y, \".tif\")\n  raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n}\n}else {\n   print(\"yearly timeseries already processed\")\n}"
  },
  {
    "objectID": "Download_gridded_precipitation.html#download-terra-climate-monthly-timeseries",
    "href": "Download_gridded_precipitation.html#download-terra-climate-monthly-timeseries",
    "title": "4  Download precipitation gridded products",
    "section": "4.12 Download Terra climate monthly timeseries",
    "text": "4.12 Download Terra climate monthly timeseries\n\ndataset_terra &lt;- links %&gt;% filter(source == \"TerraClimate\" & type == \"timeseries\")\ncheckdir(dataset_terra$source[1])\ndir.create(paste0(\"../data_reanalysis/\", dataset_terra$source[1],\"/monthly\"), showWarnings = FALSE)\nfor (i in 1:nrow(dataset_terra)){\n  tif_files &lt;- paste0(\"../data_reanalysis/\", dataset_terra$source[1],\"/monthly/\",dataset_terra$filename[i],\"_\", sprintf(\"%02d\", 1:12), \".tif\")\n  if (!all(file.exists(tif_files))) {\n    download.file(dataset_terra$link[i], destfile = paste0(\"../data_reanalysis/\", dataset_terra$source[1], \"/monthly/\", dataset_terra$filename[i]), method = \"curl\")\n    ras&lt;-raster::stack(paste0(\"../data_reanalysis/\", dataset_terra$source[1], \"/monthly/\", dataset_terra$filename[i]))\n    ras&lt;- raster::crop(ras, extentMap)\n    for (t in 1:nlayers(ras)) {\n      t_formatted &lt;- sprintf(\"%02d\", t)\n      writeRaster(ras[[t]], filename = paste0(\"../data_reanalysis/\", dataset_terra$source[1],\"/monthly/\",dataset_terra$filename[i],\"_\",t_formatted,\".tif\"), format = \"GTiff\", overwrite = TRUE)\n    }\n    unlink(paste0(\"../data_reanalysis/\", dataset_terra$source[1], \"/monthly/\", dataset_terra$filename[i]))\n  } else {\n    print(\"already exists\")\n  }\n}\n\n\n4.12.1 Calculate yearly timeseries\n\nfiles&lt;- list.files(\"../data_reanalysis/TerraClimate/monthly\",pattern = \".tif\",full.names = TRUE)    \nyear&lt;- numeric(length(files))\nmonth&lt;- numeric(length(files))\nfor (i in 1:length(files)) {\n  file_parts &lt;- unlist(strsplit(basename(files[i]), \"_\"))\n  year[i] &lt;- as.numeric(substring(file_parts[3],1,4))\n  month[i] &lt;- as.numeric(gsub(\".tif\", \"\", file_parts[4]))   \n}\nif (file.exists(\"../data_reanalysis/TerraClimate/yearly\")==FALSE){\n  dir.create(\"../data_reanalysis/TerraClimate/yearly\", showWarnings = FALSE)\n  for (y in unique(year)){\n    print(paste0(\"Processing \", y))\n    ras &lt;- raster::stack(files[year == y])\n    print(paste0(\"Stacked \", y))\n    ras &lt;- raster::calc(ras, sum)\n    print(paste0(\"Calculated \", y))\n    output_file &lt;- paste0(\"../data_reanalysis/TerraClimate/yearly/TerraClimate_\", y, \".tif\")\n    raster::writeRaster(ras, filename = output_file, format = \"GTiff\", overwrite = TRUE)\n  }\n}else{\n  print(\"Yearly timeseries already processed\")\n}"
  },
  {
    "objectID": "climate_panama_visualizations.html#libraries",
    "href": "climate_panama_visualizations.html#libraries",
    "title": "6  Plots and Figures",
    "section": "6.1 Libraries",
    "text": "6.1 Libraries\n\nlibrary(ggplot2)\nlibrary(raster)\nlibrary(rasterVis)\nlibrary(dplyr)\nlibrary(basemaps)\nlibrary(sf)\nlibrary(rasterVis)\nlibrary(gridExtra)\nlibrary(scico)\nlibrary(readr)"
  },
  {
    "objectID": "climate_panama_visualizations.html#read-in-files-for-figure-1",
    "href": "climate_panama_visualizations.html#read-in-files-for-figure-1",
    "title": "6  Plots and Figures",
    "section": "8.1 Read in files for Figure 1",
    "text": "8.1 Read in files for Figure 1\n\nsetwd(\"C:/Users/Vicente/repo/ClimatePanama/ClimatePanamaBook\")\n\nACP_MET&lt;-  \"../data_ground/met_data/ACP_data/cleanedVV/ACP_met_stations.csv\"\nSTRI_MET&lt;- \"../tables/stri_met_stations.csv\"\n\nstriStation&lt;- read.csv(STRI_MET)\nacpStation&lt;- read.csv(ACP_MET)\n\nextentMap  &lt;- raster::extent(c(-80.2,-79.4, 8.8, 9.5))"
  },
  {
    "objectID": "climate_panama_visualizations.html",
    "href": "climate_panama_visualizations.html",
    "title": "6  Plots and Figures",
    "section": "",
    "text": "7 Libraries\nlibrary(ggplot2)\nlibrary(raster)\nlibrary(rasterVis)\nlibrary(dplyr)\nlibrary(basemaps)\nlibrary(sf)\nlibrary(rasterVis)\nlibrary(gridExtra)\nlibrary(scico)\nlibrary(readr)\nprecipitation_data_subset &lt;- read.csv(file=“../tables/climatologies.csv”) data_sources &lt;- c(“CHELSA.1.2”, “CHELSA.2.1”, “CHELSA.EarthEnv”, “CHPclim”, “WorldClim.2.1”, “CHIRPS.2.0”, “CHELSA.W5E5v1.0”, “TerraClimate”, “PBCOR.CHELSA.1.2”, “PBCOR.CHPclim”, “PBCOR.WorldClim.2.1”) source_names &lt;- c(“CHELSA 1.2”, “CHELSA 2.1”, “CHELSA EarthEnv”, “CHPclim”, “WorldClim 2.1”, “CHIRPS 2.0”, “CHELSA-W5E5v1.0”, “TerraClimate”, “PBCOR CHELSA 1.2”, “PBCOR CHPclim”, “PBCOR WorldClim 2.1”)\ncorr_frame &lt;- precipitation_data_subset %&gt;% select(“site”,“longitude”,“latitude”,“annual”,“source”) %&gt;% mutate(value=NA) corr_frame_jfma&lt;- precipitation_data_subset %&gt;% select(“site”,“longitude”,“latitude”,“jfma”,“source”) %&gt;% mutate(value=NA)\nfor(i in seq_along(data_sources)) { corr_frame[corr_frame\\(source == source_names[i], \"value\"] &lt;- precipitation_data_subset[precipitation_data_subset\\)source == source_names[i], data_sources[i]] } jfma_sources &lt;- paste0(data_sources, “_jfma”) for(i in seq_along(jfma_sources)) { corr_frame_jfma[corr_frame_jfma\\(source == source_names[i], \"value\"] &lt;- precipitation_data_subset[precipitation_data_subset\\)source == source_names[i], jfma_sources[i]] }\nannual_corr&lt;-ggplot(corr_frame[corr_frame$source!=“CHELSA-W5E5v1.0”,],aes(x = value,y=annual))+ geom_smooth(method=‘lm’,se=FALSE)+ geom_point(col=rgb(0,0,0,alpha=0.5))+facet_wrap(vars(source),ncol=5)+ theme_classic()+ expand_limits(x=c(1000,4500),y=c(1000,4500))+ geom_abline(slope = 1, intercept = 0, lty= 2)+ coord_equal()\ndat_text &lt;- data.frame( source = unique(corr_frame[corr_frame$source!=“CHELSA-W5E5v1.0”,“source”]) )\nfor(i in 1:10){ model &lt;- lm(value ~ annual, data = corr_frame[corr_frame\\(source == dat_text\\)source[i],]) dat_text$eq[i] &lt;- paste0(“y =”, round(coef(model)[1], 2), ” + “, round(coef(model)[2], 2),”x”) } annual_corr&lt;-annual_corr + geom_text( data = dat_text, mapping = aes(x = 1800, y = 1300, label = eq), hjust = 0, vjust = 1, size = 3 )+labs(title = “Total Annual Correlation Plots”)+ xlab(“Gridded products annual precipitation (mm)”) + ylab(“In-situ annual precipitation (mm)”)\nggsave(annual_corr,path=‘../plots’ ,filename = “../plots/correlation_annual.tiff”, units=“in”, width=8, height=7, dpi=900)\njfma_corr&lt;-ggplot(corr_frame_jfma[corr_frame_jfma$source!=“CHELSA-W5E5v1.0”,],aes(x = value,y=jfma))+ geom_smooth(method=‘lm’,se=FALSE)+ geom_point(col=rgb(0,0,0,alpha=0.5))+facet_wrap(vars(source),ncol=5)+ expand_limits(x=c(0,800),y=c(0,800))+ theme_classic()+ geom_abline(slope = 1, intercept = 0, lty= 2)+ coord_equal()\ndat_text &lt;- data.frame( source = unique(corr_frame_jfma[corr_frame_jfma$source!=“CHELSA-W5E5v1.0”,“source”]) )\nfor(i in 1:10){ model &lt;- lm(value ~ jfma, data = corr_frame_jfma[corr_frame_jfma\\(source == dat_text\\)source[i],]) dat_text$eq[i] &lt;- paste0(“y =”, round(coef(model)[1], 2), ” + “, round(coef(model)[2], 2),”x”) } jfma_corr&lt;-jfma_corr + geom_text( data = dat_text, mapping = aes(x = 400, y = 50, label = eq), hjust = 0, vjust = 1, size = 3 )+labs(title = “January-April Correlation Plots”)+ xlab(“Gridded products Jan-Apr precipitation (mm)”) + ylab(“In-situ Jan-Apr precipitation (mm)”)\nggsave(jfma_corr,path=‘../plots’ ,filename = “../plots/correlation_jfma.tiff”, units=“in”, width=8, height=7, dpi=900)\nd&lt;-grid.arrange(annual_corr,jfma_corr,ncol = 1) ggsave(d,path=‘../plots’ ,filename = “../plots/correlation.tiff”, units=“in”, width=10, height=10, dpi=600) ggsave(d,path=‘../plots’ ,filename = “../plots/correlation.jpg”, units=“in”, width=10, height=10, dpi=300)"
  },
  {
    "objectID": "climate_panama_visualizations.html#stations-wrangling-and-cleaning",
    "href": "climate_panama_visualizations.html#stations-wrangling-and-cleaning",
    "title": "6  Plots and Figures",
    "section": "8.2 stations wrangling and cleaning",
    "text": "8.2 stations wrangling and cleaning\n\nstriStation &lt;- striStation %&gt;%\n  dplyr::mutate(\n    longitude = as.character(longitude),    \n    longitude = readr::parse_number(longitude) \n  )\nstriStation$source&lt;- \"STRI\"\nacpStation$source&lt;-\"ACP\"\nprecipitation_data_subset&lt;-read.csv(file=\"../tables/climatologies.csv\")"
  },
  {
    "objectID": "climate_panama_visualizations.html#combine-sites-data-into-a-single-dataset",
    "href": "climate_panama_visualizations.html#combine-sites-data-into-a-single-dataset",
    "title": "6  Plots and Figures",
    "section": "8.3 Combine sites data into a single dataset",
    "text": "8.3 Combine sites data into a single dataset\n\nsite&lt;-data.frame(unique(precipitation_data_subset$site))%&gt;%\nrename(site=unique.precipitation_data_subset.site.)%&gt;%\nleft_join(striStation[,c('alias','latitude','longitude','source')], by = c(\"site\" = \"alias\"))%&gt;%\nleft_join(acpStation[,c('site','latitude','longitude','source')], by = c(\"site\" = \"site\"))%&gt;%\nmutate(latitude=ifelse(is.na(latitude.x),latitude.y,latitude.x))%&gt;%\nmutate(longitude=ifelse(is.na(longitude.x),longitude.y,longitude.x))%&gt;%\nmutate(source=ifelse(is.na(source.x),source.y,source.x))%&gt;%\ndplyr::select(site,latitude,longitude,source)%&gt;%filter(!is.na(latitude))\nsite$longitude&lt;- abs(site$longitude)*-1\nsite_sf &lt;- st_as_sf(site, coords = c(\"longitude\",\"latitude\"), crs = 4326)\nsite_sf_3857 &lt;- st_transform(site_sf, 3857)\nsite_coords &lt;- st_coordinates(site_sf_3857)\nsite_df &lt;- cbind(site, site_coords)\n\n##Plot using the color blind safe terrain color palette\n\nset_defaults(map_service = \"esri\", map_type = \"world_shaded_relief\")\nbbox &lt;- st_bbox(c(xmin = -80.2, xmax = -79.4, ymin = 8.7, ymax = 9.6), crs = st_crs(4326))\n\nx_labels_4326 &lt;- c(-80.13, -79.95, -79.77, -79.59, -79.41)\ny_labels_4326 &lt;- c(8.77, 8.95, 9.12, 9.30, 9.48)\n\n# Add scales with correct labels\nbasemap_ggplot(bbox)+\n  scale_x_continuous(breaks = c(-8920000, -8900000, -8880000, -8860000, -8840000), labels = x_labels_4326) +\n  scale_y_continuous(breaks = c(980000, 1000000, 1020000, 1040000, 1060000), labels = y_labels_4326)+\n  theme(axis.title.x = element_blank(), axis.title.y = element_blank(),\n        panel.grid.major = element_blank(),  # Remove major grid lines\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank())\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\n\n\n\np&lt;-basemap_ggplot(bbox) +geom_point(data = site_df, aes(x = X, y = Y, color = source), size = 2) +\n  scale_x_continuous(breaks = c(-8920000, -8900000, -8880000, -8860000, -8840000), labels = x_labels_4326) +\n  scale_y_continuous(breaks = c(980000, 1000000, 1020000, 1040000, 1060000), labels = y_labels_4326) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank())\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nsite_df2&lt;- subset(site_df, !site %in% c(\"BCIELECT\", \"BCICLEAR\", \"BALBOAHTS\", \"DIABLO\",\"ESCANDALOSA\",\"PELUCA\"))\nBCIELECT&lt;-subset(site_df, site %in% c(\"BCIELECT\"))\nBCICLEAR&lt;-subset(site_df, site %in% c(\"BCICLEAR\"))\nBALBOAHTS&lt;-subset(site_df, site %in% c(\"BALBOAHTS\"))\nDIABLO&lt;-subset(site_df, site %in% c(\"DIABLO\"))\nESCANDALOSA&lt;-subset(site_df, site %in% c(\"ESCANDALOSA\"))\nPELUCA&lt;-subset(site_df, site %in% c(\"PELUCA\"))\n\nsites_plot&lt;-p + \n  geom_text(data = site_df2, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_y = 1000, fontface = \"bold\") +\n  geom_text(data = BCIELECT, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3900, fontface = \"bold\") +\n  geom_text(data = BCICLEAR, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = 4250, fontface = \"bold\") +\n  geom_text(data = BALBOAHTS, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_y = -1000, fontface = \"bold\") +\n  geom_text(data = DIABLO, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3000, fontface = \"bold\") +\n  geom_text(data = ESCANDALOSA, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3000, nudge_y = 1000, fontface = \"bold\") +\n  geom_text(data = PELUCA, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3000, fontface = \"bold\") +\n  labs(color = \"Source\")\n\nggsave(\"sites.tiff\", path = \"../plots\", plot = sites_plot, dpi = 900, units = \"in\",width = 7, height=7)\n\nsites_plot"
  },
  {
    "objectID": "climate_panama_visualizations.html#total-annual-precipitation-excluding-the-lowest-correlation-chelsa-w5e5",
    "href": "climate_panama_visualizations.html#total-annual-precipitation-excluding-the-lowest-correlation-chelsa-w5e5",
    "title": "6  Plots and Figures",
    "section": "9.1 Total annual precipitation, excluding the lowest correlation CHELSA w5e5",
    "text": "9.1 Total annual precipitation, excluding the lowest correlation CHELSA w5e5"
  },
  {
    "objectID": "climate_panama_visualizations.html#define-function-for-climatologies",
    "href": "climate_panama_visualizations.html#define-function-for-climatologies",
    "title": "6  Plots and Figures",
    "section": "9.2 Define function for climatologies",
    "text": "9.2 Define function for climatologies\n\nannual_pan&lt;-function(list,extent){\n  a&lt;-lapply(list, raster)\n  b&lt;-raster::stack(a)\n  c&lt;-raster::calc(b,sum)\n  d&lt;-raster::crop(c,extent)\n  return(d)\n}"
  },
  {
    "objectID": "climate_panama_visualizations.html#stack-the-climatologies-and-plot-them-with-the-same-resolution",
    "href": "climate_panama_visualizations.html#stack-the-climatologies-and-plot-them-with-the-same-resolution",
    "title": "6  Plots and Figures",
    "section": "9.3 Stack the climatologies and plot them with the same resolution",
    "text": "9.3 Stack the climatologies and plot them with the same resolution\n\n# CHELSA 1.2\nchelsa_orig&lt;-list.files(\"../data_reanalysis/CHELSA 1.2/\",full.names=TRUE,pattern = \".tif\")\nchelsa_orig&lt;-annual_pan(chelsa_orig,extentMap)\nplot(chelsa_orig)\n\n\n\n#CHIRPS annual precip at 0.05 \nchirps&lt;-list.files(\"../data_reanalysis/CHIRPS 2.0/climatology\",full.name=TRUE,pattern=\".tif\")\nchirps&lt;-annual_pan(chirps,extentMap)\nchirps&lt;-projectRaster(chirps,chelsa_orig, method='ngb')\nvalues(chirps)&lt;-ifelse(values(chirps)&lt;0,NA,values(chirps))\nplot(chirps)\n\n\n\n#chelsa 2.1 annual precip 0,0083333 degree orig \nchelsa2_orig&lt;-list.files(\"../data_reanalysis/CHELSA 2.1\",full.names=TRUE,pattern = \".tif\")\nchelsa2_orig&lt;-annual_pan(chelsa2_orig,extentMap)\nplot(chelsa2_orig)\n\n\n\n#chp 0.05 degree original 1980-2009 \nchp&lt;- list.files(\"../data_reanalysis/CHPclim\",full.names=TRUE,pattern = \".tif\")\nchp&lt;-annual_pan(chp,extentMap)\nchp&lt;-projectRaster(chp,chelsa_orig, method='ngb')\nplot(chp)\n\n\n\n#pbcor 0.05 degree origina\npbcor_chp&lt;- list.files(\"../data_reanalysis/PBCOR/CHPclim corrected\",full.names=TRUE,pattern = \".tif\")\npbcor_chp&lt;-annual_pan(pbcor_chp,extentMap)\npbcor_chp&lt;-projectRaster(pbcor_chp,chelsa_orig, method='ngb')\nplot(pbcor_chp)\n\n\n\n#pbcor 0.05 degree original\npbcor_chelsa&lt;- list.files(\"../data_reanalysis/PBCOR/CHELSA 1.2 corrected\",full.names=TRUE)\npbcor_chelsa&lt;-annual_pan(pbcor_chelsa,extentMap)\npbcor_chelsa&lt;-projectRaster(pbcor_chelsa,chelsa_orig,method='ngb')\nplot(pbcor_chelsa)\n\n\n\n#terra\nterra&lt;- list.files(\"../data_reanalysis/TerraClimate\",full.names = TRUE,pattern = \".tif\")\nterra&lt;-annual_pan(terra,extentMap)\nterra&lt;-projectRaster(terra,chelsa_orig,method = 'ngb')\nplot(terra)\n\n\n\n#Chelsa earthenv 2003-2016\nchelsaearthenv&lt;-list.files(\"../data_reanalysis/CHELSA EarthEnv/climatology\",full.names = TRUE,pattern = \".tif\")\nchelsaearthenv&lt;-annual_pan(chelsaearthenv,extentMap)\nplot(chelsaearthenv)\n\n\n\n#Pbcorworldclim\npbcor_worldclim&lt;-list.files(\"../data_reanalysis/PBCOR/WorldClim corrected\",full.names = TRUE,pattern = \".tif\")\npbcor_worldclim&lt;-annual_pan(pbcor_worldclim,extentMap)\npbcor_worldclim&lt;-projectRaster(pbcor_worldclim,chelsa_orig,method=\"ngb\")\nplot(pbcor_worldclim)\n\n\n\n#worldclim \nworldclim&lt;-list.files(\"../data_reanalysis/WorldClim 2.1\",full.names=TRUE,pattern=\".tif\")\nworldclim&lt;-annual_pan(worldclim,extentMap)\nplot(worldclim)"
  },
  {
    "objectID": "climate_panama_visualizations.html#stack-the-plots-define-a-list-and-plot-in-a-grid",
    "href": "climate_panama_visualizations.html#stack-the-plots-define-a-list-and-plot-in-a-grid",
    "title": "6  Plots and Figures",
    "section": "9.4 Stack the plots, define a list and plot in a grid",
    "text": "9.4 Stack the plots, define a list and plot in a grid\n\nres_stack&lt;-raster::stack(chelsa_orig,chelsa2_orig,chelsaearthenv,pbcor_chelsa,pbcor_chp,pbcor_worldclim,terra,\n                         chp,worldclim,chirps)\n\nmodels&lt;-list('layer.1'=\"CHELSA 1.2\",\n             'layer.2'=\"CHELSA 2.1\",\n             'layer.3'=\"CHELSA EarthEnv\",\n             'layer.4'=\"PBCOR CHELSA 1.2\",\n             'layer.5'=\"PBCOR CHPclim\",\n             'layer.6'=\"PBCOR WorldClim\",\n             'layer.7'=\"TerraClimate\",\n             'layer.8'=\"CHPclim v.1.0\",\n             'layer.9'=\"WorldClim v2.1\",\n             'layer.10'=\"CHIRPS v2\")\nmodel2&lt;- function(variable,value){\n  return(models[value])\n}\n\n\njf1&lt;-gplot(res_stack) + \n  geom_raster(aes(fill = value)) +\n  facet_wrap(~ variable,labeller=model2,ncol = 5) +\n  scale_fill_scico(palette = 'roma',na.value=\"white\",name = \"mm/year\")+\n  coord_equal()+theme_void()+theme(strip.text.x = element_text(size = 10, colour = \"black\"))+\n  labs(title = \"Total Annual Precipitation\")+ \n  theme(plot.title = element_text(hjust = 0.5,size = 16))\n\nggsave(path = '../plots',filename = \"annual_maps.tiff\",  units=\"in\", width=10, height=6, dpi=900)\njf1"
  },
  {
    "objectID": "climate_panama_visualizations.html#january-to-april-precipitation-individual-plots.",
    "href": "climate_panama_visualizations.html#january-to-april-precipitation-individual-plots.",
    "title": "6  Plots and Figures",
    "section": "9.5 January to April Precipitation individual plots.",
    "text": "9.5 January to April Precipitation individual plots.\n\n# CHELSA 1.2 \nchelsa_orig&lt;-list.files(\"../data_reanalysis/CHELSA 1.2/\",full.names=TRUE,pattern = \".tif\")\nchelsa_orig&lt;-chelsa_orig[1:4]\nchelsa_orig&lt;-annual_pan(chelsa_orig,extentMap)\nplot(chelsa_orig)\n\n\n\n#CHIRPS annual precip at 0.05 \nchirps&lt;-list.files(\"../data_reanalysis/CHIRPS 2.0/climatology\",full.name=TRUE,pattern=\".tif\")\nchirps&lt;-chirps[1:4]\nchirps&lt;-annual_pan(chirps,extentMap)\nchirps&lt;-projectRaster(chirps,chelsa_orig, method='ngb')\nvalues(chirps)&lt;-ifelse(values(chirps)&lt;0,NA,values(chirps))\nplot(chirps)\n\n\n\n#chelsa 2.1 annual precip 0,0083333 degree orig \nchelsa2_orig&lt;-list.files(\"../data_reanalysis/CHELSA 2.1\",full.names=TRUE,pattern = \".tif\")\nchelsa2_orig&lt;- chelsa2_orig[1:4]\nchelsa2_orig&lt;-annual_pan(chelsa2_orig,extentMap)\nplot(chelsa2_orig)\n\n\n\n#chp 0.05 degree original 1980-2009 \nchp&lt;- list.files(\"../data_reanalysis/CHPclim\",full.names=TRUE,pattern = \".tif\")\nchp&lt;- chp[1:4]\nchp&lt;-annual_pan(chp,extentMap)\nchp&lt;-projectRaster(chp,chelsa_orig, method='ngb')\nplot(chp)\n\n\n\n#pbcor 0.05 degree origina\npbcor_chp&lt;- list.files(\"../data_reanalysis/PBCOR/CHPclim corrected\",full.names=TRUE,pattern = \".tif\")\npbcor_chp&lt;-pbcor_chp[1:4]\npbcor_chp&lt;-annual_pan(pbcor_chp,extentMap)\npbcor_chp&lt;-projectRaster(pbcor_chp,chelsa_orig, method='ngb')\nplot(pbcor_chp)\n\n\n\n#pbcor 0.05 degree original\npbcor_chelsa&lt;- list.files(\"../data_reanalysis/PBCOR/CHELSA 1.2 corrected\",full.names=TRUE)\npbcor_chelsa&lt;-pbcor_chelsa[1:4]\npbcor_chelsa&lt;-annual_pan(pbcor_chelsa,extentMap)\npbcor_chelsa&lt;-projectRaster(pbcor_chelsa,chelsa_orig,method='ngb')\nplot(pbcor_chelsa)\n\n\n\n#terra\nterra&lt;- list.files(\"../data_reanalysis/TerraClimate\",full.names = TRUE,pattern = \".tif\")\nterra&lt;-terra[1:4]\nterra&lt;-annual_pan(terra,extentMap)\nterra&lt;-projectRaster(terra,chelsa_orig,method = 'ngb')\nplot(terra)\n\n\n\n#Chelsa earthenv 2003-2016\nchelsaearthenv&lt;-list.files(\"../data_reanalysis/CHELSA EarthEnv/climatology\",full.names = TRUE,pattern = \".tif\")\nchelsaearthenv&lt;-chelsaearthenv[1:4]\nchelsaearthenv&lt;-annual_pan(chelsaearthenv,extentMap)\nplot(chelsaearthenv)\n\n\n\n#Pbcorworldclim\npbcor_worldclim&lt;-list.files(\"../data_reanalysis/PBCOR/WorldClim corrected\",full.names = TRUE,pattern = \".tif\")\npbcor_worldclim&lt;-pbcor_worldclim[1:4]\npbcor_worldclim&lt;-annual_pan(pbcor_worldclim,extentMap)\npbcor_worldclim&lt;-projectRaster(pbcor_worldclim,chelsa_orig,method=\"ngb\")\nplot(pbcor_worldclim)\n\n\n\n#worldclim \nworldclim&lt;-list.files(\"../data_reanalysis/WorldClim 2.1\",full.names=TRUE,pattern=\".tif\")\nworldclim&lt;-worldclim[1:4]\nworldclim&lt;-annual_pan(worldclim,extentMap)\nplot(worldclim)"
  },
  {
    "objectID": "climate_panama_visualizations.html#stack-the-plots-and-plot-in-a-grid.",
    "href": "climate_panama_visualizations.html#stack-the-plots-and-plot-in-a-grid.",
    "title": "6  Plots and Figures",
    "section": "9.6 Stack the plots and plot in a grid.",
    "text": "9.6 Stack the plots and plot in a grid.\n\nres_stack_jfma&lt;-raster::stack(chelsa_orig,chelsa2_orig,chelsaearthenv,pbcor_chelsa,pbcor_chp,pbcor_worldclim,terra,chp,worldclim,chirps)\n\nmodels&lt;-list('layer.1'=\"CHELSA 1.2\",\n             'layer.2'=\"CHELSA 2.1\",\n             'layer.3'=\"CHELSA EarthEnv\",\n             'layer.4'=\"PBCOR CHELSA 1.2\",\n             'layer.5'=\"PBCOR CHPclim\",\n             'layer.6'=\"PBCOR WorldClim\",\n             'layer.7'=\"TerraClimate\",\n             'layer.8'=\"CHPclim v.1.0\",\n             'layer.9'=\"WorldClim v2.1\",\n             'layer.10'=\"CHIRPS v2\")\nmodel2&lt;- function(variable,value){\n  return(models[value])\n}\n\njf2&lt;-gplot(res_stack_jfma) + \n  geom_raster(aes(fill = value)) +\n  facet_wrap(~ variable,labeller=model2,ncol = 5) +\n  scale_fill_scico(palette = 'roma',na.value=\"white\",name = \"mm\")+\n  coord_equal()+theme_void()+theme(strip.text.x = element_text(size = 10, colour = \"black\"))+\n  labs(title = \"January to April Precipitation\")+ \n  theme(plot.title = element_text(hjust = 0.5,size = 16))\n\nggsave(path = '../plots',filename = \"jfma_maps.tiff\",  units=\"in\", width=10, height=6, dpi=900)\njf2"
  },
  {
    "objectID": "climate_panama_visualizations.html#arrange-both-combined-plots-in-a-grid.",
    "href": "climate_panama_visualizations.html#arrange-both-combined-plots-in-a-grid.",
    "title": "6  Plots and Figures",
    "section": "9.7 Arrange both combined plots in a grid.",
    "text": "9.7 Arrange both combined plots in a grid.\n\nb&lt;-grid.arrange(jf1,jf2,ncol = 1)\n\n\n\nggsave(b,path='../plots' ,filename = \"../plots/climatologies.tiff\",  units=\"in\", width=10, height=7, dpi=900)\nb\n\nTableGrob (2 x 1) \"arrange\": 2 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (2-2,1-1) arrange gtable[layout]"
  },
  {
    "objectID": "climate_panama_visualizations.html#create-data-frames-for-bias-of-each-response-variable",
    "href": "climate_panama_visualizations.html#create-data-frames-for-bias-of-each-response-variable",
    "title": "6  Plots and Figures",
    "section": "10.1 Create data frames for bias of each response variable",
    "text": "10.1 Create data frames for bias of each response variable\n\nprecipitation_data_subset &lt;- read.csv(file=\"../tables/climatologies.csv\")\ndata_sources &lt;- c(\"CHELSA.1.2\", \"CHELSA.2.1\", \"CHELSA.EarthEnv\", \"CHPclim\", \"WorldClim.2.1\", \"CHIRPS.2.0\", \"CHELSA.W5E5v1.0\", \"TerraClimate\", \"PBCOR.CHELSA.1.2\", \"PBCOR.CHPclim\", \"PBCOR.WorldClim.2.1\")\nsource_names &lt;- c(\"CHELSA 1.2\", \"CHELSA 2.1\", \"CHELSA EarthEnv\", \"CHPclim\", \"WorldClim 2.1\", \"CHIRPS 2.0\", \"CHELSA-W5E5v1.0\", \"TerraClimate\", \"PBCOR CHELSA 1.2\", \"PBCOR CHPclim\", \"PBCOR WorldClim 2.1\")\n\nbias_frame &lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"annual\",\"source\") %&gt;% \n  mutate(bias=NA)\nbias_frame_jfma&lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"jfma\",\"source\") %&gt;% \n  mutate(bias=NA)\n\nfor(i in seq_along(data_sources)) {\n  bias_frame[bias_frame$source == source_names[i], \"bias\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], data_sources[i]] - precipitation_data_subset[precipitation_data_subset$source == source_names[i], \"annual\"]\n}\njfma_sources &lt;- paste0(data_sources, \"_jfma\")\nfor(i in seq_along(jfma_sources)) {\n  bias_frame_jfma[bias_frame_jfma$source == source_names[i], \"bias\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], jfma_sources[i]] - precipitation_data_subset[precipitation_data_subset$source == source_names[i], \"jfma\"]\n}"
  },
  {
    "objectID": "climate_panama_visualizations.html#convert-to-other-coordinate-system-for-plotting-purposes",
    "href": "climate_panama_visualizations.html#convert-to-other-coordinate-system-for-plotting-purposes",
    "title": "6  Plots and Figures",
    "section": "10.2 Convert to other coordinate system for plotting purposes",
    "text": "10.2 Convert to other coordinate system for plotting purposes\n\nbias_frame &lt;- bias_frame %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"), crs = 4326) %&gt;%\n  st_transform(3857) %&gt;%\n  cbind(st_coordinates(.)) %&gt;%\n  rename(longitude_3857 = X, latitude_3857 = Y)%&gt;%\n  filter(source!=\"CHELSA-W5E5v1.0\")\n\nbias_frame_jfma &lt;- bias_frame_jfma %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"), crs = 4326) %&gt;%\n  st_transform(3857) %&gt;%\n  cbind(st_coordinates(.)) %&gt;%\n  rename(longitude_3857 = X, latitude_3857 = Y)%&gt;%\n  filter(source!=\"CHELSA-W5E5v1.0\")"
  },
  {
    "objectID": "climate_panama_visualizations.html#plot-the-panels-for-each-response-variable.",
    "href": "climate_panama_visualizations.html#plot-the-panels-for-each-response-variable.",
    "title": "6  Plots and Figures",
    "section": "10.3 Plot the panels for each response variable.",
    "text": "10.3 Plot the panels for each response variable.\n\nBias_annual_panels &lt;- basemap_ggplot(bbox) +\n  theme_void() +\n  geom_jitter(data = bias_frame,\n              aes(x = longitude_3857, y = latitude_3857, colour = bias),\n              size = 3, width = 0.3, height = 0.3) +\n  geom_jitter(data = bias_frame,\n              aes(x = longitude_3857, y = latitude_3857),\n              size = 3, shape = 21, width = 0.3, height = 0.3) +\n  scale_color_scico(palette = \"roma\", direction = -1) +\n  facet_wrap(~source,ncol=5) +\n  labs(color = \"Bias (mm)\") +\n  ggtitle(\"Annual Precipitation Bias\")\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nBias_jfma_panels &lt;- basemap_ggplot(bbox) +\n  theme_void() +\n  geom_jitter(data = bias_frame_jfma,\n              aes(x = longitude_3857, y = latitude_3857, colour = bias),\n              size = 3, width = 0.3, height = 0.3) +\n  geom_jitter(data = bias_frame_jfma,\n              aes(x = longitude_3857, y = latitude_3857),\n              size = 3, shape = 21, width = 0.3, height = 0.3) +\n  scale_color_scico(palette = \"roma\", direction = -1) +\n  facet_wrap(~source,ncol = 5) +\n  labs(color = \"Bias (mm)\") +\n  ggtitle(\"January to April Precipitation Bias\")\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nBias_annual_panels &lt;- Bias_annual_panels +\n  theme(strip.text = element_text(size = 12),\n        plot.title = element_text(hjust = 0.5,size=14),\n        plot.background = element_rect(fill = \"white\"))\n\nBias_jfma_panels &lt;- Bias_jfma_panels +\n  theme(strip.text = element_text(size = 12),\n        plot.title = element_text(hjust = 0.5,size=14),\n        plot.background = element_rect(fill = \"white\"))\n\nggsave(Bias_annual_panels,path = '../plots',filename = \"annual_jfma_maps.tiff\",  units=\"in\", width=10, height=10, dpi=900)\nggsave(Bias_jfma_panels,path = '../plots',filename = \"bias_jfma_maps.tiff\",  units=\"in\", width=10, height=10, dpi=900)\nBias_annual_panels\n\n\n\nBias_jfma_panels"
  },
  {
    "objectID": "climate_panama_visualizations.html#arrenge-both-set-of-panels-in-a-grid",
    "href": "climate_panama_visualizations.html#arrenge-both-set-of-panels-in-a-grid",
    "title": "6  Plots and Figures",
    "section": "10.4 Arrenge both set of panels in a grid",
    "text": "10.4 Arrenge both set of panels in a grid\n\nc&lt;-grid.arrange(Bias_annual_panels,Bias_jfma_panels,ncol = 1)\n\n\n\nggsave(c,path='../plots' ,filename = \"../plots/bias_figure.tiff\",  units=\"in\", width=20, height=10, dpi=600)\nggsave(c,path='../plots' ,filename = \"../plots/bias_figure.jpg\",  units=\"in\", width=20, height=10, dpi=300)\nc\n\nTableGrob (2 x 1) \"arrange\": 2 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (2-2,1-1) arrange gtable[layout]"
  },
  {
    "objectID": "climate_panama_visualizations.html#figure-1.-sites",
    "href": "climate_panama_visualizations.html#figure-1.-sites",
    "title": "6  Plots and Figures",
    "section": "6.2 FIGURE 1. SITES",
    "text": "6.2 FIGURE 1. SITES\nRead in files for Figure 1\n\nsetwd(\"C:/Users/Vicente/repo/ClimatePanama/ClimatePanamaBook\")\n\nACP_MET&lt;-  \"../data_ground/met_data/ACP_data/cleanedVV/ACP_met_stations.csv\"\nSTRI_MET&lt;- \"../tables/stri_met_stations.csv\"\n\nstriStation&lt;- read.csv(STRI_MET)\nacpStation&lt;- read.csv(ACP_MET)\n\nextentMap  &lt;- raster::extent(c(-80.2,-79.4, 8.8, 9.5))\n\nStations wrangling and cleaning\n\nstriStation &lt;- striStation %&gt;%\n  dplyr::mutate(\n    longitude = as.character(longitude),    \n    longitude = readr::parse_number(longitude) \n  )\nstriStation$source&lt;- \"STRI\"\nacpStation$source&lt;-\"ACP\"\nprecipitation_data_subset&lt;-read.csv(file=\"../tables/climatologies.csv\")\n\nCombine sites data into a single dataset\n\nsite&lt;-data.frame(unique(precipitation_data_subset$site))%&gt;%\nrename(site=unique.precipitation_data_subset.site.)%&gt;%\nleft_join(striStation[,c('alias','latitude','longitude','source')], by = c(\"site\" = \"alias\"))%&gt;%\nleft_join(acpStation[,c('site','latitude','longitude','source')], by = c(\"site\" = \"site\"))%&gt;%\nmutate(latitude=ifelse(is.na(latitude.x),latitude.y,latitude.x))%&gt;%\nmutate(longitude=ifelse(is.na(longitude.x),longitude.y,longitude.x))%&gt;%\nmutate(source=ifelse(is.na(source.x),source.y,source.x))%&gt;%\ndplyr::select(site,latitude,longitude,source)%&gt;%filter(!is.na(latitude))\nsite$longitude&lt;- abs(site$longitude)*-1\nsite_sf &lt;- st_as_sf(site, coords = c(\"longitude\",\"latitude\"), crs = 4326)\nsite_sf_3857 &lt;- st_transform(site_sf, 3857)\nsite_coords &lt;- st_coordinates(site_sf_3857)\nsite_df &lt;- cbind(site, site_coords)\n\nPlot using the color blind safe terrain color palette\n\nset_defaults(map_service = \"esri\", map_type = \"world_shaded_relief\")\nbbox &lt;- st_bbox(c(xmin = -80.2, xmax = -79.4, ymin = 8.7, ymax = 9.6), crs = st_crs(4326))\n\nx_labels_4326 &lt;- c(-80.13, -79.95, -79.77, -79.59, -79.41)\ny_labels_4326 &lt;- c(8.77, 8.95, 9.12, 9.30, 9.48)\n\n# Add scales with correct labels\nbasemap_ggplot(bbox)+\n  scale_x_continuous(breaks = c(-8920000, -8900000, -8880000, -8860000, -8840000), labels = x_labels_4326) +\n  scale_y_continuous(breaks = c(980000, 1000000, 1020000, 1040000, 1060000), labels = y_labels_4326)+\n  theme(axis.title.x = element_blank(), axis.title.y = element_blank(),\n        panel.grid.major = element_blank(),  # Remove major grid lines\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank())\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\n\n\n\np&lt;-basemap_ggplot(bbox) +geom_point(data = site_df, aes(x = X, y = Y, color = source), size = 2) +\n  scale_x_continuous(breaks = c(-8920000, -8900000, -8880000, -8860000, -8840000), labels = x_labels_4326) +\n  scale_y_continuous(breaks = c(980000, 1000000, 1020000, 1040000, 1060000), labels = y_labels_4326) +\n  theme(\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank())\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nsite_df2&lt;- subset(site_df, !site %in% c(\"BCIELECT\", \"BCICLEAR\", \"BALBOAHTS\", \"DIABLO\",\"ESCANDALOSA\",\"PELUCA\"))\nBCIELECT&lt;-subset(site_df, site %in% c(\"BCIELECT\"))\nBCICLEAR&lt;-subset(site_df, site %in% c(\"BCICLEAR\"))\nBALBOAHTS&lt;-subset(site_df, site %in% c(\"BALBOAHTS\"))\nDIABLO&lt;-subset(site_df, site %in% c(\"DIABLO\"))\nESCANDALOSA&lt;-subset(site_df, site %in% c(\"ESCANDALOSA\"))\nPELUCA&lt;-subset(site_df, site %in% c(\"PELUCA\"))\n\nsites_plot&lt;-p + \n  geom_text(data = site_df2, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_y = 1000, fontface = \"bold\") +\n  geom_text(data = BCIELECT, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3900, fontface = \"bold\") +\n  geom_text(data = BCICLEAR, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = 4250, fontface = \"bold\") +\n  geom_text(data = BALBOAHTS, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_y = -1000, fontface = \"bold\") +\n  geom_text(data = DIABLO, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3000, fontface = \"bold\") +\n  geom_text(data = ESCANDALOSA, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3000, nudge_y = 1000, fontface = \"bold\") +\n  geom_text(data = PELUCA, aes(x = X, y = Y, label = site), color = \"black\", size = 2, nudge_x = -3000, fontface = \"bold\") +\n  labs(color = \"Source\")\n\nggsave(\"sites.tiff\", path = \"../plots\", plot = sites_plot, dpi = 900, units = \"in\",width = 7, height=7)\n\nsites_plot"
  },
  {
    "objectID": "climate_panama_visualizations.html#figure-2.-climatologies",
    "href": "climate_panama_visualizations.html#figure-2.-climatologies",
    "title": "6  Plots and Figures",
    "section": "6.3 FIGURE 2. Climatologies",
    "text": "6.3 FIGURE 2. Climatologies\nTotal annual precipitation, excluding the lowest correlation CHELSA w5e5\n\nannual_pan&lt;-function(list,extent){\n  a&lt;-lapply(list, raster)\n  b&lt;-raster::stack(a)\n  c&lt;-raster::calc(b,sum)\n  d&lt;-raster::crop(c,extent)\n  return(d)\n}\n\nStack the climatologies and plot them with the same resolution\n\n# CHELSA 1.2\nchelsa_orig&lt;-list.files(\"../data_reanalysis/CHELSA 1.2/\",full.names=TRUE,pattern = \".tif\")\nchelsa_orig&lt;-annual_pan(chelsa_orig,extentMap)\nplot(chelsa_orig)\n\n\n\n#CHIRPS annual precip at 0.05 \nchirps&lt;-list.files(\"../data_reanalysis/CHIRPS 2.0/climatology\",full.name=TRUE,pattern=\".tif\")\nchirps&lt;-annual_pan(chirps,extentMap)\nchirps&lt;-projectRaster(chirps,chelsa_orig, method='ngb')\nvalues(chirps)&lt;-ifelse(values(chirps)&lt;0,NA,values(chirps))\nplot(chirps)\n\n\n\n#chelsa 2.1 annual precip 0,0083333 degree orig \nchelsa2_orig&lt;-list.files(\"../data_reanalysis/CHELSA 2.1\",full.names=TRUE,pattern = \".tif\")\nchelsa2_orig&lt;-annual_pan(chelsa2_orig,extentMap)\nplot(chelsa2_orig)\n\n\n\n#chp 0.05 degree original 1980-2009 \nchp&lt;- list.files(\"../data_reanalysis/CHPclim\",full.names=TRUE,pattern = \".tif\")\nchp&lt;-annual_pan(chp,extentMap)\nchp&lt;-projectRaster(chp,chelsa_orig, method='ngb')\nplot(chp)\n\n\n\n#pbcor 0.05 degree origina\npbcor_chp&lt;- list.files(\"../data_reanalysis/PBCOR/CHPclim corrected\",full.names=TRUE,pattern = \".tif\")\npbcor_chp&lt;-annual_pan(pbcor_chp,extentMap)\npbcor_chp&lt;-projectRaster(pbcor_chp,chelsa_orig, method='ngb')\nplot(pbcor_chp)\n\n\n\n#pbcor 0.05 degree original\npbcor_chelsa&lt;- list.files(\"../data_reanalysis/PBCOR/CHELSA 1.2 corrected\",full.names=TRUE)\npbcor_chelsa&lt;-annual_pan(pbcor_chelsa,extentMap)\npbcor_chelsa&lt;-projectRaster(pbcor_chelsa,chelsa_orig,method='ngb')\nplot(pbcor_chelsa)\n\n\n\n#terra\nterra&lt;- list.files(\"../data_reanalysis/TerraClimate\",full.names = TRUE,pattern = \".tif\")\nterra&lt;-annual_pan(terra,extentMap)\nterra&lt;-projectRaster(terra,chelsa_orig,method = 'ngb')\nplot(terra)\n\n\n\n#Chelsa earthenv 2003-2016\nchelsaearthenv&lt;-list.files(\"../data_reanalysis/CHELSA EarthEnv/climatology\",full.names = TRUE,pattern = \".tif\")\nchelsaearthenv&lt;-annual_pan(chelsaearthenv,extentMap)\nplot(chelsaearthenv)\n\n\n\n#Pbcorworldclim\npbcor_worldclim&lt;-list.files(\"../data_reanalysis/PBCOR/WorldClim corrected\",full.names = TRUE,pattern = \".tif\")\npbcor_worldclim&lt;-annual_pan(pbcor_worldclim,extentMap)\npbcor_worldclim&lt;-projectRaster(pbcor_worldclim,chelsa_orig,method=\"ngb\")\nplot(pbcor_worldclim)\n\n\n\n#worldclim \nworldclim&lt;-list.files(\"../data_reanalysis/WorldClim 2.1\",full.names=TRUE,pattern=\".tif\")\nworldclim&lt;-annual_pan(worldclim,extentMap)\nplot(worldclim)\n\n\n\n\nStack the plots, define a list and plot in a grid\n\nres_stack&lt;-raster::stack(chelsa_orig,chelsa2_orig,chelsaearthenv,pbcor_chelsa,pbcor_chp,pbcor_worldclim,terra,\n                         chp,worldclim,chirps)\n\nmodels&lt;-list('layer.1'=\"CHELSA 1.2\",\n             'layer.2'=\"CHELSA 2.1\",\n             'layer.3'=\"CHELSA EarthEnv\",\n             'layer.4'=\"PBCOR CHELSA 1.2\",\n             'layer.5'=\"PBCOR CHPclim\",\n             'layer.6'=\"PBCOR WorldClim\",\n             'layer.7'=\"TerraClimate\",\n             'layer.8'=\"CHPclim v.1.0\",\n             'layer.9'=\"WorldClim v2.1\",\n             'layer.10'=\"CHIRPS v2\")\nmodel2&lt;- function(variable,value){\n  return(models[value])\n}\n\n\njf1&lt;-gplot(res_stack) + \n  geom_raster(aes(fill = value)) +\n  facet_wrap(~ variable,labeller=model2,ncol = 5) +\n  scale_fill_scico(palette = 'roma',na.value=\"white\",name = \"mm/year\")+\n  coord_equal()+theme_void()+theme(strip.text.x = element_text(size = 10, colour = \"black\"))+\n  labs(title = \"Total Annual Precipitation\")+ \n  theme(plot.title = element_text(hjust = 0.5,size = 16))\n\nggsave(path = '../plots',filename = \"annual_maps.tiff\",  units=\"in\", width=10, height=6, dpi=900)\njf1\n\n\n\n\nJanuary to April Precipitation individual plots.\n\n# CHELSA 1.2 \nchelsa_orig&lt;-list.files(\"../data_reanalysis/CHELSA 1.2/\",full.names=TRUE,pattern = \".tif\")\nchelsa_orig&lt;-chelsa_orig[1:4]\nchelsa_orig&lt;-annual_pan(chelsa_orig,extentMap)\nplot(chelsa_orig)\n\n\n\n#CHIRPS annual precip at 0.05 \nchirps&lt;-list.files(\"../data_reanalysis/CHIRPS 2.0/climatology\",full.name=TRUE,pattern=\".tif\")\nchirps&lt;-chirps[1:4]\nchirps&lt;-annual_pan(chirps,extentMap)\nchirps&lt;-projectRaster(chirps,chelsa_orig, method='ngb')\nvalues(chirps)&lt;-ifelse(values(chirps)&lt;0,NA,values(chirps))\nplot(chirps)\n\n\n\n#chelsa 2.1 annual precip 0,0083333 degree orig \nchelsa2_orig&lt;-list.files(\"../data_reanalysis/CHELSA 2.1\",full.names=TRUE,pattern = \".tif\")\nchelsa2_orig&lt;- chelsa2_orig[1:4]\nchelsa2_orig&lt;-annual_pan(chelsa2_orig,extentMap)\nplot(chelsa2_orig)\n\n\n\n#chp 0.05 degree original 1980-2009 \nchp&lt;- list.files(\"../data_reanalysis/CHPclim\",full.names=TRUE,pattern = \".tif\")\nchp&lt;- chp[1:4]\nchp&lt;-annual_pan(chp,extentMap)\nchp&lt;-projectRaster(chp,chelsa_orig, method='ngb')\nplot(chp)\n\n\n\n#pbcor 0.05 degree origina\npbcor_chp&lt;- list.files(\"../data_reanalysis/PBCOR/CHPclim corrected\",full.names=TRUE,pattern = \".tif\")\npbcor_chp&lt;-pbcor_chp[1:4]\npbcor_chp&lt;-annual_pan(pbcor_chp,extentMap)\npbcor_chp&lt;-projectRaster(pbcor_chp,chelsa_orig, method='ngb')\nplot(pbcor_chp)\n\n\n\n#pbcor 0.05 degree original\npbcor_chelsa&lt;- list.files(\"../data_reanalysis/PBCOR/CHELSA 1.2 corrected\",full.names=TRUE)\npbcor_chelsa&lt;-pbcor_chelsa[1:4]\npbcor_chelsa&lt;-annual_pan(pbcor_chelsa,extentMap)\npbcor_chelsa&lt;-projectRaster(pbcor_chelsa,chelsa_orig,method='ngb')\nplot(pbcor_chelsa)\n\n\n\n#terra\nterra&lt;- list.files(\"../data_reanalysis/TerraClimate\",full.names = TRUE,pattern = \".tif\")\nterra&lt;-terra[1:4]\nterra&lt;-annual_pan(terra,extentMap)\nterra&lt;-projectRaster(terra,chelsa_orig,method = 'ngb')\nplot(terra)\n\n\n\n#Chelsa earthenv 2003-2016\nchelsaearthenv&lt;-list.files(\"../data_reanalysis/CHELSA EarthEnv/climatology\",full.names = TRUE,pattern = \".tif\")\nchelsaearthenv&lt;-chelsaearthenv[1:4]\nchelsaearthenv&lt;-annual_pan(chelsaearthenv,extentMap)\nplot(chelsaearthenv)\n\n\n\n#Pbcorworldclim\npbcor_worldclim&lt;-list.files(\"../data_reanalysis/PBCOR/WorldClim corrected\",full.names = TRUE,pattern = \".tif\")\npbcor_worldclim&lt;-pbcor_worldclim[1:4]\npbcor_worldclim&lt;-annual_pan(pbcor_worldclim,extentMap)\npbcor_worldclim&lt;-projectRaster(pbcor_worldclim,chelsa_orig,method=\"ngb\")\nplot(pbcor_worldclim)\n\n\n\n#worldclim \nworldclim&lt;-list.files(\"../data_reanalysis/WorldClim 2.1\",full.names=TRUE,pattern=\".tif\")\nworldclim&lt;-worldclim[1:4]\nworldclim&lt;-annual_pan(worldclim,extentMap)\nplot(worldclim)\n\n\n\n\n\n6.3.1 Stack the plots and plot in a grid.\n\nres_stack_jfma&lt;-raster::stack(chelsa_orig,chelsa2_orig,chelsaearthenv,pbcor_chelsa,pbcor_chp,pbcor_worldclim,terra,chp,worldclim,chirps)\n\nmodels&lt;-list('layer.1'=\"CHELSA 1.2\",\n             'layer.2'=\"CHELSA 2.1\",\n             'layer.3'=\"CHELSA EarthEnv\",\n             'layer.4'=\"PBCOR CHELSA 1.2\",\n             'layer.5'=\"PBCOR CHPclim\",\n             'layer.6'=\"PBCOR WorldClim\",\n             'layer.7'=\"TerraClimate\",\n             'layer.8'=\"CHPclim v.1.0\",\n             'layer.9'=\"WorldClim v2.1\",\n             'layer.10'=\"CHIRPS v2\")\nmodel2&lt;- function(variable,value){\n  return(models[value])\n}\n\njf2&lt;-gplot(res_stack_jfma) + \n  geom_raster(aes(fill = value)) +\n  facet_wrap(~ variable,labeller=model2,ncol = 5) +\n  scale_fill_scico(palette = 'roma',na.value=\"white\",name = \"mm\")+\n  coord_equal()+theme_void()+theme(strip.text.x = element_text(size = 10, colour = \"black\"))+\n  labs(title = \"January to April Precipitation\")+ \n  theme(plot.title = element_text(hjust = 0.5,size = 16))\n\nggsave(path = '../plots',filename = \"jfma_maps.tiff\",  units=\"in\", width=10, height=6, dpi=900)\njf2\n\n\n\n\nArrange both combined plots in a grid.\n\nb&lt;-grid.arrange(jf1,jf2,ncol = 1)\n\n\n\nggsave(b,path='../plots' ,filename = \"../plots/climatologies.tiff\",  units=\"in\", width=10, height=7, dpi=900)\nb\n\nTableGrob (2 x 1) \"arrange\": 2 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (2-2,1-1) arrange gtable[layout]"
  },
  {
    "objectID": "climate_panama_visualizations.html#annual-bias-and-january-to-april-bias",
    "href": "climate_panama_visualizations.html#annual-bias-and-january-to-april-bias",
    "title": "6  Plots and Figures",
    "section": "6.4 Annual Bias and January to April Bias",
    "text": "6.4 Annual Bias and January to April Bias\n\n6.4.1 Create data frames for bias of each response variable\n\nprecipitation_data_subset &lt;- read.csv(file=\"../tables/climatologies.csv\")\ndata_sources &lt;- c(\"CHELSA.1.2\", \"CHELSA.2.1\", \"CHELSA.EarthEnv\", \"CHPclim\", \"WorldClim.2.1\", \"CHIRPS.2.0\", \"CHELSA.W5E5v1.0\", \"TerraClimate\", \"PBCOR.CHELSA.1.2\", \"PBCOR.CHPclim\", \"PBCOR.WorldClim.2.1\")\nsource_names &lt;- c(\"CHELSA 1.2\", \"CHELSA 2.1\", \"CHELSA EarthEnv\", \"CHPclim\", \"WorldClim 2.1\", \"CHIRPS 2.0\", \"CHELSA-W5E5v1.0\", \"TerraClimate\", \"PBCOR CHELSA 1.2\", \"PBCOR CHPclim\", \"PBCOR WorldClim 2.1\")\n\nbias_frame &lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"annual\",\"source\") %&gt;% \n  mutate(bias=NA)\nbias_frame_jfma&lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"jfma\",\"source\") %&gt;% \n  mutate(bias=NA)\n\nfor(i in seq_along(data_sources)) {\n  bias_frame[bias_frame$source == source_names[i], \"bias\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], data_sources[i]] - precipitation_data_subset[precipitation_data_subset$source == source_names[i], \"annual\"]\n}\njfma_sources &lt;- paste0(data_sources, \"_jfma\")\nfor(i in seq_along(jfma_sources)) {\n  bias_frame_jfma[bias_frame_jfma$source == source_names[i], \"bias\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], jfma_sources[i]] - precipitation_data_subset[precipitation_data_subset$source == source_names[i], \"jfma\"]\n}\n\n\n\n6.4.2 Convert to other coordinate system for plotting purposes\n\nbias_frame &lt;- bias_frame %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"), crs = 4326) %&gt;%\n  st_transform(3857) %&gt;%\n  cbind(st_coordinates(.)) %&gt;%\n  rename(longitude_3857 = X, latitude_3857 = Y)%&gt;%\n  filter(source!=\"CHELSA-W5E5v1.0\")\n\nbias_frame_jfma &lt;- bias_frame_jfma %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"), crs = 4326) %&gt;%\n  st_transform(3857) %&gt;%\n  cbind(st_coordinates(.)) %&gt;%\n  rename(longitude_3857 = X, latitude_3857 = Y)%&gt;%\n  filter(source!=\"CHELSA-W5E5v1.0\")\n\n\n\n6.4.3 Plot the panels for each response variable.\n\nBias_annual_panels &lt;- basemap_ggplot(bbox) +\n  theme_void() +\n  geom_jitter(data = bias_frame,\n              aes(x = longitude_3857, y = latitude_3857, colour = bias),\n              size = 3, width = 0.3, height = 0.3) +\n  geom_jitter(data = bias_frame,\n              aes(x = longitude_3857, y = latitude_3857),\n              size = 3, shape = 21, width = 0.3, height = 0.3) +\n  scale_color_scico(palette = \"roma\", direction = -1) +\n  facet_wrap(~source,ncol=5) +\n  labs(color = \"Bias (mm)\") +\n  ggtitle(\"Annual Precipitation Bias\")\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nBias_jfma_panels &lt;- basemap_ggplot(bbox) +\n  theme_void() +\n  geom_jitter(data = bias_frame_jfma,\n              aes(x = longitude_3857, y = latitude_3857, colour = bias),\n              size = 3, width = 0.3, height = 0.3) +\n  geom_jitter(data = bias_frame_jfma,\n              aes(x = longitude_3857, y = latitude_3857),\n              size = 3, shape = 21, width = 0.3, height = 0.3) +\n  scale_color_scico(palette = \"roma\", direction = -1) +\n  facet_wrap(~source,ncol = 5) +\n  labs(color = \"Bias (mm)\") +\n  ggtitle(\"January to April Precipitation Bias\")\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nBias_annual_panels &lt;- Bias_annual_panels +\n  theme(strip.text = element_text(size = 12),\n        plot.title = element_text(hjust = 0.5,size=14),\n        plot.background = element_rect(fill = \"white\"))\n\nBias_jfma_panels &lt;- Bias_jfma_panels +\n  theme(strip.text = element_text(size = 12),\n        plot.title = element_text(hjust = 0.5,size=14),\n        plot.background = element_rect(fill = \"white\"))\n\nggsave(Bias_annual_panels,path = '../plots',filename = \"annual_jfma_maps.tiff\",  units=\"in\", width=10, height=10, dpi=900)\nggsave(Bias_jfma_panels,path = '../plots',filename = \"bias_jfma_maps.tiff\",  units=\"in\", width=10, height=10, dpi=900)\nBias_annual_panels\n\n\n\nBias_jfma_panels\n\n\n\n\n\n\n6.4.4 Arrange both set of panels in a grid\n\nc&lt;-grid.arrange(Bias_annual_panels,Bias_jfma_panels,ncol = 1)\n\n\n\nggsave(c,path='../plots' ,filename = \"../plots/bias_figure.tiff\",  units=\"in\", width=20, height=10, dpi=600)\nggsave(c,path='../plots' ,filename = \"../plots/bias_figure.jpg\",  units=\"in\", width=20, height=10, dpi=300)\nc\n\nTableGrob (2 x 1) \"arrange\": 2 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (2-2,1-1) arrange gtable[layout]"
  },
  {
    "objectID": "climate_panama_visualizations.html#figure-4.-correlation-plots",
    "href": "climate_panama_visualizations.html#figure-4.-correlation-plots",
    "title": "6  Plots and Figures",
    "section": "6.5 Figure 4. Correlation plots",
    "text": "6.5 Figure 4. Correlation plots\n\nprecipitation_data_subset &lt;- read.csv(file=\"../tables/climatologies.csv\")\ndata_sources &lt;- c(\"CHELSA.1.2\", \"CHELSA.2.1\", \"CHELSA.EarthEnv\", \"CHPclim\", \"WorldClim.2.1\", \"CHIRPS.2.0\", \"CHELSA.W5E5v1.0\", \"TerraClimate\", \"PBCOR.CHELSA.1.2\", \"PBCOR.CHPclim\", \"PBCOR.WorldClim.2.1\")\nsource_names &lt;- c(\"CHELSA 1.2\", \"CHELSA 2.1\", \"CHELSA EarthEnv\", \"CHPclim\", \"WorldClim 2.1\", \"CHIRPS 2.0\", \"CHELSA-W5E5v1.0\", \"TerraClimate\", \"PBCOR CHELSA 1.2\", \"PBCOR CHPclim\", \"PBCOR WorldClim 2.1\")\n\ncorr_frame &lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"annual\",\"source\") %&gt;% \n  mutate(value=NA)\ncorr_frame_jfma&lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"jfma\",\"source\") %&gt;% \n  mutate(value=NA)\n\nfor(i in seq_along(data_sources)) {\n  corr_frame[corr_frame$source == source_names[i], \"value\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], data_sources[i]]\n}\njfma_sources &lt;- paste0(data_sources, \"_jfma\")\nfor(i in seq_along(jfma_sources)) {\n  corr_frame_jfma[corr_frame_jfma$source == source_names[i], \"value\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], jfma_sources[i]] \n}\n\nPlot using ggplot\n\nannual_corr&lt;-ggplot(corr_frame[corr_frame$source!=\"CHELSA-W5E5v1.0\",],aes(x = value,y=annual))+\n  geom_smooth(method='lm',se=FALSE)+\n  geom_point(col=rgb(0,0,0,alpha=0.5))+facet_wrap(vars(source),ncol=5)+\n  theme_classic()+\n  expand_limits(x=c(1000,4500),y=c(1000,4500))+\n  geom_abline(slope = 1, intercept = 0, lty= 2)+\n  coord_equal()\n\ndat_text &lt;- data.frame(\n  source  = unique(corr_frame[corr_frame$source!=\"CHELSA-W5E5v1.0\",\"source\"])\n)\n\nfor(i in 1:10){\n  model &lt;- lm(value ~ annual, data = corr_frame[corr_frame$source == dat_text$source[i],])\n  dat_text$eq[i] &lt;- paste0(\"y = \", round(coef(model)[1], 2), \" + \", round(coef(model)[2], 2), \"x\")\n}\nannual_corr&lt;-annual_corr + geom_text(\n  data    = dat_text,\n  mapping = aes(x = 1800, y = 1300, label = eq),\n  hjust   = 0,\n  vjust   = 1,\n  size    = 3\n)+labs(title = \"Total Annual Correlation Plots\")+ \n  xlab(\"Gridded products annual precipitation (mm)\") +\n  ylab(\"In-situ annual precipitation (mm)\") \n\nggsave(annual_corr,path='../plots' ,filename = \"../plots/correlation_annual.tiff\",  units=\"in\", width=8, height=7, dpi=900)\n\n`geom_smooth()` using formula = 'y ~ x'\n\nannual_corr\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nPlot January to April correlation plots\n\njfma_corr&lt;-ggplot(corr_frame_jfma[corr_frame_jfma$source!=\"CHELSA-W5E5v1.0\",],aes(x = value,y=jfma))+\n  geom_smooth(method='lm',se=FALSE)+\n  geom_point(col=rgb(0,0,0,alpha=0.5))+facet_wrap(vars(source),ncol=5)+\n  expand_limits(x=c(0,800),y=c(0,800))+\n  theme_classic()+\n  geom_abline(slope = 1, intercept = 0, lty= 2)+\n  coord_equal()\n\ndat_text &lt;- data.frame(\n  source  = unique(corr_frame_jfma[corr_frame_jfma$source!=\"CHELSA-W5E5v1.0\",\"source\"])\n)\n\nfor(i in 1:10){\n  model &lt;- lm(value ~ jfma, data = corr_frame_jfma[corr_frame_jfma$source == dat_text$source[i],])\n  dat_text$eq[i] &lt;- paste0(\"y = \", round(coef(model)[1], 2), \" + \", round(coef(model)[2], 2), \"x\")\n}\njfma_corr&lt;-jfma_corr + geom_text(\n  data    = dat_text,\n  mapping = aes(x = 400, y = 50, label = eq),\n  hjust   = 0,\n  vjust   = 1,\n  size    = 3\n)+labs(title = \"January-April Correlation Plots\")+ \n  xlab(\"Gridded products Jan-Apr precipitation (mm)\") +\n  ylab(\"In-situ Jan-Apr precipitation (mm)\") \n\nggsave(jfma_corr,path='../plots' ,filename = \"../plots/correlation_jfma.tiff\",  units=\"in\", width=8, height=7, dpi=900)\n\n`geom_smooth()` using formula = 'y ~ x'\n\njfma_corr\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nArrange both correlation panels in a grid\n\nd&lt;-grid.arrange(annual_corr,jfma_corr,ncol = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nggsave(d,path='../plots' ,filename = \"../plots/correlation.tiff\",  units=\"in\", width=10, height=10, dpi=600)\nggsave(d,path='../plots' ,filename = \"../plots/correlation.jpg\",  units=\"in\", width=10, height=10, dpi=300)\n\n\n6.5.1 Figure.5 seasonality plots\nMutating the data is necessary to consider a second line representing a second set of ground data in BCI.\n\nacp38_ag&lt;-read.csv(\"../tables/acp38_ag.csv\")\nacp38_ag_long &lt;- acp38_ag %&gt;% \n  tidyr::pivot_longer(cols = c(CHELSA1.2:PBCOR_WorldClim2.1), names_to = \"colname\", values_to = \"value\")%&gt;%\n  mutate(colname = case_when(\n    colname == \"CHELSA1.2\" ~ \"CHELSA 1.2\",\n    colname == \"CHELSA2.1\" ~ \"CHELSA 2.1\",\n    colname == \"CHELSA_EarthEnv\" ~ \"CHELSA EarthEnv\",\n    colname == \"CHPclim\" ~ \"CHPclim\",\n    colname == \"WorldClim2.1\" ~ \"WorldClim 2.1\",\n    colname == \"CHIRPS2.0\" ~ \"CHIRPS 2.0\",\n    colname == \"CHELSAW5E5v1.0\" ~ \"CHELSA-W5E5v1.0\",\n    colname == \"TerraClimate\" ~ \"TerraClimate\",\n    colname == \"PBCOR_CHELSA1.2\" ~ \"PBCOR CHELSA 1.2\",\n    colname == \"PBCOR_CHPclim\" ~ \"PBCOR CHPclim\",\n    colname == \"PBCOR_WorldClim2.1\" ~ \"PBCOR WorldClim 2.1\",\n  ))%&gt;%\n  filter((dataset_name == colname) | (dataset_name == \"Ground\" & colname == \"CHELSA 1.2\"))%&gt;%\n  mutate(value = ifelse(dataset_name == \"Ground\", mon_mean, value)) %&gt;%\n  mutate(dataset_name = ifelse(site == \"BCICLEAR\" & dataset_name == \"Ground\", \"Ground manual\", dataset_name))%&gt;%\n  filter(!(site == \"BCICLEAR\" & dataset_name != \"Ground manual\"))%&gt;%\n  mutate(site=ifelse(site==\"BCICLEAR\",\"BCI\",site))\n\nacp38_ag_long$dataset_name &lt;- factor(acp38_ag_long$dataset_name, levels = c(\"CHELSA 1.2\",\"CHELSA 2.1\",\"CHELSA EarthEnv\", \"CHPclim\",            \n                                                                            \"WorldClim 2.1\",\"CHIRPS 2.0\",\"CHELSA-W5E5v1.0\",\"TerraClimate\",     \n                                                                            \"PBCOR CHELSA 1.2\",\"PBCOR CHPclim\",\"PBCOR WorldClim 2.1\",\"Ground\",           \n                                                                             \"Ground manual\"))\n\nacp38_ag_long$site &lt;- factor(acp38_ag_long$site,    # Reordering group factor levels\n                               levels = c(\"SANMIGUEL\", \"AGUACLARA\", \"PELUCA\", \"BCI\",\"GUACHA\",\"CASCADAS\",\"GAMBOA\",\"PEDROMIGUEL\"))\n\nPlot using ggplot2 and customs colors\n\nseasonality_plot&lt;-ggplot(acp38_ag_long,aes(x=Month,y=value))+\n  geom_line(aes(color=dataset_name),linewidth=0.2)+\n  geom_point(aes(color=dataset_name),size=0.2)+\n  facet_wrap(vars(site),ncol = 4)+\n  scale_color_manual(labels = c(\"CHELSA 1.2\",\"CHELSA 2.1\",\"CHELSA EarthEnv\", \"CHPclim\",            \n                                \"WorldClim 2.1\",\"CHIRPS 2.0\",\"CHELSA-W5E5v1.0\",\"TerraClimate\",     \n                                \"PBCOR CHELSA 1.2\",\"PBCOR CHPclim\",\"PBCOR WorldClim 2.1\",\"Ground\",           \n                                \"Ground manual\"),values=c('#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#a6cee3','brown',\"black\",\"purple\")) +\n  scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10,11,12),\n                     labels=c(\"Jan\", \"Feb\", \"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"))+theme_classic()+\n  theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1,size=6),strip.text = element_text(size = 5),)+\n  ylab(\"Precipitation (mm)\")+\n  labs(color = \"Gridded dataset\")+\n  labs(title=\"Seasonal Precipitation Patterns\")\n\nggsave(seasonality_plot,path='../plots' ,filename = \"../plots/seasonality.tiff\",  units=\"in\", width=9, height=6, dpi=600)\nseasonality_plot\n\n\n\n\n\n\n6.5.2 Figure 6. Interannual variability\nMutating the dataset to consider the existence of a second line representing another set of ground data coming from a secondary rain gauge in BCI.\n\nacp38_year&lt;-read.csv(\"../tables/acp38_year.csv\")\n\nacp38_year_long&lt;- acp38_year%&gt;%\n  tidyr::pivot_longer(cols=c(annual_precip,CHELSA1.2:TerraClimate), names_to = \"colname\", values_to = \"value\")%&gt;%\n  mutate(colname = case_when(\n    colname == \"CHELSA1.2\" ~ \"CHELSA 1.2\",\n    colname == \"CHELSA2.1\" ~ \"CHELSA 2.1\",\n    colname == \"CHELSA_EarthEnv\" ~ \"CHELSA EarthEnv\",\n    colname == \"CHIRPS2.0\" ~ \"CHIRPS 2.0\",\n    colname == \"CHELSAW5E5v1.0\" ~ \"CHELSA-W5E5v1.0\",\n    colname == \"TerraClimate\" ~ \"TerraClimate\",\n    colname == \"annual_precip\" ~ \"Ground\"\n  ))%&gt;%\n  filter((dataset_name == colname) | (dataset_name == \"CHELSA 1.2\" & colname == \"Ground\"))%&gt;%\n  mutate(dataset_name= ifelse(dataset_name == \"CHELSA 1.2\" & colname == \"Ground\"& site==\"BCICLEAR\",\"Ground manual\",dataset_name))%&gt;%\n  filter(!(site == \"BCICLEAR\" & dataset_name != \"Ground manual\"))%&gt;%\n  mutate(site=ifelse(site==\"BCICLEAR\",\"BCI\",site))%&gt;%\n  mutate(dataset_name=ifelse(dataset_name==\"CHELSA 1.2\"&colname==\"Ground\",\"Ground\",dataset_name))\n\nacp38_year_long$site &lt;- factor(acp38_year_long$site,      # Reordering group factor levels\n                    levels = c(\"SANMIGUEL\", \"AGUACLARA\", \"PELUCA\", \"BCI\",\"GUACHA\",\"CASCADAS\",\"GAMBOA\",\"PEDROMIGUEL\"))\nacp38_year_long$dataset_name&lt;-factor(acp38_year_long$dataset_name,\n                                     levels=c(\"CHELSA 1.2\",\"CHELSA 2.1\", \"CHELSA EarthEnv\",\"CHIRPS 2.0\",\"CHLESA-W5E5v1.0\",\"TerraClimate\",\"Ground\",\"Ground manual\"))\nacp38_year_long &lt;- acp38_year_long %&gt;%\n  filter(!is.na(dataset_name))\n\nPlot using ggplot2\n\ninterannual_plot&lt;-ggplot(acp38_year_long,aes(x=Year,y=value))+\n  geom_line(aes(color=dataset_name),linewidth=0.2)+\n  geom_point(aes(color=dataset_name),size=0.2)+\n  expand_limits(x=c(1970,2016),y=c(900,5900))+\n  facet_wrap(vars(site),ncol=4)+\n  theme_classic()+\n  ylab(\"Annual Total precipitation\")+\n  labs(title=\"Interannual Variability\",size=20)+\n  theme(strip.text = element_text(size = 5))+\n  labs(color=\"Gridded dataset\")+\n  scale_color_manual(values=c('#a65628','#e7298a', '#ff7f00','#984ea3','#4daf4a','black','purple'))\n\nyear&lt;- acp38_year_long %&gt;% filter(dataset_name==\"Ground\")%&gt;%\n  group_by(site) %&gt;% summarise(annual_mean=mean(value,na.rm=TRUE))\nyear2&lt;-acp38_year_long %&gt;% filter(dataset_name==\"Ground manual\")%&gt;%\n  group_by(site)%&gt;% summarise(annual_mean=mean(value,na.rm=TRUE))\n\ninterannual_plot&lt;-interannual_plot + geom_text(\n  data    = year,\n  mapping = aes(x = -Inf, y = 5350, label = paste0(\"Mean annual precipitation=\",round(annual_mean,0))),\n  hjust   = -0.1,\n  vjust   = -1,\n  size=2\n)+\n  geom_text(\n    data    = year2,\n    mapping = aes(x = 1992.5, y = 5350, label = paste0(\"(electronic), \",round(annual_mean,0),\"(manual)\")),\n    hjust   = -0.1,\n    vjust   = -1,\n    size=2)\n\n##annual\nggsave(interannual_plot,path='../plots' ,filename = \"../plots/interannual.tiff\",  units=\"in\", width=12, height=6, dpi=600)\n\nWarning: Removed 67 rows containing missing values (`geom_line()`).\n\n\nWarning: Removed 538 rows containing missing values (`geom_point()`).\n\ninterannual_plot\n\nWarning: Removed 67 rows containing missing values (`geom_line()`).\nRemoved 538 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "climate_panama_visualizations.html#figure-3.-annual-bias-and-january-to-april-bias",
    "href": "climate_panama_visualizations.html#figure-3.-annual-bias-and-january-to-april-bias",
    "title": "6  Plots and Figures",
    "section": "6.4 Figure 3. Annual Bias and January to April Bias",
    "text": "6.4 Figure 3. Annual Bias and January to April Bias\nCreate data frames for bias of each response variable\n\nprecipitation_data_subset &lt;- read.csv(file=\"../tables/climatologies.csv\")\ndata_sources &lt;- c(\"CHELSA.1.2\", \"CHELSA.2.1\", \"CHELSA.EarthEnv\", \"CHPclim\", \"WorldClim.2.1\", \"CHIRPS.2.0\", \"CHELSA.W5E5v1.0\", \"TerraClimate\", \"PBCOR.CHELSA.1.2\", \"PBCOR.CHPclim\", \"PBCOR.WorldClim.2.1\")\nsource_names &lt;- c(\"CHELSA 1.2\", \"CHELSA 2.1\", \"CHELSA EarthEnv\", \"CHPclim\", \"WorldClim 2.1\", \"CHIRPS 2.0\", \"CHELSA-W5E5v1.0\", \"TerraClimate\", \"PBCOR CHELSA 1.2\", \"PBCOR CHPclim\", \"PBCOR WorldClim 2.1\")\n\nbias_frame &lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"annual\",\"source\") %&gt;% \n  mutate(bias=NA)\nbias_frame_jfma&lt;- precipitation_data_subset %&gt;% \n  select(\"site\",\"longitude\",\"latitude\",\"jfma\",\"source\") %&gt;% \n  mutate(bias=NA)\n\nfor(i in seq_along(data_sources)) {\n  bias_frame[bias_frame$source == source_names[i], \"bias\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], data_sources[i]] - precipitation_data_subset[precipitation_data_subset$source == source_names[i], \"annual\"]\n}\njfma_sources &lt;- paste0(data_sources, \"_jfma\")\nfor(i in seq_along(jfma_sources)) {\n  bias_frame_jfma[bias_frame_jfma$source == source_names[i], \"bias\"] &lt;- precipitation_data_subset[precipitation_data_subset$source == source_names[i], jfma_sources[i]] - precipitation_data_subset[precipitation_data_subset$source == source_names[i], \"jfma\"]\n}\n\nConvert to other coordinate system for plotting purposes\n\nbias_frame &lt;- bias_frame %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"), crs = 4326) %&gt;%\n  st_transform(3857) %&gt;%\n  cbind(st_coordinates(.)) %&gt;%\n  rename(longitude_3857 = X, latitude_3857 = Y)%&gt;%\n  filter(source!=\"CHELSA-W5E5v1.0\")\n\nbias_frame_jfma &lt;- bias_frame_jfma %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"), crs = 4326) %&gt;%\n  st_transform(3857) %&gt;%\n  cbind(st_coordinates(.)) %&gt;%\n  rename(longitude_3857 = X, latitude_3857 = Y)%&gt;%\n  filter(source!=\"CHELSA-W5E5v1.0\")\n\nPlot the panels for each response variable.\n\nBias_annual_panels &lt;- basemap_ggplot(bbox) +\n  theme_void() +\n  geom_jitter(data = bias_frame,\n              aes(x = longitude_3857, y = latitude_3857, colour = bias),\n              size = 3, width = 0.3, height = 0.3) +\n  geom_jitter(data = bias_frame,\n              aes(x = longitude_3857, y = latitude_3857),\n              size = 3, shape = 21, width = 0.3, height = 0.3) +\n  scale_color_scico(palette = \"roma\", direction = -1) +\n  facet_wrap(~source,ncol=5) +\n  labs(color = \"Bias (mm)\") +\n  ggtitle(\"Annual Precipitation Bias\")\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nBias_jfma_panels &lt;- basemap_ggplot(bbox) +\n  theme_void() +\n  geom_jitter(data = bias_frame_jfma,\n              aes(x = longitude_3857, y = latitude_3857, colour = bias),\n              size = 3, width = 0.3, height = 0.3) +\n  geom_jitter(data = bias_frame_jfma,\n              aes(x = longitude_3857, y = latitude_3857),\n              size = 3, shape = 21, width = 0.3, height = 0.3) +\n  scale_color_scico(palette = \"roma\", direction = -1) +\n  facet_wrap(~source,ncol = 5) +\n  labs(color = \"Bias (mm)\") +\n  ggtitle(\"January to April Precipitation Bias\")\n\nLoading basemap 'world_shaded_relief' from map service 'esri'...\nUsing geom_raster() with maxpixels = 386529.\n\nBias_annual_panels &lt;- Bias_annual_panels +\n  theme(strip.text = element_text(size = 12),\n        plot.title = element_text(hjust = 0.5,size=14),\n        plot.background = element_rect(fill = \"white\"))\n\nBias_jfma_panels &lt;- Bias_jfma_panels +\n  theme(strip.text = element_text(size = 12),\n        plot.title = element_text(hjust = 0.5,size=14),\n        plot.background = element_rect(fill = \"white\"))\n\nggsave(Bias_annual_panels,path = '../plots',filename = \"annual_jfma_maps.tiff\",  units=\"in\", width=10, height=10, dpi=900)\nggsave(Bias_jfma_panels,path = '../plots',filename = \"bias_jfma_maps.tiff\",  units=\"in\", width=10, height=10, dpi=900)\nBias_annual_panels\n\n\n\nBias_jfma_panels\n\n\n\n\n\n6.4.1 Arrange both set of panels in a grid\n\nc&lt;-grid.arrange(Bias_annual_panels,Bias_jfma_panels,ncol = 1)\n\n\n\nggsave(c,path='../plots' ,filename = \"../plots/bias_figure.tiff\",  units=\"in\", width=20, height=10, dpi=600)\nggsave(c,path='../plots' ,filename = \"../plots/bias_figure.jpg\",  units=\"in\", width=20, height=10, dpi=300)\nc\n\nTableGrob (2 x 1) \"arrange\": 2 grobs\n  z     cells    name           grob\n1 1 (1-1,1-1) arrange gtable[layout]\n2 2 (2-2,1-1) arrange gtable[layout]"
  },
  {
    "objectID": "Download_gridded_precipitation.html#about",
    "href": "Download_gridded_precipitation.html#about",
    "title": "4  Download precipitation gridded products",
    "section": "4.1 About",
    "text": "4.1 About\nThe following code downloads, crops and calculates climatologies, monthly and yearly timeseries of 11 precipitation products. Careful consideration must be taken given that the downloads can take hours. The final dataset only weights 250 mb and it can be requested to the author to avoid the extensive download. If you only need one of the products, you should skip to that section."
  },
  {
    "objectID": "results_precip.html#library",
    "href": "results_precip.html#library",
    "title": "5  Rain Gauges vs Gridded Precipitation Analysis",
    "section": "5.1 Library",
    "text": "5.1 Library\n\n#\\warnings=False\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(raster)\n\nLoading required package: sp\n\n\nThe legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n\n\n\nAttaching package: 'raster'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(readxl)\nlibrary(kableExtra)\n\n\nAttaching package: 'kableExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\nlibrary(purrr)\nlibrary(sp)\nlibrary(tibble)\n\nRead in files for the analysis\n\nsetwd(\"C:/Users/Vicente/repo/ClimatePanama/ClimatePanamaBook\")\n# Read in the data\ndata_ground&lt;- read.csv(\"../tables/precipitation.csv\")\nstriStation&lt;- read.csv(\"../tables/stri_met_stations.csv\")\nacpStation&lt;- read.csv(\"../data_ground/met_data/ACP_data/cleanedVV/ACP_met_stations.csv\")\n\n#Global variables\nextentMap  &lt;- raster::extent(c(-80.2,-79.4, 8.8, 9.5))"
  },
  {
    "objectID": "results_precip.html#functions",
    "href": "results_precip.html#functions",
    "title": "5  Rain Gauges vs Gridded Precipitation Analysis",
    "section": "5.2 Functions",
    "text": "5.2 Functions\n\ncalculate_climatology&lt;- function(minyear,maxyear,data){\n    climatology&lt;- data %&gt;% \n        dplyr::select(year,site,annual,jfma)%&gt;%\n        filter(year&gt;=minyear&year&lt;=maxyear)%&gt;%\n        group_by(site)%&gt;%\n        summarize(annual=mean(annual,na.rm=TRUE),\n                jfma=mean(jfma,na.rm=TRUE))\n    return(climatology)\n}\n\nannual_pan&lt;-function(list,extent){\n  a&lt;-lapply(list, raster)\n  b&lt;-raster::stack(a)\n  c&lt;-raster::calc(b,sum)\n  d&lt;-raster::crop(c,extent)\n  return(d)\n}\n\njfma_pan &lt;- function(list, extent) {\n  a &lt;- lapply(head(list, 4), raster)\n  b &lt;- raster::stack(a)\n  c &lt;- raster::calc(b, sum)\n  d &lt;- raster::crop(c, extent)\n  return(d)\n}\n\nfind_nearest_non_na &lt;- function(raster_object, coordinate) {\n  non_na_cells &lt;- which(!is.na(getValues(raster_object)))\n  non_na_coords &lt;- xyFromCell(raster_object, non_na_cells)\n  dists &lt;- sp::spDists(x = matrix(coordinate, nrow = 1), y = non_na_coords, longlat = TRUE)\n  nearest_cell &lt;- non_na_cells[which.min(dists)]\n  return(getValues(raster_object)[nearest_cell])\n}\n\nextract_land &lt;- function(list_object, coordinate) {\n  result &lt;- numeric(nrow(coordinate))\n  for (i in seq_len(nrow(coordinate))) {\n    extracted_value &lt;- raster::extract(list_object, coordinate[i, ], na.rm = FALSE)\n    result[i] &lt;- ifelse(is.na(extracted_value), find_nearest_non_na(list_object, as.matrix(coordinate[i, ])), extracted_value)\n  }\n  return(result)\n}\n\nextract_sesonality&lt;-function(list_object,coordinate, max_search_distance){\n  vect&lt;- ifelse(!is.na(raster::extract(list_object,coordinate,na.rm=FALSE)),\n                raster::extract(list_object,coordinate,na.rm=FALSE),\n                raster::extract(list_object,nearestLand(coordinate, list_object, 4000),na.rm=FALSE))\n  return(vect)\n}\n#stats calculation\nstats&lt;-function(predicted,observed){\n  correlation&lt;-cor.test(observed,predicted)$estimate\n  rmse&lt;-sqrt(mean((predicted-observed)^2 , na.rm = TRUE ) )\n  bias&lt;- mean((predicted-observed),na.rm=TRUE)\n  mae&lt;-  mean(abs(predicted-observed), na.rm = TRUE)\n  done&lt;-c(correlation,rmse,bias,mae)\n  return(done)\n}\n\nList of data sets, their temporal extents and the location of the climatology tiffs for each of them\n\ndatasets_info &lt;- list(\n  list(start_year = 1979, end_year = 2013, dataset_name = \"CHELSA 1.2\",column_name=\"CHELSA1.2\", temporal = \"1979-2013\",path = \"../data_reanalysis/CHELSA 1.2/\"),\n  list(start_year = 1981, end_year = 2010, dataset_name = \"CHELSA 2.1\",column_name=\"CHELSA2.1\", temporal = \"1981-2010\", path = \"../data_reanalysis/CHELSA 2.1/\"),\n  list(start_year = 2003, end_year = 2016, dataset_name = \"CHELSA EarthEnv\",column_name=\"CHELSA_EarthEnv\", temporal = \"2003-2016\",path = \"../data_reanalysis/CHELSA EarthEnv/climatology\"),\n  list(start_year = 1980, end_year = 2009, dataset_name = \"CHPclim\",column_name=\"CHPclim\", temporal = \"1980-2009\", path = \"../data_reanalysis/CHPclim/\"),\n  list(start_year = 1970, end_year = 2000, dataset_name = \"WorldClim 2.1\",column_name=\"WorldClim2.1\", temporal = \"1970-2000\", path = \"../data_reanalysis/WorldClim 2.1\"),\n  list(start_year = 1981, end_year = 2016, dataset_name = \"CHIRPS 2.0\",column_name=\"CHIRPS2.0\",temporal = \"1981-2016\", path = \"../data_reanalysis/CHIRPS 2.0/climatology\"),\n  list(start_year = 1979, end_year = 2016, dataset_name = \"CHELSA-W5E5v1.0\",column_name=\"CHELSAW5E5v1.0\", temporal = \"1979-2016\",path = \"../data_reanalysis/CHELSA-W5E5v1.0/climatology\"),\n  list(start_year = 1981, end_year = 2010, dataset_name = \"TerraClimate\",column_name=\"TerraClimate\", temporal = \"1981-2010\", path = \"../data_reanalysis/TerraClimate\"),\n  list(start_year = 1979, end_year = 2013, dataset_name = \"PBCOR CHELSA 1.2\",column_name=\"PBCOR_CHELSA1.2\", temporal = \"1979-2013\", path = \"../data_reanalysis/PBCOR/CHELSA 1.2 corrected\"),\n  list(start_year = 1980, end_year = 2009, dataset_name = \"PBCOR CHPclim\",column_name=\"PBCOR_CHPclim\", temporal = \"1980-2009\", path = \"../data_reanalysis/PBCOR/CHPclim corrected\"),\n  list(start_year = 1970, end_year = 2000, dataset_name = \"PBCOR WorldClim 2.1\",column_name=\"PBCOR_WorldClim2.1\", temporal = \"1970-2000\", path = \"../data_reanalysis/PBCOR/WorldClim corrected\")\n)\n\nLoop through each dataset and calculate climatology\n\nclimatologies &lt;- datasets_info %&gt;%\n  map_df(function(info) {\n    calculate_climatology(info$start_year, info$end_year, data_ground) %&gt;%\n      mutate(source = info$dataset_name)}) %&gt;%\n  left_join(acpStation[, c('site', 'latitude', 'longitude', 'Elevation')], by = c(\"site\" = \"site\")) %&gt;%\n  left_join(striStation[, c('alias', 'latitude', 'longitude')], by = c(\"site\" = \"alias\")) %&gt;%\n  mutate(latitude = ifelse(is.na(latitude.x), latitude.y, latitude.x),\n         longitude = ifelse(is.na(longitude.x), longitude.y, longitude.x),\n         longitude = -1 * abs(longitude)) %&gt;%\n  dplyr::select(site, latitude, longitude, source, annual, jfma, Elevation)\n\n\n#extract the values at the coordinates for climatologies\nfor (source in datasets_info) {\n  files &lt;- list.files(source$path, pattern = \"\\\\.tif$\", full.names = TRUE)\n  annual_data &lt;- annual_pan(files, extentMap)\n  climatologies[[source$dataset_name]] &lt;- extract_land(annual_data,climatologies[,3:2])\n  jfma_data = jfma_pan(files, extentMap)\n  column_name = paste(source$dataset_name, \"_jfma\", sep = \"\")\n  climatologies[[column_name]] = extract_land(jfma_data, climatologies[,3:2])\n}\n\n\nwrite.csv(climatologies,file=\"../tables/climatologies.csv\")"
  },
  {
    "objectID": "results_precip.html#compute-a-results-data-frame",
    "href": "results_precip.html#compute-a-results-data-frame",
    "title": "5  Rain Gauges vs Gridded Precipitation Analysis",
    "section": "5.3 Compute a results data frame",
    "text": "5.3 Compute a results data frame\n\nresults &lt;- data.frame(\n  Source = character(),\n  Correlation = numeric(),\n  RMSE = numeric(),\n  Bias = numeric(),\n  MAE = numeric(),\n  stringsAsFactors = FALSE\n)\nresults_jfma &lt;-results\n\nfor (i in 1:length(datasets_info)) {\n  source &lt;- datasets_info[[i]]$dataset_name\n  predicted &lt;- climatologies[climatologies$source == source,][[source]]\n  observed &lt;- climatologies[climatologies$source == source,][[\"annual\"]]\n  stats_result &lt;- stats(predicted, observed)\n  \n  results &lt;- rbind(results, data.frame(\n    Source = source,\n    Correlation = stats_result[1],\n    RMSE = stats_result[2],\n    Bias = stats_result[3],\n    MAE = stats_result[4],\n    stringsAsFactors = FALSE\n  ))\n}\n\nfor (i in 1:length(datasets_info)) {\n  source &lt;- datasets_info[[i]]$dataset_name\n  column=paste0(source,\"_jfma\")\n  predicted &lt;- climatologies[climatologies$source == source,][[column]]\n  observed &lt;- climatologies[climatologies$source == source,][[\"jfma\"]]\n  stats_result &lt;- stats(predicted, observed)\n  \n  results_jfma &lt;- rbind(results_jfma, data.frame(\n    Source = source,\n    Correlation = stats_result[1],\n    RMSE = stats_result[2],\n    Bias = stats_result[3],\n    MAE = stats_result[4],\n    stringsAsFactors = FALSE\n  ))\n}\n\n#save both results as csv in tables folder\nwrite.csv(results, file= \"../tables/spatial_variation_annual.csv\")\nwrite.csv(results_jfma, file= \"../tables/spatial_variation_jfma.csv\")\n\nTables for visualizations\n\n#|warnings=False\nannual_table&lt;-results %&gt;%mutate(Correlation = round(Correlation, 2), RMSE= round(RMSE,0),Bias=round(Bias,0),MAE=round(MAE,0)) %&gt;% \n  rownames_to_column(var = \"rowname\") %&gt;%\n  dplyr::select(-rowname) %&gt;%\n  rename(\"Gridded Climate Product\" = \"Source\") %&gt;% rename(\"Mean bias (mm)\"=\"Bias\")%&gt;%\n  kbl(caption = \"Spatial variation among 31 sites in total annual precipitation\") %&gt;%\n  kable_classic(full_width = F)\nannual_table%&gt;%save_kable(\"../plots/spatial_annual_variation.png\",density=900)\nannual_table\n\n\nSpatial variation among 31 sites in total annual precipitation\n\n\nGridded Climate Product\nCorrelation\nRMSE\nMean bias (mm)\nMAE\n\n\n\n\nCHELSA 1.2\n0.79\n337\n77\n267\n\n\nCHELSA 2.1\n0.86\n492\n404\n451\n\n\nCHELSA EarthEnv\n0.85\n317\n74\n259\n\n\nCHPclim\n0.85\n379\n255\n334\n\n\nWorldClim 2.1\n0.64\n400\n-15\n329\n\n\nCHIRPS 2.0\n0.88\n276\n101\n227\n\n\nCHELSA-W5E5v1.0\n0.35\n493\n-8\n399\n\n\nTerraClimate\n0.73\n1579\n1534\n1534\n\n\nPBCOR CHELSA 1.2\n0.75\n372\n110\n303\n\n\nPBCOR CHPclim\n0.77\n548\n418\n466\n\n\nPBCOR WorldClim 2.1\n0.55\n420\n-11\n337\n\n\n\n\n\n\njfma_table&lt;-results_jfma %&gt;%mutate(Correlation = round(Correlation, 2), RMSE= round(RMSE,0),Bias=round(Bias,0),MAE=round(MAE,0)) %&gt;% \n  rownames_to_column(var = \"rowname\") %&gt;%\n  dplyr::select(-rowname) %&gt;%\n  rename(\"Gridded Climate Product\" = \"Source\") %&gt;% rename(\"Mean bias (mm)\"=\"Bias\")%&gt;%\n  kbl(caption = \"Spatial variation among 31 sites in January-to-April precipitation\") %&gt;%\n  kable_classic(full_width = F)\njfma_table%&gt;%save_kable(\"../plots/spatial_jfma_variation.png\",density=900)\njfma_table\n\n\nSpatial variation among 31 sites in January-to-April precipitation\n\n\nGridded Climate Product\nCorrelation\nRMSE\nMean bias (mm)\nMAE\n\n\n\n\nCHELSA 1.2\n0.62\n106\n-33\n62\n\n\nCHELSA 2.1\n0.60\n104\n-4\n69\n\n\nCHELSA EarthEnv\n0.66\n90\n5\n60\n\n\nCHPclim\n0.86\n90\n-45\n56\n\n\nWorldClim 2.1\n0.46\n119\n-50\n83\n\n\nCHIRPS 2.0\n0.82\n80\n-21\n48\n\n\nCHELSA-W5E5v1.0\n0.14\n123\n-8\n82\n\n\nTerraClimate\n0.84\n110\n-63\n73\n\n\nPBCOR CHELSA 1.2\n0.60\n106\n-32\n64\n\n\nPBCOR CHPclim\n0.81\n87\n-32\n53\n\n\nPBCOR WorldClim 2.1\n0.32\n130\n-58\n93"
  },
  {
    "objectID": "results_precip.html#seasonal-variation12-month",
    "href": "results_precip.html#seasonal-variation12-month",
    "title": "5  Rain Gauges vs Gridded Precipitation Analysis",
    "section": "5.4 Seasonal variation(12-month)",
    "text": "5.4 Seasonal variation(12-month)\n\n#|warnings=False\n#|output=False\n\nmonth &lt;- read.csv(\"../tables/monthly_ground.csv\")\nsites &lt;- read.csv(\"../tables/dfprecip.csv\")\n\n#Filter data based on conditions\nacp38 &lt;- month %&gt;%\n  filter(site %in% c(\"AGUACLARA\", \"SANMIGUEL\", \"BCI\", \"PELUCA\", \"BCICLEAR\", \"GUACHA\", \"CASCADAS\", \"PEDROMIGUEL\", \"GAMBOA\") & \n           Year &gt;= 1970 & Year &lt;= 2016) %&gt;%\n  mutate(monthlyPrecip = as.numeric(monthlyPrecip))\n\nacp38_full_extent &lt;- acp38 %&gt;%\n  group_by(site, Month) %&gt;%\n  summarise(mon_mean = mean(monthlyPrecip, na.rm = TRUE)) %&gt;%\n  mutate(temporal = \"1970-2016\", dataset_name = \"Ground\")\n\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n\n# Calculate climatology of the ground data for every specific temporal extent\nacp38_ag &lt;- lapply(datasets_info, function(dataset) {\n  acp38 %&gt;%\n    filter(Year &gt;= dataset$start_year & Year &lt;= dataset$end_year) %&gt;%\n    group_by(site, Month) %&gt;%\n    summarise(mon_mean = mean(monthlyPrecip, na.rm = TRUE)) %&gt;%\n    mutate(temporal = dataset$temporal, dataset_name = dataset$dataset_name)\n}) %&gt;% bind_rows()\n\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n\n# Combine the two data frames\nacp38_ag &lt;- bind_rows(acp38_ag, acp38_full_extent)\n\n#calculate climatology of the ground data  for every specific temporal extent\n\n# Match lat and long\nacp38_ag$long_dd &lt;- sites$long_dd[match(acp38_ag$site, sites$site)]\nacp38_ag$lat_dd &lt;- sites$lat_dd[match(acp38_ag$site, sites$site)]\n\n\n## loop for extraction of values of raster reanalyis climatologies for specific sites and month.\nfor (i in 1:length(datasets_info)) {\n  files_list &lt;- list.files(datasets_info[[i]]$path, pattern = \"\\\\.tif$\", full.names = TRUE)\n  raster_stack &lt;- raster::stack(files_list)\n  print(raster_stack)\n  acp38_ag[[datasets_info[[i]]$column_name]] &lt;- NA\n  for (j in 1:12) {\n    acp38_ag[acp38_ag$Month == j, datasets_info[[i]]$column_name] &lt;- extract_land(raster_stack[[j]], acp38_ag[acp38_ag$Month == j, c(\"long_dd\", \"lat_dd\")])\n  }\n}\n\nclass      : RasterStack \ndimensions : 84, 96, 8064, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.008333333, 0.008333333  (x, y)\nextent     : -80.20014, -79.40014, 8.799861, 9.499861  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : CHELSA_prec_01_V1.2_land, CHELSA_prec_02_V1.2_land, CHELSA_prec_03_V1.2_land, CHELSA_prec_04_V1.2_land, CHELSA_prec_05_V1.2_land, CHELSA_prec_06_V1.2_land, CHELSA_prec_07_V1.2_land, CHELSA_prec_08_V1.2_land, CHELSA_prec_09_V1.2_land, CHELSA_prec_10_V1.2_land, CHELSA_prec_11_V1.2_land, CHELSA_prec_12_V1.2_land \nmin values :                       32,                       15,                       12,                       58,                      201,                      186,                      174,                      185,                      184,                      245,                      250,                      123 \nmax values :                      130,                       81,                       65,                      165,                      478,                      470,                      516,                      503,                      430,                      505,                      678,                      421 \n\nclass      : RasterStack \ndimensions : 84, 96, 8064, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.008333333, 0.008333333  (x, y)\nextent     : -80.20014, -79.40014, 8.799861, 9.499861  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +a=6378137 +rf=298.257223600004 +no_defs \nnames      : CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1, CHELSA_pr//2010_V.2.1 \nmin values :                  23.1,                   6.3,                   9.2,                  55.4,                 218.6,                 218.4,                 202.8,                 207.0,                 230.7,                 272.4,                 256.2,                 129.1 \nmax values :                 147.2,                  78.6,                  81.0,                 210.4,                 439.8,                 425.9,                 434.5,                 462.8,                 441.8,                 550.2,                 677.8,                 394.8 \n\nclass      : RasterStack \ndimensions : 84, 96, 8064, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.008333333, 0.008333333  (x, y)\nextent     : -80.20014, -79.40014, 8.799861, 9.499861  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +a=6378137 +rf=298.257223600004 +no_defs \nnames      : CHELSA_EarthEnv_01, CHELSA_EarthEnv_02, CHELSA_EarthEnv_03, CHELSA_EarthEnv_04, CHELSA_EarthEnv_05, CHELSA_EarthEnv_06, CHELSA_EarthEnv_07, CHELSA_EarthEnv_08, CHELSA_EarthEnv_09, CHELSA_EarthEnv_10, CHELSA_EarthEnv_11, CHELSA_EarthEnv_12 \nmin values :           9.967692,           4.247693,           4.541429,          56.199287,         204.008575,         198.597137,         193.421432,         198.505707,         198.817856,         226.694290,         253.582855,         118.486427 \nmax values :          105.72153,           93.50539,           71.56357,          215.66714,          461.47784,          416.75571,          380.87143,          401.18073,          422.04428,          496.49286,          644.84497,          365.39429 \n\nclass      : RasterStack \ndimensions : 14, 16, 224, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.05, 0.05  (x, y)\nextent     : -80.2, -79.4, 8.799999, 9.499999  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : CHPclim.01, CHPclim.02, CHPclim.03, CHPclim.04, CHPclim.05, CHPclim.06, CHPclim.07, CHPclim.08, CHPclim.09, CHPclim.10, CHPclim.11, CHPclim.12 \nmin values :   9.385763,   4.343809,   3.142840,  30.975342, 199.116928, 178.440369, 156.801331, 166.117340, 163.008118, 205.203049, 188.607788,  80.520386 \nmax values :  222.30801,   98.31078,   70.35065,  139.68327,  451.92438,  464.73978,  455.86560,  416.44086,  362.84650,  450.04666,  697.16931,  434.16626 \n\nclass      : RasterStack \ndimensions : 84, 96, 8064, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.008333333, 0.008333333  (x, y)\nextent     : -80.2, -79.4, 8.8, 9.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : wc2.1_30s_prec_01, wc2.1_30s_prec_02, wc2.1_30s_prec_03, wc2.1_30s_prec_04, wc2.1_30s_prec_05, wc2.1_30s_prec_06, wc2.1_30s_prec_07, wc2.1_30s_prec_08, wc2.1_30s_prec_09, wc2.1_30s_prec_10, wc2.1_30s_prec_11, wc2.1_30s_prec_12 \nmin values :                12,                 1,                 4,                18,                92,               166,               156,               184,               180,               242,               188,                67 \nmax values :               363,               318,                65,               228,               435,               345,               438,               420,               515,               650,               528,               535 \n\nclass      : RasterStack \ndimensions : 14, 16, 224, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.05, 0.05  (x, y)\nextent     : -80.2, -79.4, 8.799999, 9.499999  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : CHIRPS_2.0_01, CHIRPS_2.0_02, CHIRPS_2.0_03, CHIRPS_2.0_04, CHIRPS_2.0_05, CHIRPS_2.0_06, CHIRPS_2.0_07, CHIRPS_2.0_08, CHIRPS_2.0_09, CHIRPS_2.0_10, CHIRPS_2.0_11, CHIRPS_2.0_12 \nmin values :         -9999,         -9999,         -9999,         -9999,         -9999,         -9999,         -9999,         -9999,         -9999,         -9999,         -9999,         -9999 \nmax values :     169.92207,      81.78521,      74.32395,     196.75325,     426.58408,     426.45419,     414.96738,     410.07974,     389.14008,     471.10889,     645.07782,     383.93066 \n\nclass      : RasterStack \ndimensions : 84, 96, 8064, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.008333333, 0.008333333  (x, y)\nextent     : -80.20014, -79.40014, 8.799861, 9.499861  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : CHELSA.W5E5v1.0_01, CHELSA.W5E5v1.0_02, CHELSA.W5E5v1.0_03, CHELSA.W5E5v1.0_04, CHELSA.W5E5v1.0_05, CHELSA.W5E5v1.0_06, CHELSA.W5E5v1.0_07, CHELSA.W5E5v1.0_08, CHELSA.W5E5v1.0_09, CHELSA.W5E5v1.0_10, CHELSA.W5E5v1.0_11, CHELSA.W5E5v1.0_12 \nmin values :           35.30504,           17.73936,           19.19988,           91.42046,          240.64845,          233.47482,          221.98279,          232.19325,          242.27477,          291.02182,          297.22968,          154.68848 \nmax values :           97.80727,           58.75489,           57.17332,          153.61481,          330.38998,          332.20578,          333.80051,          334.14523,          350.62143,          427.41306,          429.47620,          260.53519 \n\nclass      : RasterStack \ndimensions : 17, 19, 323, 21  (nrow, ncol, ncell, nlayers)\nresolution : 0.04166667, 0.04166667  (x, y)\nextent     : -80.20833, -79.41667, 8.791667, 9.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +ellps=WGS84 +no_defs \nnames      : TerraClim//_ppt.nc_01, TerraClim//_ppt.nc_02, TerraClim//_ppt.nc_03, TerraClim//_ppt.nc_04, TerraClim//_ppt.nc_05, TerraClim//_ppt.nc_06, TerraClim//_ppt.nc_07, TerraClim//_ppt.nc_08, TerraClim//_ppt.nc_09, TerraClim//0_ppt.nc_1, TerraClim//_ppt.nc_10, TerraClim//_ppt.nc_11, TerraClim//_ppt.nc_12, TerraClim//0_ppt.nc_2, TerraClim//0_ppt.nc_3, ... \nmin values :                  14.4,                   1.9,                  10.0,                  22.5,                 104.7,                 193.8,                 160.2,                 187.1,                 170.0,                  14.4,                 303.8,                 212.2,                  74.9,                   1.9,                  10.0, ... \nmax values :                 265.6,                 175.2,                  47.9,                 174.8,                 421.4,                 320.4,                 363.1,                 364.6,                 355.6,                 265.6,                 480.8,                 476.0,                 456.5,                 175.2,                  47.9, ... \n\nclass      : RasterStack \ndimensions : 14, 16, 224, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.05, 0.05  (x, y)\nextent     : -80.2, -79.4, 8.8, 9.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : CHELSA_V12.nc_01, CHELSA_V12.nc_02, CHELSA_V12.nc_03, CHELSA_V12.nc_04, CHELSA_V12.nc_05, CHELSA_V12.nc_06, CHELSA_V12.nc_07, CHELSA_V12.nc_08, CHELSA_V12.nc_09, CHELSA_V12.nc_10, CHELSA_V12.nc_11, CHELSA_V12.nc_12 \nmin values :          36.0000,          18.0000,          13.3127,          65.3528,         216.3028,         203.0000,         196.0000,         207.0000,         201.0000,         265.0000,         276.0847,         143.8915 \nmax values :        132.24969,         81.51313,         66.68668,        157.74997,        478.00000,        470.00000,        516.00000,        503.00000,        428.00000,        538.67712,        669.51953,        414.00000 \n\nclass      : RasterStack \ndimensions : 14, 16, 224, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.05, 0.05  (x, y)\nextent     : -80.2, -79.4, 8.8, 9.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : CHPclim_V1.nc_01, CHPclim_V1.nc_02, CHPclim_V1.nc_03, CHPclim_V1.nc_04, CHPclim_V1.nc_05, CHPclim_V1.nc_06, CHPclim_V1.nc_07, CHPclim_V1.nc_08, CHPclim_V1.nc_09, CHPclim_V1.nc_10, CHPclim_V1.nc_11, CHPclim_V1.nc_12 \nmin values :         17.63897,         10.11230,          4.00137,         39.30390,        264.16360,        229.00375,        199.41093,        208.55440,        209.94670,        281.65387,        281.65958,        122.62119 \nmax values :         222.3080,         107.6646,          79.5810,         153.0745,         489.0135,         491.5053,         508.7510,         458.6902,         379.7699,         470.9240,         754.7354,         477.3025 \n\nclass      : RasterStack \ndimensions : 14, 16, 224, 12  (nrow, ncol, ncell, nlayers)\nresolution : 0.05, 0.05  (x, y)\nextent     : -80.2, -79.4, 8.8, 9.5  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nnames      : WorldClim_V2.nc_01, WorldClim_V2.nc_02, WorldClim_V2.nc_03, WorldClim_V2.nc_04, WorldClim_V2.nc_05, WorldClim_V2.nc_06, WorldClim_V2.nc_07, WorldClim_V2.nc_08, WorldClim_V2.nc_09, WorldClim_V2.nc_10, WorldClim_V2.nc_11, WorldClim_V2.nc_12 \nmin values :           15.00000,            6.00000,            7.00000,           18.47886,           94.00000,          167.00000,          158.00000,          186.00000,          183.00000,          264.00000,          235.00000,           73.00000 \nmax values :           249.8882,           115.0261,            51.0000,           219.6414,           440.3257,           344.0000,           419.0000,           403.0000,           525.3091,           582.0103,           476.0000,           465.6878 \n\nwrite.csv(acp38_ag,\"../tables/acp38_ag.csv\")\n\nAfter extracting values, we can run some statistics\n\nsites_unique &lt;- unique(acp38_ag$site)\nall_correlations &lt;- data.frame( site = character(),\n                                dataset=character(),\n                                Correlation = numeric(),\n                                RMSE = numeric(),\n                                stringsAsFactors = FALSE)\n\n#loop over the dataset and each of the sites for calculating the correlation and the rmse\nfor (j in seq_along(datasets_info)){\n  print(datasets_info[[j]]$dataset_name)\n  for (i in seq_along(sites_unique))  {\n    temporal_range &lt;- datasets_info[[j]]$temporal\n    name &lt;- datasets_info[[j]]$dataset_name\n    col_name &lt;- datasets_info[[j]]$column_name\n    site_data &lt;- acp38_ag[acp38_ag$site == sites_unique[i] & acp38_ag$temporal == temporal_range & acp38_ag$dataset_name==name, ]\n    cor_test_result &lt;- cor.test(site_data$mon_mean, unlist(site_data[,col_name]))$estimate\n    rmse&lt;-sqrt(mean(unlist(site_data[,col_name])-site_data$mon_mean)^2)\n    new_row &lt;- data.frame(site = sites_unique[i], dataset = name, Correlation = cor_test_result, RMSE = rmse)\n    all_correlations &lt;- rbind(all_correlations, new_row)\n  }\n}\n\n[1] \"CHELSA 1.2\"\n[1] \"CHELSA 2.1\"\n[1] \"CHELSA EarthEnv\"\n[1] \"CHPclim\"\n[1] \"WorldClim 2.1\"\n[1] \"CHIRPS 2.0\"\n[1] \"CHELSA-W5E5v1.0\"\n[1] \"TerraClimate\"\n[1] \"PBCOR CHELSA 1.2\"\n[1] \"PBCOR CHPclim\"\n[1] \"PBCOR WorldClim 2.1\"\n\nall_averages&lt;- data.frame(datset=character(),\n                          Correlation= numeric(),\n                          RMSE=numeric())\n\ndatasets&lt;- unique(all_correlations$dataset)\nfor (i in seq_along(datasets)){\n  dataset_name=datasets[i]\n  mean_correlation= mean(all_correlations[all_correlations$dataset==dataset_name,]$Correlation)\n  mean_rsme= mean(all_correlations[all_correlations$dataset==dataset_name,]$RMSE)\n  new_row= data.frame(dataset=dataset_name,Correlation=mean_correlation,RMSE=mean_rsme)\n  all_averages= rbind(all_averages,new_row)\n}\nwrite.csv(all_averages, file= \"../tables/seasonal_variation.csv\")\n\nPlot the statistics in a table\n\nseasonality_table&lt;-all_averages%&gt;%mutate(Correlation = round(Correlation, 2), RMSE= round(RMSE,0)) %&gt;% \n  rownames_to_column(var = \"rowname\") %&gt;%\n  dplyr::select(-rowname) %&gt;%\n  rename(\"Gridded Climate Product\" = \"dataset\")%&gt;%\n  kbl(caption = \"Seasonal variation within 9 sites\") %&gt;%\n  kable_classic(full_width = F)\nseasonality_table%&gt;%save_kable(\"../plots/seasonal_variation.png\",density=900)\nseasonality_table\n\n\nSeasonal variation within 9 sites\n\n\nGridded Climate Product\nCorrelation\nRMSE\n\n\n\n\nCHELSA 1.2\n0.97\n31\n\n\nCHELSA 2.1\n0.97\n42\n\n\nCHELSA EarthEnv\n0.94\n24\n\n\nCHPclim\n0.96\n29\n\n\nWorldClim 2.1\n0.95\n34\n\n\nCHIRPS 2.0\n0.98\n23\n\n\nCHELSA-W5E5v1.0\n0.97\n42\n\n\nTerraClimate\n0.72\n34\n\n\nPBCOR CHELSA 1.2\n0.97\n28\n\n\nPBCOR CHPclim\n0.96\n36\n\n\nPBCOR WorldClim 2.1\n0.96\n36"
  },
  {
    "objectID": "results_precip.html#interannual-variability",
    "href": "results_precip.html#interannual-variability",
    "title": "5  Rain Gauges vs Gridded Precipitation Analysis",
    "section": "5.5 Interannual variability",
    "text": "5.5 Interannual variability\n\n# create a list which contains the temporal extent and location of files \ndatasets_yearly &lt;- list(\n  list(dataset_name = \"CHELSA 1.2\",column_name=\"CHELSA1.2\", temporal = \"1979-2013\",path = \"../data_reanalysis/CHELSA 1.2/yearly\"),\n  list(dataset_name = \"CHELSA 2.1\",column_name=\"CHELSA2.1\", temporal = \"1981-2010\", path = \"../data_reanalysis/CHELSA 2.1/yearly\"),\n  list(dataset_name = \"CHELSA EarthEnv\",column_name=\"CHELSA_EarthEnv\", temporal = \"2003-2016\",path = \"../data_reanalysis/CHELSA EarthEnv/yearly\"),\n  list(dataset_name = \"CHIRPS 2.0\",column_name=\"CHIRPS2.0\",temporal = \"1981-2016\", path = \"../data_reanalysis/CHIRPS 2.0/yearly\"),\n  list(dataset_name = \"CHELSA-W5E5v1.0\",column_name=\"CHELSAW5E5v1.0\", temporal = \"1979-2016\",path = \"../data_reanalysis/CHELSA-W5E5v1.0/yearly\"),\n  list(dataset_name = \"TerraClimate\",column_name=\"TerraClimate\", temporal = \"1979-2016\", path = \"../data_reanalysis/TerraClimate/yearly\")\n)\n\nGroup by year and extract for each spatial point\n\nacp38_year &lt;- lapply(datasets_yearly, function(dataset) {\n  acp38 %&gt;% group_by(Year,site)%&gt;%\n    summarise(annual_precip=sum(monthlyPrecip))%&gt;%\n    mutate(long_dd=sites$long_dd[match(site, sites$site)])%&gt;%\n    mutate(lat_dd=sites$lat_dd[match(site,sites$site)])%&gt;% \n    mutate(temporal = dataset$temporal, dataset_name = dataset$dataset_name)\n})%&gt;% bind_rows()\n\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n\nfor (j in seq_along(datasets_yearly)){\n    print(datasets_yearly[[j]]$dataset_name)\n    files_list &lt;- list.files(datasets_yearly[[j]]$path, pattern = \".tif\", full.names = TRUE)\n    raster_stack&lt;- raster::stack(files_list)\n    acp38_year[[datasets_yearly[[j]]$column_name]] &lt;- NA\n    for (i in unique(acp38_year$Year)) {\n      if (any(grepl(i,names(raster_stack)))) {\n        print(paste(\"There is a raster with the year\", i))\n        layer_index&lt;-grep(i, names(raster_stack)) \n        raster_layer &lt;- raster_stack[[layer_index]]\n        acp38_year[acp38_year$Year==as.integer(i),datasets_yearly[[j]]$column_name]&lt;- extract_land(raster_layer,acp38_year[acp38_year$Year==as.integer(i),c(\"long_dd\",\"lat_dd\")])\n      } else {\n        print(paste(\"No raster found for the year\", i))\n      }\n    }\n}\n\n[1] \"CHELSA 1.2\"\n[1] \"No raster found for the year 1970\"\n[1] \"No raster found for the year 1971\"\n[1] \"No raster found for the year 1972\"\n[1] \"No raster found for the year 1973\"\n[1] \"No raster found for the year 1974\"\n[1] \"No raster found for the year 1975\"\n[1] \"No raster found for the year 1976\"\n[1] \"No raster found for the year 1977\"\n[1] \"No raster found for the year 1978\"\n[1] \"There is a raster with the year 1979\"\n[1] \"There is a raster with the year 1980\"\n[1] \"There is a raster with the year 1981\"\n[1] \"There is a raster with the year 1982\"\n[1] \"There is a raster with the year 1983\"\n[1] \"There is a raster with the year 1984\"\n[1] \"There is a raster with the year 1985\"\n[1] \"There is a raster with the year 1986\"\n[1] \"There is a raster with the year 1987\"\n[1] \"There is a raster with the year 1988\"\n[1] \"There is a raster with the year 1989\"\n[1] \"There is a raster with the year 1990\"\n[1] \"There is a raster with the year 1991\"\n[1] \"There is a raster with the year 1992\"\n[1] \"There is a raster with the year 1993\"\n[1] \"There is a raster with the year 1994\"\n[1] \"There is a raster with the year 1995\"\n[1] \"There is a raster with the year 1996\"\n[1] \"There is a raster with the year 1997\"\n[1] \"There is a raster with the year 1998\"\n[1] \"There is a raster with the year 1999\"\n[1] \"There is a raster with the year 2000\"\n[1] \"There is a raster with the year 2001\"\n[1] \"There is a raster with the year 2002\"\n[1] \"There is a raster with the year 2003\"\n[1] \"There is a raster with the year 2004\"\n[1] \"There is a raster with the year 2005\"\n[1] \"There is a raster with the year 2006\"\n[1] \"There is a raster with the year 2007\"\n[1] \"There is a raster with the year 2008\"\n[1] \"There is a raster with the year 2009\"\n[1] \"There is a raster with the year 2010\"\n[1] \"There is a raster with the year 2011\"\n[1] \"There is a raster with the year 2012\"\n[1] \"There is a raster with the year 2013\"\n[1] \"No raster found for the year 2014\"\n[1] \"No raster found for the year 2015\"\n[1] \"No raster found for the year 2016\"\n[1] \"CHELSA 2.1\"\n[1] \"No raster found for the year 1970\"\n[1] \"No raster found for the year 1971\"\n[1] \"No raster found for the year 1972\"\n[1] \"No raster found for the year 1973\"\n[1] \"No raster found for the year 1974\"\n[1] \"No raster found for the year 1975\"\n[1] \"No raster found for the year 1976\"\n[1] \"No raster found for the year 1977\"\n[1] \"No raster found for the year 1978\"\n[1] \"There is a raster with the year 1979\"\n[1] \"There is a raster with the year 1980\"\n[1] \"There is a raster with the year 1981\"\n[1] \"There is a raster with the year 1982\"\n[1] \"There is a raster with the year 1983\"\n[1] \"There is a raster with the year 1984\"\n[1] \"There is a raster with the year 1985\"\n[1] \"There is a raster with the year 1986\"\n[1] \"There is a raster with the year 1987\"\n[1] \"There is a raster with the year 1988\"\n[1] \"There is a raster with the year 1989\"\n[1] \"There is a raster with the year 1990\"\n[1] \"There is a raster with the year 1991\"\n[1] \"There is a raster with the year 1992\"\n[1] \"There is a raster with the year 1993\"\n[1] \"There is a raster with the year 1994\"\n[1] \"There is a raster with the year 1995\"\n[1] \"There is a raster with the year 1996\"\n[1] \"There is a raster with the year 1997\"\n[1] \"There is a raster with the year 1998\"\n[1] \"There is a raster with the year 1999\"\n[1] \"There is a raster with the year 2000\"\n[1] \"There is a raster with the year 2001\"\n[1] \"There is a raster with the year 2002\"\n[1] \"There is a raster with the year 2003\"\n[1] \"There is a raster with the year 2004\"\n[1] \"There is a raster with the year 2005\"\n[1] \"There is a raster with the year 2006\"\n[1] \"There is a raster with the year 2007\"\n[1] \"There is a raster with the year 2008\"\n[1] \"There is a raster with the year 2009\"\n[1] \"There is a raster with the year 2010\"\n[1] \"There is a raster with the year 2011\"\n[1] \"There is a raster with the year 2012\"\n[1] \"There is a raster with the year 2013\"\n[1] \"There is a raster with the year 2014\"\n[1] \"There is a raster with the year 2015\"\n[1] \"There is a raster with the year 2016\"\n[1] \"CHELSA EarthEnv\"\n[1] \"No raster found for the year 1970\"\n[1] \"No raster found for the year 1971\"\n[1] \"No raster found for the year 1972\"\n[1] \"No raster found for the year 1973\"\n[1] \"No raster found for the year 1974\"\n[1] \"No raster found for the year 1975\"\n[1] \"No raster found for the year 1976\"\n[1] \"No raster found for the year 1977\"\n[1] \"No raster found for the year 1978\"\n[1] \"No raster found for the year 1979\"\n[1] \"No raster found for the year 1980\"\n[1] \"No raster found for the year 1981\"\n[1] \"No raster found for the year 1982\"\n[1] \"No raster found for the year 1983\"\n[1] \"No raster found for the year 1984\"\n[1] \"No raster found for the year 1985\"\n[1] \"No raster found for the year 1986\"\n[1] \"No raster found for the year 1987\"\n[1] \"No raster found for the year 1988\"\n[1] \"No raster found for the year 1989\"\n[1] \"No raster found for the year 1990\"\n[1] \"No raster found for the year 1991\"\n[1] \"No raster found for the year 1992\"\n[1] \"No raster found for the year 1993\"\n[1] \"No raster found for the year 1994\"\n[1] \"No raster found for the year 1995\"\n[1] \"No raster found for the year 1996\"\n[1] \"No raster found for the year 1997\"\n[1] \"No raster found for the year 1998\"\n[1] \"No raster found for the year 1999\"\n[1] \"No raster found for the year 2000\"\n[1] \"No raster found for the year 2001\"\n[1] \"No raster found for the year 2002\"\n[1] \"There is a raster with the year 2003\"\n[1] \"There is a raster with the year 2004\"\n[1] \"There is a raster with the year 2005\"\n[1] \"There is a raster with the year 2006\"\n[1] \"There is a raster with the year 2007\"\n[1] \"There is a raster with the year 2008\"\n[1] \"There is a raster with the year 2009\"\n[1] \"There is a raster with the year 2010\"\n[1] \"There is a raster with the year 2011\"\n[1] \"There is a raster with the year 2012\"\n[1] \"There is a raster with the year 2013\"\n[1] \"There is a raster with the year 2014\"\n[1] \"There is a raster with the year 2015\"\n[1] \"No raster found for the year 2016\"\n[1] \"CHIRPS 2.0\"\n[1] \"No raster found for the year 1970\"\n[1] \"No raster found for the year 1971\"\n[1] \"No raster found for the year 1972\"\n[1] \"No raster found for the year 1973\"\n[1] \"No raster found for the year 1974\"\n[1] \"No raster found for the year 1975\"\n[1] \"No raster found for the year 1976\"\n[1] \"No raster found for the year 1977\"\n[1] \"No raster found for the year 1978\"\n[1] \"No raster found for the year 1979\"\n[1] \"No raster found for the year 1980\"\n[1] \"There is a raster with the year 1981\"\n[1] \"There is a raster with the year 1982\"\n[1] \"There is a raster with the year 1983\"\n[1] \"There is a raster with the year 1984\"\n[1] \"There is a raster with the year 1985\"\n[1] \"There is a raster with the year 1986\"\n[1] \"There is a raster with the year 1987\"\n[1] \"There is a raster with the year 1988\"\n[1] \"There is a raster with the year 1989\"\n[1] \"There is a raster with the year 1990\"\n[1] \"There is a raster with the year 1991\"\n[1] \"There is a raster with the year 1992\"\n[1] \"There is a raster with the year 1993\"\n[1] \"There is a raster with the year 1994\"\n[1] \"There is a raster with the year 1995\"\n[1] \"There is a raster with the year 1996\"\n[1] \"There is a raster with the year 1997\"\n[1] \"There is a raster with the year 1998\"\n[1] \"There is a raster with the year 1999\"\n[1] \"There is a raster with the year 2000\"\n[1] \"There is a raster with the year 2001\"\n[1] \"There is a raster with the year 2002\"\n[1] \"There is a raster with the year 2003\"\n[1] \"There is a raster with the year 2004\"\n[1] \"There is a raster with the year 2005\"\n[1] \"There is a raster with the year 2006\"\n[1] \"There is a raster with the year 2007\"\n[1] \"There is a raster with the year 2008\"\n[1] \"There is a raster with the year 2009\"\n[1] \"There is a raster with the year 2010\"\n[1] \"There is a raster with the year 2011\"\n[1] \"There is a raster with the year 2012\"\n[1] \"There is a raster with the year 2013\"\n[1] \"There is a raster with the year 2014\"\n[1] \"There is a raster with the year 2015\"\n[1] \"There is a raster with the year 2016\"\n[1] \"CHELSA-W5E5v1.0\"\n[1] \"No raster found for the year 1970\"\n[1] \"No raster found for the year 1971\"\n[1] \"No raster found for the year 1972\"\n[1] \"No raster found for the year 1973\"\n[1] \"No raster found for the year 1974\"\n[1] \"No raster found for the year 1975\"\n[1] \"No raster found for the year 1976\"\n[1] \"No raster found for the year 1977\"\n[1] \"No raster found for the year 1978\"\n[1] \"There is a raster with the year 1979\"\n[1] \"There is a raster with the year 1980\"\n[1] \"There is a raster with the year 1981\"\n[1] \"There is a raster with the year 1982\"\n[1] \"There is a raster with the year 1983\"\n[1] \"There is a raster with the year 1984\"\n[1] \"There is a raster with the year 1985\"\n[1] \"There is a raster with the year 1986\"\n[1] \"There is a raster with the year 1987\"\n[1] \"There is a raster with the year 1988\"\n[1] \"There is a raster with the year 1989\"\n[1] \"There is a raster with the year 1990\"\n[1] \"There is a raster with the year 1991\"\n[1] \"There is a raster with the year 1992\"\n[1] \"There is a raster with the year 1993\"\n[1] \"There is a raster with the year 1994\"\n[1] \"There is a raster with the year 1995\"\n[1] \"There is a raster with the year 1996\"\n[1] \"There is a raster with the year 1997\"\n[1] \"There is a raster with the year 1998\"\n[1] \"There is a raster with the year 1999\"\n[1] \"There is a raster with the year 2000\"\n[1] \"There is a raster with the year 2001\"\n[1] \"There is a raster with the year 2002\"\n[1] \"There is a raster with the year 2003\"\n[1] \"There is a raster with the year 2004\"\n[1] \"There is a raster with the year 2005\"\n[1] \"There is a raster with the year 2006\"\n[1] \"There is a raster with the year 2007\"\n[1] \"There is a raster with the year 2008\"\n[1] \"There is a raster with the year 2009\"\n[1] \"There is a raster with the year 2010\"\n[1] \"There is a raster with the year 2011\"\n[1] \"There is a raster with the year 2012\"\n[1] \"There is a raster with the year 2013\"\n[1] \"There is a raster with the year 2014\"\n[1] \"There is a raster with the year 2015\"\n[1] \"There is a raster with the year 2016\"\n[1] \"TerraClimate\"\n[1] \"There is a raster with the year 1970\"\n[1] \"There is a raster with the year 1971\"\n[1] \"There is a raster with the year 1972\"\n[1] \"There is a raster with the year 1973\"\n[1] \"There is a raster with the year 1974\"\n[1] \"There is a raster with the year 1975\"\n[1] \"There is a raster with the year 1976\"\n[1] \"There is a raster with the year 1977\"\n[1] \"There is a raster with the year 1978\"\n[1] \"There is a raster with the year 1979\"\n[1] \"There is a raster with the year 1980\"\n[1] \"There is a raster with the year 1981\"\n[1] \"There is a raster with the year 1982\"\n[1] \"There is a raster with the year 1983\"\n[1] \"There is a raster with the year 1984\"\n[1] \"There is a raster with the year 1985\"\n[1] \"There is a raster with the year 1986\"\n[1] \"There is a raster with the year 1987\"\n[1] \"There is a raster with the year 1988\"\n[1] \"There is a raster with the year 1989\"\n[1] \"There is a raster with the year 1990\"\n[1] \"There is a raster with the year 1991\"\n[1] \"There is a raster with the year 1992\"\n[1] \"There is a raster with the year 1993\"\n[1] \"There is a raster with the year 1994\"\n[1] \"There is a raster with the year 1995\"\n[1] \"There is a raster with the year 1996\"\n[1] \"There is a raster with the year 1997\"\n[1] \"There is a raster with the year 1998\"\n[1] \"There is a raster with the year 1999\"\n[1] \"There is a raster with the year 2000\"\n[1] \"There is a raster with the year 2001\"\n[1] \"There is a raster with the year 2002\"\n[1] \"There is a raster with the year 2003\"\n[1] \"There is a raster with the year 2004\"\n[1] \"There is a raster with the year 2005\"\n[1] \"There is a raster with the year 2006\"\n[1] \"There is a raster with the year 2007\"\n[1] \"There is a raster with the year 2008\"\n[1] \"There is a raster with the year 2009\"\n[1] \"There is a raster with the year 2010\"\n[1] \"There is a raster with the year 2011\"\n[1] \"There is a raster with the year 2012\"\n[1] \"There is a raster with the year 2013\"\n[1] \"There is a raster with the year 2014\"\n[1] \"There is a raster with the year 2015\"\n[1] \"There is a raster with the year 2016\"\n\n\nCalculate the statistics for interannual variability per site and compute averages across 9 sites\n\nsites_unique_year &lt;- unique(acp38_year$site)\nall_correlations_year &lt;- data.frame( site = character(),\n                                dataset=character(),\n                                Correlation = numeric(),\n                                RMSE = numeric(),\n                                stringsAsFactors = FALSE)\n\n\nfor (j in seq_along(datasets_yearly)){\n  print(datasets_yearly[[j]]$dataset_name)\n  for (i in seq_along(sites_unique_year))  {\n    temporal_range &lt;- datasets_yearly[[j]]$temporal\n    name &lt;- datasets_yearly[[j]]$dataset_name\n    col_name &lt;- datasets_yearly[[j]]$column_name\n    site_data &lt;- acp38_year[acp38_year$site == sites_unique_year[i] & acp38_year$temporal == temporal_range & acp38_year$dataset_name==name,]\n    cor_test_result &lt;- cor.test(as.numeric(site_data$annual_precip), as.numeric(unlist(site_data[, col_name])), na.rm = TRUE)$estimate\n    rmse &lt;- sqrt(mean((as.numeric(unlist(site_data[, col_name])) - site_data$annual_precip)^2, na.rm = TRUE))\n    new_row &lt;- data.frame(site = sites_unique_year[i], dataset = name, Correlation = cor_test_result, RMSE = rmse)\n    all_correlations_year &lt;- rbind(all_correlations_year, new_row)\n  }\n}\n\n[1] \"CHELSA 1.2\"\n[1] \"CHELSA 2.1\"\n[1] \"CHELSA EarthEnv\"\n[1] \"CHIRPS 2.0\"\n[1] \"CHELSA-W5E5v1.0\"\n[1] \"TerraClimate\"\n\nsummary_table &lt;- all_correlations_year %&gt;%\n  group_by(dataset) %&gt;%\n  summarise(Correlation = mean(Correlation, na.rm = TRUE),\n            RMSE = mean(RMSE, na.rm = TRUE))\n\ninterannual_table &lt;- summary_table %&gt;%\n  mutate(Correlation = round(Correlation, 2), RMSE = round(RMSE, 0)) %&gt;%\n  rename(\"Mean Correlation\" = Correlation, \"Mean RMSE\" = RMSE) %&gt;%\n  rownames_to_column(var = \"Dataset\") %&gt;%\n  kbl(caption = \"Summary of Correlation and RMSE by Dataset\") \ninterannual_table%&gt;% kable_classic(full_width = FALSE)%&gt;%save_kable(\"../plots/interannual_table.png\",density=900)\nwrite.csv(summary_table, file= \"../tables/interannual_variation.csv\")\nwrite.csv(acp38_year, file = \"../tables/acp38_year.csv\")\ninterannual_table\n\n\nSummary of Correlation and RMSE by Dataset\n\n\nDataset\ndataset\nMean Correlation\nMean RMSE\n\n\n\n\n1\nCHELSA 1.2\n0.31\n836\n\n\n2\nCHELSA 2.1\n0.57\n608\n\n\n3\nCHELSA EarthEnv\n0.59\n625\n\n\n4\nCHELSA-W5E5v1.0\n0.69\n657\n\n\n5\nCHIRPS 2.0\n0.74\n463\n\n\n6\nTerraClimate\n0.27\n648"
  }
]